{"label":"Service Backlog","folder":{"id":"00lB0000000ubwgIAA"},"state":{"dataSourceLinks":[],"gridLayouts":[{"maxWidth":1360,"name":"Service Wave","numColumns":48,"pages":[{"widgets":[{"colspan":10,"column":1,"name":"text_Backlog","row":1,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":3,"column":45,"name":"link_Backlog","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#634F95","borderEdges":["bottom"],"borderRadius":0,"borderWidth":2}},{"colspan":48,"column":0,"name":"container_6","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#9271E8","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":1,"name":"listselector_Support_Type_c_1","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":6,"column":8,"name":"listselector_Product_c_1","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":6,"column":15,"name":"listselector_Type_1","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":6,"column":22,"name":"listselector_RecordType_Name_1","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":9,"column":38,"name":"listselector_Time_Selection","row":3,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderEdges":[]}},{"colspan":48,"column":0,"name":"container_7","row":3,"rowspan":2,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":["top"],"borderRadius":0,"borderWidth":20}},{"colspan":8,"column":1,"name":"text_Backlog_Changes","row":5,"rowspan":2,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":[],"borderWidth":8}},{"colspan":19,"column":0,"name":"container_8","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":24,"name":"listselector_Backlog_Trend_Group_Select","row":5,"rowspan":1,"widgetStyle":{"borderEdges":[]}},{"colspan":13,"column":19,"name":"container_9","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["top"],"borderRadius":0,"borderWidth":30}},{"colspan":14,"column":33,"name":"text_Backlog_Trend","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"container_11","row":5,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":30,"column":1,"name":"chart_waterfall_chart","row":8,"rowspan":6,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":[],"borderWidth":8}},{"colspan":32,"column":0,"name":"container_3","row":7,"rowspan":8,"widgetStyle":{"borderEdges":["bottom"]}},{"colspan":7,"column":33,"name":"number_Open_Case_Count","row":7,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":2}},{"colspan":6,"column":41,"name":"number_compare_backlog_Last_Year","row":7,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(compare_backlog_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":41,"name":"number_Compare_Backlog","row":8,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderRadius":0,"borderWidth":4}},{"colspan":14,"column":33,"name":"number_days_to_close","row":14,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":8,"column":40,"name":"container_1","row":7,"rowspan":1,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":14,"column":1,"name":"text_Cases_Created_This_Year_vs_Last_Year","row":15,"rowspan":2,"widgetStyle":{"borderColor":"#FFFFFF","borderEdges":[],"borderWidth":8}},{"colspan":19,"column":0,"name":"container_13","row":15,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":13,"column":19,"name":"container_14","row":15,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#FFFFFF","borderEdges":["top"],"borderRadius":0,"borderWidth":30}},{"colspan":14,"column":33,"name":"text_Case_Trend","row":15,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(9, 26, 62)","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"container_12","row":15,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":28,"column":2,"name":"chart_Created_Cases_Over_Time","row":18,"rowspan":8,"widgetStyle":{"borderEdges":[]}},{"colspan":32,"column":0,"name":"container_4","row":17,"rowspan":10,"widgetStyle":{"borderColor":"#E6ECF2","borderEdges":[],"borderWidth":4}},{"colspan":7,"column":33,"name":"number_new_case_count_this_week","row":17,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":41,"name":"number_allcases_Last_Year","row":17,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(allcases_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":41,"name":"number_allcases_Prev_Period","row":18,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(allcases_Prev_Period.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":8,"column":32,"name":"container_2","row":17,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":4}},{"colspan":7,"column":33,"name":"number_Closed_Case_Count_this_week","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":41,"name":"number_closedcases_Last_Year","row":20,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(closedcases_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":41,"name":"number_closedcases_Prev_Period","row":21,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(closedcases_Prev_Period.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":8,"column":32,"name":"container_10","row":20,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":14,"column":33,"name":"chart_CreatedDate_Year_Cre_3","row":23,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(9, 26, 62)","borderColor":"#091A3E","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":16,"column":32,"name":"container_15","row":22,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":46,"column":1,"name":"table_lens_1","row":29,"rowspan":10,"widgetStyle":{"borderEdges":[]}},{"colspan":48,"column":0,"name":"container_5","row":29,"rowspan":11,"widgetStyle":{"borderEdges":[],"borderWidth":4}},{"colspan":5,"column":39,"name":"link_Prioritized_Open_Cases","row":2,"rowspan":1,"widgetStyle":{"borderEdges":[]}},{"colspan":2,"column":36,"name":"link_Home","row":2,"rowspan":1,"widgetStyle":{"borderEdges":[]}},{"colspan":8,"column":40,"name":"container_16","row":8,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":32,"name":"container_17","row":7,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"container_18","row":9,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":16,"column":32,"name":"container_19","row":14,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"container_20","row":17,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom","top"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"container_21","row":18,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"container_22","row":20,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":40,"name":"container_23","row":21,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":16,"column":32,"name":"container_24","row":19,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":48,"column":0,"name":"container_25","row":27,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["top"],"borderRadius":0,"borderWidth":4}},{"colspan":9,"column":1,"name":"text_Case_Details","row":27,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":14,"column":33,"name":"chart_Backlog_Trend_OverTime","row":9,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderEdges":[]}}]}],"selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"rgb(197, 211, 224)","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1,"rowHeight":"normal"},{"name":"iphone","numColumns":12,"pages":[{"widgets":[{"colspan":12,"column":0,"name":"container_6","row":0,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#9271E8","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":8,"name":"listselector_Time_Selection","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#9271E8","borderEdges":["top"],"borderWidth":1}},{"colspan":12,"column":0,"name":"container_7","row":2,"rowspan":2,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"text_Backlog_Trend","row":4,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"container_11","row":4,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":1,"name":"number_Open_Case_Count","row":6,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":2}},{"colspan":7,"column":0,"name":"container_17","row":6,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":7,"name":"number_compare_backlog_Last_Year","row":6,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(compare_backlog_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":5,"column":7,"name":"container_1","row":6,"rowspan":1,"widgetStyle":{"backgroundColor":"rgb(9, 27, 61)","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":7,"name":"number_Compare_Backlog","row":7,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(Compare_Backlog.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderRadius":0,"borderWidth":4}},{"colspan":5,"column":7,"name":"container_16","row":7,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":10,"column":1,"name":"chart_Backlog_Trend_OverTime","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":12,"column":0,"name":"container_18","row":8,"rowspan":4,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":10,"column":1,"name":"number_days_to_close","row":12,"rowspan":1,"widgetStyle":{"backgroundColor":"#335779","borderColor":"#091A3E","borderEdges":[],"borderWidth":8}},{"colspan":12,"column":0,"name":"container_19","row":12,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":8,"column":1,"name":"text_Case_Trend","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"container_12","row":14,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"rgba(51, 87, 121, 0.5)","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":1,"name":"number_new_case_count_this_week","row":16,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"container_2","row":16,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":4}},{"colspan":3,"column":8,"name":"number_allcases_Last_Year","row":16,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(allcases_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":6,"name":"container_20","row":16,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom","top"],"borderRadius":0,"borderWidth":8}},{"colspan":3,"column":8,"name":"number_allcases_Prev_Period","row":17,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(allcases_Prev_Period.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":6,"name":"container_21","row":17,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":4,"column":1,"name":"number_Closed_Case_Count_this_week","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":6,"column":0,"name":"container_10","row":18,"rowspan":2,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":3,"column":8,"name":"number_closedcases_Last_Year","row":18,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(closedcases_Last_Year.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":6,"name":"container_22","row":18,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":3,"column":8,"name":"number_closedcases_Prev_Period","row":19,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"{{cell(closedcases_Prev_Period.result, 0, \"color\").asString()}}","borderEdges":["right"],"borderWidth":4}},{"colspan":6,"column":6,"name":"container_23","row":19,"rowspan":1,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["top","bottom"],"borderRadius":0,"borderWidth":8}},{"colspan":10,"column":1,"name":"chart_CreatedDate_Year_Cre_3","row":21,"rowspan":4,"widgetStyle":{"backgroundColor":"rgb(9, 26, 62)","borderColor":"#091A3E","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":12,"column":0,"name":"container_15","row":20,"rowspan":5,"widgetStyle":{"backgroundColor":"#091A3E","borderColor":"#091A3E","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"text_1","row":0,"rowspan":2,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#9271E8","borderEdges":["bottom"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":4,"name":"listselector_1","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#9271E8","borderEdges":["top"],"borderRadius":0,"borderWidth":1}},{"colspan":4,"column":0,"name":"listselector_2","row":2,"rowspan":1,"widgetStyle":{"backgroundColor":"#E6ECF2","borderColor":"#9271E8","borderEdges":["top"],"borderRadius":0,"borderWidth":1}}]}],"selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#F2F6FA","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1,"rowHeight":"normal"}],"layouts":[],"steps":{"new_case_count_this_week":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"CreatedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"compare_backlog_Last_Year":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\";ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\";updcreatedTOTAL = filter q by date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day') in [\\\"current day - 1 year\\\"..\\\"current day\\\"]; updclosedTOTAL = filter q by date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day') in [\\\"current day - 1 year\\\"..\\\"current day\\\"];compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100  as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \\\"#3CAF6D\\\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"RecordType_Name_1":{"isFacet":true,"isGlobal":false,"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RecordType.Name\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Created_Cases_Over_Time":{"isFacet":false,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"vbar","options":{}},"query":{"query":"{\"pigql\":\"q = load \\\"ServiceCase2\\\"; ThisYear = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; LastYear = filter q by {{cell(Time_Selection.selection, 0, \\\"LastYearCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; LastYearGroup = cogroup ThisYear by {{cell(Time_Selection.selection, 0, \\\"CoGroup\\\").asObject()}} left , LastYear by {{cell(Time_Selection.selection, 0, \\\"CoGroup\\\").asObject()}}; ThisYearGroup = group ThisYear by {{cell(Time_Selection.selection, 0, \\\"CoGroup\\\").asObject()}}; ThisYearGroup = foreach ThisYearGroup generate \\\"This Year\\\" as 'Date', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}, count() as count; LastYearGroup = foreach LastYearGroup generate \\\"Last Year\\\" as 'Date', ThisYear.{{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}, count(LastYear) as count; c = union ThisYearGroup,LastYearGroup; c = order c by {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}} desc\",\"measures\":[[\"count\",\"*\"]],\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"compactGroup\\\").asObject()}}\",\"Date\"],\"filters\":[]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"days_to_close":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"tot\",\"backlogdays\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\";r = filter q by IsClosed == \\\"false\\\"; s = filter q by date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day') in [\\\"30 days ago\\\"..\\\"current day\\\"];b = cogroup r by all, s by all; b = foreach b generate count(r)/(count(s)/21) as 'tot_backlogdays';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Backlog_Trend_Group_Select":{"dimensions":[],"groups":[],"isFacet":false,"isGlobal":false,"numbers":[],"selectMode":"singlerequired","start":"{\"display\":[\"Support Type\"]}","strings":[],"type":"staticflex","useGlobal":false,"values":["{\"display\":\"Support Type\",\"value\":\"Type_of_Support__c\"}","{\"display\":\"Product Family\",\"value\":\"Product_Family_KB__c\"}","{\"display\":\"Type\",\"value\":\"Type\"}","{\"display\":\"Origin\",\"value\":\"Origin\"}"],"datasets":[]},"closedcases_Last_Year":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; curYear = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \\\"LastYearCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \\\"#f2536d\\\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"avg_Backlog":{"isFacet":true,"isGlobal":false,"selectMode":"single","start":"[]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time","options":{}},"query":{"query":"{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"ServiceCase2\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\";final = group combined by all; final = foreach final generate avg('Backlog_Count') as 'Backlog_Count'\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"waterfall_chart":{"isFacet":false,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"pigql\":\"q = load \\\"ServiceCase2\\\";ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\";END_FAKE = group q by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}; END_FAKE = foreach END_FAKE generate {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"Current Backlog\\\" as 'Bucket', 0 as 'sum_Backlog'; END_REAL = group ENDTOTAL by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}};END_REAL = foreach END_REAL generate {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"Current Backlog\\\" as 'Bucket', count() as 'sum_Backlog'; END = union END_FAKE,END_REAL; END = group END by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}; END = foreach END generate {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"Current Backlog\\\" as 'Bucket', sum('sum_Backlog') as 'sum_Backlog'; upcreatedTotal = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; upcreated = group upcreatedTotal by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}; upcreated = foreach upcreated generate {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"Cases Created\\\" as 'Bucket', count() as 'sum_Backlog';dnclosedTotal = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};dnclosed = group dnclosedTotal by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}};dnclosed = foreach dnclosed generate {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"Cases Closed\\\" as 'Bucket', -count() as 'sum_Backlog';START = group upcreatedTotal by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} full, dnclosedTotal by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} full, ENDTOTAL by {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}};START = foreach START generate upcreatedTotal.{{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}} as {{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}, \\\"{{cell(Time_Selection.selection, 0, \\\"BacklogLabel\\\").asString()}}\\\" as 'Bucket', count(ENDTOTAL)+count(dnclosedTotal)-count(upcreatedTotal) as 'sum_Backlog';WATERFALL = union START, upcreated,dnclosed, END;\",\"measures\":[[\"sum\",\"Backlog\"]],\"groups\":[\"Bucket\",\"{{cell(Backlog_Trend_Group_Select.selection,0,\\\"value\\\").asObject()}}\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Measure_Select":{"dimensions":[],"groups":[],"isFacet":false,"isGlobal":false,"numbers":[],"selectMode":"singlerequired","start":"{\"display\":[\"Avg Duration\"]}","strings":[],"type":"staticflex","useGlobal":false,"values":["{\"display\":\"Avg Duration\",\"SAQL\":\"coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent\",\"compact\":[\"sum\",\"Percent\",null,{\"display\":\"% Change in Avg Duration Y/Y\"}]}","{\"display\":\"Volume\",\"SAQL\":\"coalesce((count(ThisYear)-count(LastYear))/count(LastYear),0)*100 as sum_Percent\",\"compact\":[\"sum\",\"Percent\",null,{\"display\":\"% Change in Volume Y/Y\"}]}"],"datasets":[]},"Time_Selection":{"dimensions":[],"groups":[],"isFacet":false,"isGlobal":false,"numbers":[],"selectMode":"singlerequired","start":"{\"display\":[\"MTD\"]}","strings":[],"type":"staticflex","useGlobal":false,"values":["{\"display\":\"YTD\",\"text_display\":\"vs Prior YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedField2\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Month\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"QTD\",\"text_display\":\"vs Prior QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedField2\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Week')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Week\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Week\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['Duration__c'])-avg(LastYear['Duration__c']))/avg(LastYear['Duration__c']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"MTD\",\"text_display\":\"vs Prior MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'CreatedDate_Day'\",\"CreatedField2\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Day\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 7 Days\",\"text_display\":\"vs Prior 7 days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate_Month','CreatedDate_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Day'\",\"CreatedField2\":\"'CreatedDate_Month','CreatedDate_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month']+\\\"~~~\\\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month'+\\\"~~~\\\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Day\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month']+\\\"~~~\\\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 30 Days\",\"text_display\":\"vs Prior 30 Days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Week'\",\"CreatedField2\":\"'CreatedDate_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Week')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Week\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Week\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}","{\"display\":\"Last 180 Days\",\"text_display\":\"vs Prior 180 days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'CreatedDate_Month'\",\"CreatedField2\":\"'CreatedDate_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate_Year']+\\\"~~~\\\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GenerateCreatedDate\":\"'CreatedDate_Year'+\\\"~~~\\\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate_Year','CreatedDate_Month')\",\"Grouping\":\"CreatedDate_Year~~~CreatedDate_Month\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate_Month\"],\"compactGroupTrend\":[\"CreatedDate_Year\",\"CreatedDate_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"],"datasets":[]},"Waterfall_Group_Select":{"dimensions":[],"isFacet":false,"isGlobal":false,"selectMode":"singlerequired","start":"[[\"Type_of_Support__c\"]]","type":"static","useGlobal":false,"values":["{\"display\":\"Support Type\",\"value\":[\"Type_of_Support__c\"]}","{\"display\":\"Product Family\",\"value\":[\"Product_Family_KB__c\"]}","{\"display\":\"Type\",\"value\":[\"Type\"]}","{\"display\":\"Origin\",\"value\":[\"Origin\"]}"],"datasets":[]},"Support_Type__c_1":{"isFacet":true,"isGlobal":false,"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Type_of_Support__c\"],\"order\":[[-1,{\"ascending\":false}]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"CreatedDate_Year_Cre_1":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[[\"CreatedDate_Year\",\"CreatedDate_Month\",\"CreatedDate_Day\"]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Compare_Backlog":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\";ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\"; updcreatedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; updclosedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \\\"#3CAF6D\\\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"allcases_Prev_Period":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\"; curYear = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \\\"#3CAF6D\\\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \\\"#f2536d\\\"  else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"test_step":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\";q = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"static_2":{"dimensions":[],"groups":[],"isFacet":false,"isGlobal":false,"numbers":[],"selectMode":"single","strings":[],"type":"staticflex","useGlobal":false,"values":["{\"display\":\"This Month\",\"value\":[\"current month\",\"current month\"]}","{\"display\":\"This year\",\"value\":[\"current year\",\"current year\"]}"],"datasets":[]},"Open_Case_Count":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"CreatedDate_Year_Cre_3":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\";closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};createdGroup = group created by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}; createdGroup = foreach createdGroup generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, \\\"Created\\\" as 'Type', count() as count; closedGroup = group closed by {{cell(Time_Selection.selection, 0, \\\"GroupbyClosedDate\\\").asObject()}}; closedGroup = foreach closedGroup generate {{cell(Time_Selection.selection, 0, \\\"GenerateClosedDate\\\").asObject()}}, \\\"Closed\\\" as 'Type', count() as count; impact = cogroup created by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}, closed by {{cell(Time_Selection.selection, 0, \\\"GroupbyClosedDate\\\").asObject()}}; impact = foreach impact generate {{cell(Time_Selection.selection, 0, \\\"GenerateCoGroupDate\\\").asObject()}}, \\\"Backlog Impact\\\" as 'Type', count(created)-count(closed) as count;final = union closedGroup,createdGroup,impact; final = filter final by 'Type' in [\\\"Closed\\\",\\\"Created\\\"];  final = order final by '{{cell(Time_Selection.selection, 0, \\\"Grouping\\\").asObject()}}';\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"Grouping\\\").asObject()}}\",\"Type\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Closed_Case_Count_this_week":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"IsClosed\",[\"true\"],\"in\"],[\"ClosedDate\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Duration__c_1":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"options":{}},"query":{"query":"{\"measures\":[[\"sum\",\"Duration__c\"]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"closedcases_Prev_Period":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; curYear = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \\\"#f2536d\\\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Type_1":{"isFacet":true,"isGlobal":false,"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Type\"],\"order\":[[-1,{\"ascending\":false}]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"allcases_Last_Year":{"isFacet":true,"isGlobal":false,"type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"selectMode":"single","query":{"query":"{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"ServiceCase2\\\"; curYear = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; comparePeriod = filter q by {{cell(Time_Selection.selection, 0, \\\"LastYearCompare\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \\\"#3CAF6D\\\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Backlog_Trend_OverTime":{"isFacet":true,"isGlobal":false,"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"time","options":{}},"query":{"query":"{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"ServiceCase2\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField2\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\"; f1 = foreach combined generate 'Backlog_Count' as 'Backlog_Count',{{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping'; f2 = foreach combined generate {{coalesce(cell(avg_Backlog.result, 0, \\\"Backlog_Count\\\"),0).asObject()}} as 'Backlog_Count', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"Overall Average for Period\\\" as 'Grouping'; final = union f1, f2 \",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroupTrend\\\").asObject()}}\",\"Grouping\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Product__c_1":{"isFacet":true,"isGlobal":false,"selectMode":"multi","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Product_Family_KB__c\"],\"order\":[[-1,{\"ascending\":false}]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"lens_1":{"groups":[],"isFacet":true,"numbers":[],"query":"q = load \"ServiceCase2\";q = filter q by {{cell(Time_Selection.selection, 0, \"BacklogCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};q = foreach q generate 'CaseNumber' as 'CaseNumber','Account.Name' as 'Account.Name',  'Duration__c' as 'Duration__c', 'Origin' as 'Origin', 'Owner.Name' as 'Owner.Name', 'Priority' as 'Priority', 'Product_Family_KB__c' as 'Product_Family_KB__c';q = limit q 100;","selectMode":"single","strings":[],"type":"saql","useGlobal":false}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"container_19":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_Backlog_Trend":{"parameters":{"fontSize":16,"text":"Backlog Trend","textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"container_18":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_17":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_16":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_15":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Prioritized_Open_Cases":{"parameters":{"destination":"0FKB00000002KnsOAE","destinationType":"dashboard","fontSize":12,"includeState":false,"text":"Prioritized Open Cases","textColor":"#091A3E"},"type":"link"},"container_14":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_13":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"listselector_Product_c_1":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":false,"measureField":"none","step":"Product__c_1","title":"Case Product"},"type":"listselector"},"number_closedcases_Prev_Period":{"parameters":{"compact":true,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(closedcases_Prev_Period.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"closedcases_Prev_Period","textAlignment":"right","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_Compare_Backlog":{"parameters":{"compact":false,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(Compare_Backlog.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"Compare_Backlog","textAlignment":"right","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"text_Backlog_Changes":{"parameters":{"fontSize":16,"text":"Backlog Changes","textAlignment":"left","textColor":"#091A3E"},"type":"text"},"number_days_to_close":{"parameters":{"compact":false,"exploreLink":true,"measureField":"tot_backlogdays","numberColor":"#FFFFFF","numberSize":24,"step":"days_to_close","textAlignment":"left","title":"Projected days to clear backlog","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_2":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_3":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_4":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_5":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_6":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_23":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_test1":{"parameters":{"fontSize":10,"text":"test","textAlignment":"center","textColor":"#091A3E"},"type":"text"},"container_7":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_22":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_8":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_21":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_9":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_20":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"number_allcases_Last_Year":{"parameters":{"compact":true,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(allcases_Last_Year.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"allcases_Last_Year","textAlignment":"right","title":"vs Last Year","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"chart_Created_Cases_Over_Time":{"parameters":{"autoFitMode":"fit","showValues":true,"legend":{"showHeader":true,"show":true,"position":"bottom-center","inside":false,"customSize":"auto"},"axisMode":"multi","visualizationType":"vbar","exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"measureAxis2":{"showTitle":true,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"measureAxis1":{"showTitle":false,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"step":"Created_Cases_Over_Time","theme":"light","dimensionAxis":{"showTitle":false,"showAxis":false,"title":"","customSize":"auto","icons":{"useIcons":false,"iconProps":{"column":"","fit":"cover","type":"round"}}},"binValues":false,"bins":{"breakpoints":{"low":0,"high":100},"bands":{"low":{"label":"","color":"#B22222"},"medium":{"label":"","color":"#ffa500"},"high":{"label":"","color":"#008000"}}}},"type":"chart"},"number_Open_Case_Count":{"parameters":{"compact":false,"exploreLink":true,"measureField":"count","numberColor":"#FFFFFF","numberSize":32,"step":"Open_Case_Count","textAlignment":"left","title":"Backlog","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"text_1":{"parameters":{"fontSize":24,"text":"Backlog","textAlignment":"center","textColor":"#091A3E"},"type":"text"},"number_compare_backlog_Last_Year":{"parameters":{"compact":false,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(compare_backlog_Last_Year.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"compare_backlog_Last_Year","textAlignment":"right","title":"vs Last Year","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_closedcases_Last_Year":{"parameters":{"compact":true,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(closedcases_Last_Year.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"closedcases_Last_Year","textAlignment":"right","title":"vs Last Year","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"chart_CreatedDate_Year_Cre_3":{"parameters":{"fillArea":false,"showPoints":false,"legend":{"showHeader":true,"show":true,"position":"bottom-center","inside":false,"customSize":"auto"},"measureAxis1":{"showTitle":false,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"visualizationType":"time","missingValue":"connect","theme":"dark","step":"CreatedDate_Year_Cre_3","timeAxis":{"showTitle":false,"showAxis":true,"title":"","predictiveLine":null},"exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"showZero":true,"axisMode":"multi","measureAxis2":{"sqrtScale":false,"showAxis":true,"customDomain":{"showDomain":false,"low":null,"high":null},"showTitle":true,"title":"","referenceLine":null}},"type":"chart"},"chart_CreatedDate_Year_Cre_1":{"parameters":{"showPoints":false,"legend":{"showHeader":true,"show":true,"position":"right-top","inside":false,"customSize":"auto"},"visualizationType":"time","missingValue":"connect","timeAxis":{"showTitle":false,"showAxis":true,"title":"","predictiveLine":null},"exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"textColor":"#FFFFFF","fillArea":false,"measureAxis1":{"showTitle":false,"showAxis":true,"title":"Backlog Trend","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"theme":"dark","step":"CreatedDate_Year_Cre_1","showZero":true,"axisMode":"multi","measureAxis2":{"sqrtScale":false,"showAxis":true,"customDomain":{"showDomain":false,"low":null,"high":null},"showTitle":true,"title":"","referenceLine":null}},"type":"chart"},"table_lens_1":{"parameters":{"customBulkActions":[],"exploreLink":true,"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","step":"lens_1"},"type":"table"},"container_12":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_11":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"container_10":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"listselector_Support_Type_c_1":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":false,"measureField":"none","step":"Support_Type__c_1","title":"Case Support Level"},"type":"listselector"},"chart_Backlog_Trend_OverTime":{"parameters":{"fillArea":true,"showPoints":true,"legend":{"showHeader":true,"show":false,"position":"right-top","inside":false,"customSize":"auto"},"measureAxis1":{"showTitle":false,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"visualizationType":"time","missingValue":"connect","step":"Backlog_Trend_OverTime","theme":"dark","timeAxis":{"showTitle":true,"showAxis":true,"title":"","predictiveLine":null},"exploreLink":false,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"showZero":true,"axisMode":"multi","measureAxis2":{"sqrtScale":false,"showAxis":true,"customDomain":{"showDomain":false,"low":null,"high":null},"showTitle":true,"title":"","referenceLine":null}},"type":"chart"},"number_Closed_Case_Count_this_week":{"parameters":{"compact":true,"exploreLink":true,"measureField":"count","numberColor":"#FFFFFF","numberSize":24,"step":"Closed_Case_Count_this_week","textAlignment":"left","title":"Closed Cases","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"link_Home":{"parameters":{"destination":"0FKB00000002KntOAE","destinationType":"dashboard","fontSize":12,"includeState":false,"text":"Home","textColor":"#091A3E"},"type":"link"},"text_test":{"parameters":{"fontSize":20,"text":"test","textAlignment":"center","textColor":"#091A3E"},"type":"text"},"text_Case_Details":{"parameters":{"fontSize":16,"text":"Case Details","textAlignment":"left","textColor":"#091A3E"},"type":"text"},"text_Cases_Created_This_Year_vs_Last_Year":{"parameters":{"fontSize":16,"text":"Cases Created This Year vs Last Year","textAlignment":"left","textColor":"#091A3E"},"type":"text"},"listselector_Type_1":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":false,"measureField":"none","step":"Type_1","title":"Case Type"},"type":"listselector"},"listselector_Time_Selection":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":true,"step":"Time_Selection","title":"Date"},"type":"listselector"},"listselector_Backlog_Trend_Group_Select":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":true,"step":"Backlog_Trend_Group_Select","title":""},"type":"listselector"},"text_Backlog1":{"parameters":{"fontSize":20,"text":"Backlog","textAlignment":"left","textColor":"#091A3E"},"type":"text"},"container_26":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"listselector_2":{"parameters":{"compact":false,"exploreLink":false,"instant":true,"measureField":"count","step":"Product__c_1","title":"Product"},"type":"listselector"},"container_25":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"link_Backlog":{"parameters":{"destination":"0FKB00000002KnoOAE","destinationType":"dashboard","fontSize":12,"includeState":false,"text":"Backlog","textColor":"#634F95"},"type":"link"},"container_24":{"parameters":{"alignmentX":"left","alignmentY":"top","documentId":"","fit":"original"},"type":"container"},"text_Case_Trend":{"parameters":{"fontSize":16,"text":"Case Trend","textAlignment":"left","textColor":"#FFFFFF"},"type":"text"},"text_Backlog":{"parameters":{"fontSize":24,"text":"Backlog","textAlignment":"left","textColor":"rgb(9, 26, 62)"},"type":"text"},"number_allcases_Prev_Period":{"parameters":{"compact":true,"exploreLink":true,"measureField":"unique_Percent","numberColor":"{{coalesce(cell(allcases_Prev_Period.result, 0, \"color\"),\"#000000\").asString()}}","numberSize":12,"step":"allcases_Prev_Period","textAlignment":"right","title":"{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}","titleColor":"#FFFFFF","titleSize":12},"type":"number"},"number_new_case_count_this_week":{"parameters":{"compact":true,"exploreLink":true,"measureField":"count","numberColor":"#FFFFFF","numberSize":24,"step":"new_case_count_this_week","textAlignment":"left","title":"Open Cases","titleColor":"#C5D3E0","titleSize":14},"type":"number"},"listselector_1":{"parameters":{"compact":false,"exploreLink":false,"instant":true,"measureField":"count","step":"RecordType_Name_1","title":"Record Type"},"type":"listselector"},"chart_waterfall_chart":{"parameters":{"showValues":true,"computeTotal":false,"legend":{"showHeader":true,"show":true,"position":"right-top","inside":false,"customSize":"auto"},"measureAxis1":{"showTitle":true,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null}},"visualizationType":"stackwaterfall","step":"waterfall_chart","theme":"light","exploreLink":true,"title":{"label":"","align":"center","subtitleLabel":""},"trellis":{"enable":false,"type":"xy","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"dimensionAxis":{"showTitle":false,"showAxis":true,"title":""}},"type":"chart"},"listselector_RecordType_Name_1":{"parameters":{"compact":false,"expanded":true,"exploreLink":false,"instant":false,"measureField":"none","step":"RecordType_Name_1","title":"Case Record Type"},"type":"listselector"}}}}