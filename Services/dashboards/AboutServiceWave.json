{
  "label": "About Service Wave",
  "folder": {
    "id": "<folderId>"
  },
  "state": {
    "dataSourceLinks": [],
    "gridLayouts": [
      {
        "maxWidth": 1360,
        "name": "Default",
        "numColumns": 41,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 19,
                "column": 11,
                "name": "text_Manager_Overview",
                "row": 0,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 36,
                "name": "listselector_Time_Selection",
                "row": 1,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderColor": "rgb(124, 108, 187)",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "text_Backlog",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "text_Agent_Performance",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "text_Channel_Review",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "text_Account_Profile",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 41,
                "column": 0,
                "name": "container_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "number_count_open_case",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "number_avg_Duration",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "number_avg_FCR_Percent",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "number_avg_CSAT",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 2,
                "name": "number_Compare_Backlog",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(Compare_Backlog.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 12,
                "name": "number_Duration_PrevPeriod",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "number_FCR_PrevPeriod",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(FCR_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 32,
                "name": "number_CSAT_PrevPeriod",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(CSAT_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 2,
                "name": "chart_Backlog_Trend_OverTime",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 12,
                "name": "chart_avg_duration_over_time",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "chart_avg_FCR_Over_Time",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 32,
                "name": "chart_avg_CSAT_over_time",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 2,
                "name": "link_Review_Open_Cases",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#634F95",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 7,
                "column": 12,
                "name": "link_Review_Agents",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#634F95",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_Review_Channels",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#634F95",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 7,
                "column": 32,
                "name": "link_Review_Accounts",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#634F95",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "link_Review_Backlog",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "link_Activity_Overview",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "link_Review_Telephony_Metrics",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "link_Review_CSAT_Drivers",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "container_2",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "container_3",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "container_4",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "container_5",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "container_6",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "container_7",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "container_8",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "container_9",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "container_10",
                "row": 13,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "container_11",
                "row": 13,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "container_12",
                "row": 13,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "container_13",
                "row": 13,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 1,
                "column": 0,
                "name": "container_14",
                "row": 5,
                "rowspan": 11,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 10,
                "name": "container_15",
                "row": 5,
                "rowspan": 11,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 20,
                "name": "container_16",
                "row": 5,
                "rowspan": 11,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 30,
                "name": "container_17",
                "row": 5,
                "rowspan": 11,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 40,
                "name": "container_18",
                "row": 5,
                "rowspan": 11,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 41,
                "column": 0,
                "name": "container_19",
                "row": 16,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "container_20",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 11,
                "name": "container_21",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 21,
                "name": "container_22",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 31,
                "name": "container_23",
                "row": 8,
                "rowspan": 4,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          }
        ],
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "rgb(202, 212, 222)",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1,
        "rowHeight": "normal"
      },
      {
        "name": "iPhone",
        "numColumns": 24,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 24,
                "column": 0,
                "name": "text_Manager_Overview",
                "row": 0,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "listselector_Time_Selection",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderColor": "rgb(124, 108, 187)",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_1",
                "row": 0,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(124, 108, 187)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "text_Backlog",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 1,
                "name": "number_count_open_case",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 11,
                "column": 12,
                "name": "number_Compare_Backlog",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(Compare_Backlog.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_Backlog_Trend_OverTime",
                "row": 7,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_Review_Open_Cases",
                "row": 9,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_3",
                "row": 7,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "text_Agent_Performance",
                "row": 13,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 1,
                "name": "number_avg_Duration",
                "row": 15,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 11,
                "column": 12,
                "name": "number_Duration_PrevPeriod",
                "row": 15,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(Duration_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_avg_duration_over_time",
                "row": 17,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_Review_Agents",
                "row": 19,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_5",
                "row": 17,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "text_Channel_Review",
                "row": 23,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "number_avg_FCR_Percent",
                "row": 25,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 11,
                "column": 12,
                "name": "number_FCR_PrevPeriod",
                "row": 25,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(FCR_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_avg_FCR_Over_Time",
                "row": 27,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "text_Account_Profile",
                "row": 37,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 10,
                "column": 1,
                "name": "number_avg_CSAT",
                "row": 39,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 11,
                "column": 12,
                "name": "number_CSAT_PrevPeriod",
                "row": 39,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "{{cell(CSAT_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_avg_CSAT_over_time",
                "row": 41,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 18,
                "column": 3,
                "name": "link_Review_Channels",
                "row": 29,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 12,
                "column": 0,
                "name": "container_8",
                "row": 39,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_Review_Accounts",
                "row": 43,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_9",
                "row": 41,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_24",
                "row": 6,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 12,
                "column": 0,
                "name": "container_25",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_26",
                "row": 9,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_28",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_29",
                "row": 11,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderWidth": 4
                }
              },
              {
                "colspan": 12,
                "column": 0,
                "name": "container_30",
                "row": 15,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_31",
                "row": 15,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_32",
                "row": 19,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_33",
                "row": 20,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 0,
                "name": "container_34",
                "row": 25,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_35",
                "row": 25,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_36",
                "row": 27,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_37",
                "row": 26,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_38",
                "row": 29,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_39",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_40",
                "row": 39,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 12,
                "column": 12,
                "name": "container_41",
                "row": 40,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_42",
                "row": 43,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_43",
                "row": 44,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 14,
                "name": "text_Add_text_",
                "row": 6,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 1,
                "column": 0,
                "name": "text_test2",
                "row": 11,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_1",
                "row": 11,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_45",
                "row": 10,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_47",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_49",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_50",
                "row": 22,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_2",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_51",
                "row": 45,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "link_3",
                "row": 45,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_52",
                "row": 46,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_53",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_54",
                "row": 32,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_55",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_56",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_57",
                "row": 35,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_58",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 3,
                "name": "link_4",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          }
        ],
        "rowHeight": "normal",
        "selectors": [
          "maxWidth(599)"
        ],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#F2F6FA",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1
      }
    ],
    "layouts": [
      {
        "device": "default",
        "pages": [
          {
            "rows": [
              "box_26 {colspan=2, rowspan=6, zIndex=-2, vpad=-4, hpad=-15} | row: {height=10}",
              "text_17 {colspan=2}",
              "date_Time_Selection {colspan=2}",
              "| row : {height=10}",
              "box_23 {colspan=1, rowspan=3, zIndex=-1, vpad=6} | row: {height=10} | box_16 {colspan=1, rowspan=3, zIndex=-1, vpad=6} | row: {height=10}",
              "text_38 | text_70",
              "| row : {height=10}",
              "number_kpi_count_open_case | number_kpi_avg_Duration",
              "text_25 | text_26",
              "link_Open_Cases | link_review_agents",
              "| row : {height=20}",
              "box_21 {colspan=1, rowspan=3, zIndex=-1} | row: {height=10} | box_19 {colspan=1, rowspan=3, zIndex=-1} | row: {height=10}",
              "text_49 | text_61",
              "| row : {height=10}",
              "number_kpi_avg_FCR_Percent | number_kpi_avg_CSAT",
              "text_23 | text_21",
              "link_Review_Channel | link_account_profile",
              "| row : {height=20}",
              "headerFlash {colspan=2, rowspan=9, zIndex=-1, hpad=-15}| row: {height=10}",
              "text_27",
              "link_backlog {colspan=2}",
              "link_agent_activities {colspan=2}",
              "link_knowledge_impact {colspan=2}",
              "link_knowledge_usage {colspan=2}",
              "link_csat {colspan=2}",
              "link_Telephony {colspan=2}",
              "| row : {height=10}",
              "row : {height=15}",
              "headerFlash2 {colspan=2} | row: {height=1}",
              "row : {height=15}",
              "text_90 {colspan=2}",
              "chart_count_cases_over_time {colspan=2}",
              "text_91 {colspan=2}",
              "chart_avg_csat_timeline {colspan=2}"
            ]
          }
        ],
        "version": 1
      }
    ],
    "steps": {
      "Compare_Backlog": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"unique\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\";ENDTOTAL = filter q by 'IsClosed' == \\\"false\\\"; updcreatedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; updclosedTOTAL = filter q by {{cell(Time_Selection.selection, 0, \\\"BacklogCompare\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}};compare = group updcreatedTOTAL by all full, updclosedTOTAL by all full, ENDTOTAL by all; compare = foreach compare generate (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 as 'unique_Percent', (case when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 < 0 then \\\"#f2536d\\\" when (count(ENDTOTAL)-(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)))/(count(ENDTOTAL)+count(updclosedTOTAL)-count(updcreatedTOTAL)) *100 > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "static_Duration": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Case Duration\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Case Duration\",\"value\":[\"avg\",\"DurationCalculatedField\"],\"pigql_value\":\"DurationCalculatedField\",\"measure_field\":\"avg_DurationCalculatedField\"}"
        ],
        "datasets": []
      },
      "avg_CSAT_over_time": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'CSAT' >= -10; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\";  q = group q by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}; r = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('CSAT') as 'avg_CSAT', \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping';  s = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, {{coalesce(cell(avg_CSAT.result, 0, \\\"avg_CSAT\\\"),0).asObject()}} as 'avg_CSAT', \\\"Overall Average for Period\\\" as 'Grouping'; final = union s,r\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_Duration": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"DurationCalculatedField\"]],\"filters\":[[\"IsClosed\",[\"true\"],\"in\"],[\"CreatedDate__c__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_FCR_Over_Time": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"Percent\",null,{\"display\":\"Average First Contact Resolution\"}]],\"pigql\":\"created = load \\\"<ServiceCase>\\\";created = filter created by 'IsClosed' == \\\"true\\\";created = filter created by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; b = filter created by 'First_Contact_Close__c' == \\\"true\\\";d = cogroup created by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}} full, b by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}};f = foreach d generate {{cell(Time_Selection.selection, 0, \\\"GenerateCoGroupDate\\\").asObject()}}, coalesce((count(b)/ count(created)) * 100, 0) as 'avg_Percent', \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping'; e = foreach d generate {{cell(Time_Selection.selection, 0, \\\"GenerateCoGroupDate\\\").asObject()}}, {{coalesce(cell(avg_FCR_Percent.result, 0, \\\"avg_Percent\\\"),0).asObject()}} as 'avg_Percent', \\\"Overall Average for Period\\\" as 'Grouping'; final = union f,e;\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_Backlog": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"<ServiceCase>\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate__c__c_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\";final = group combined by all; final = foreach final generate avg('Backlog_Count') as 'Backlog_Count'\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_duration_over_time": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"DurationCalculatedField\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\";q = group q by {{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}; r = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('DurationCalculatedField') as 'avg_DurationCalculatedField', \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping' ;s = foreach q generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, {{coalesce(cell(avg_Duration.result, 0, \\\"avg_DurationCalculatedField\\\"),0).asObject()}} as 'avg_DurationCalculatedField', \\\"Overall Average for Period\\\" as 'Grouping'; final = union s, r;\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_FCR_Percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; a = filter q by 'IsClosed' == \\\"true\\\"; a = filter a by 'First_Contact_Close__c' == \\\"true\\\";  b = filter q by 'IsClosed' == \\\"true\\\"; c = cogroup a by all full, b by all; c = foreach c generate coalesce((count(a)/ count(b)) * 100, 0) as 'avg_Percent';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Duration_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c__c_Year','CreatedDate__c__c_Month','CreatedDate__c__c_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') as 'perc_Percent', (case when 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') < 0 then \\\"#3CAF6D\\\" when 100*(avg(s.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \\\"pigql_value\\\").asObject()}}') > 0 then \\\"#f2536d\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_case_by_sla": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"MilestoneStatus\"],\"filters\":[[\"CreatedDate__c__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_open_case": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Time_Selection": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Last 180 Days\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"YTD\",\"text_display\":\"vs prior YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate__c__c_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'CreatedDate__c__c_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c__c_Year']+\\\"~~~\\\"+created['CreatedDate__c__c_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c__c_Year']+\\\"~~~\\\"+created['CreatedDate__c__c_Month'] as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month'\",\"GenerateCreatedDate\":\"'CreatedDate__c__c_Year'+\\\"~~~\\\"+'CreatedDate__c__c_Month' as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate__c__c_Year','CreatedDate__c__c_Month')\",\"Grouping\":\"CreatedDate__c__c_Year~~~CreatedDate__c__c_Month\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c__c_Year\",\"CreatedDate__c__c_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c__c_Month'] as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"QTD\",\"text_display\":\"vs prior QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate__c__c_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'CreatedDate__c__c_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c__c_Year']+\\\"~~~\\\"+created['CreatedDate__c__c_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"'CreatedDate__c__c_Year~~~CreatedDate__c__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c__c_Year']+\\\"~~~\\\"+created['CreatedDate__c__c_Week'] as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Week'\",\"GenerateCreatedDate\":\"'CreatedDate__c__c_Year'+\\\"~~~\\\"+'CreatedDate__c__c_Week' as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate__c__c_Year','CreatedDate__c__c_Week')\",\"Grouping\":\"CreatedDate__c__c_Year~~~CreatedDate__c__c_Week\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c__c_Year\",\"CreatedDate__c__c_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c__c_Week'] as 'CreatedDate__c__c_Year~~~CreatedDate__c__c_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"MTD\",\"text_display\":\"vs prior MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate__c__c_Month','CreatedDate__c__c_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'CreatedDate__c__c_Month','CreatedDate__c__c_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c__c_Year']+\\\"~~~\\\"+created['CreatedDate__c__c_Month']+\\\"~~~\\\"+created['CreatedDate__c__c_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"'CreatedDate__c__c_Year~~~CreatedDate__c__c_Month~~~CreatedDate__c__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 7 Days\",\"text_display\":\"vs prior 7 days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate__c_Month','CreatedDate__c_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Month','CreatedDate__c_Day'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month']+\\\"~~~\\\"+closed['ClosedDate_Day'] end)\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 30 Days\",\"text_display\":\"vs prior 30 Days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate__c_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Week'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Week'] end)\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"('CreatedDate__c_Year','CreatedDate__c_Week')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Week\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 180 Days\",\"text_display\":\"vs prior 180 days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Month'\",\"CreatedProjection\":\"(case when count(created) >0 then created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] else  closed['ClosedDate_Year']+\\\"~~~\\\"+closed['ClosedDate_Month'] end)\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"('CreatedDate__c_Year','CreatedDate__c_Month')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\"],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"
        ],
        "datasets": []
      },
      "Backlog_Trend_OverTime": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":\"{{column(Time_Selection.selection, [\\\"Measure\\\"]).asObject()}}\",\"pigql\":\"q = load \\\"<ServiceCase>\\\"; created = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; closed = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\\\")}}; current = filter q by 'IsClosed' == \\\"false\\\"; current = group current by all;current = foreach current generate \\\"Today\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"trendProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count() as backlog;diff = group created by ('CreatedDate__c_Year', {{cell(Time_Selection.selection, 0, \\\"CreatedField\\\").asObject()}}) full, closed by ('ClosedDate_Year', {{cell(Time_Selection.selection, 0, \\\"ClosedField\\\").asObject()}});diff = foreach diff generate \\\"Begining\\\" as 'time', {{cell(Time_Selection.selection, 0, \\\"CreatedProjection\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, count(closed) - count(created) as backlog;combined = union current, diff;combined = group combined by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}},'time');combined = foreach combined generate 'time' as 'time', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, sum(sum(backlog)) over([0 ..] partition by all order by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}})) as Backlog_Count; combined = filter combined by 'time' == \\\"Begining\\\"; f1 = foreach combined generate 'Backlog_Count' as 'Backlog_Count',{{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"{{cell(Time_Selection.selection, 0, \\\"filter\\\").asObject()}}\\\" as 'Grouping'; f2 = foreach combined generate {{coalesce(cell(avg_Backlog.result, 0, \\\"Backlog_Count\\\"),0).asObject()}} as 'Backlog_Count', {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}} as {{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, \\\"Overall Average for Period\\\" as 'Grouping'; final = union f1, f2 \",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Grouping\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "CSAT_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \\\"true\\\"; r = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') as 'perc_Percent', (case when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') < 0 then \\\"#f2536d\\\" when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Accounts_with_OpenCases": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"AccountId\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "FCR_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "selectMode": "single",
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; prevq = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; preva = filter prevq by 'IsClosed' == \\\"true\\\"; preva = filter preva by 'First_Contact_Close__c' == \\\"true\\\";  prevb = filter prevq by 'IsClosed' == \\\"true\\\"; prevc = cogroup preva by all full, prevb by all; prevc = foreach prevc generate coalesce((count(preva)/ count(prevb)) * 100, 0) as 'avg_Percent'; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; a = filter q by 'IsClosed' == \\\"true\\\"; a = filter a by 'First_Contact_Close__c' == \\\"true\\\";  b = filter q by 'IsClosed' == \\\"true\\\"; c = cogroup a by all full, b by all; c = foreach c generate coalesce((count(a)/ count(b)) * 100, 0) as 'avg_Percent'; t = group prevc by all, c by all; t = foreach t generate 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') as 'perc_Percent', (case when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') < 0 then \\\"#f2536d\\\" when 100*(avg(c.'avg_Percent')-avg(prevc.'avg_Percent'))/avg(prevc.'avg_Percent') > 0 then \\\"#3CAF6D\\\" else \\\"#7D98B3\\\" end) as 'color';\",\"measures\":[[\"perc\",\"Percent\"]],\"measuresMap\":{},\"groups\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_CSAT": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"],[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "link_Performance_Overview": {
        "parameters": {
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Performance Overview",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "container_19": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_18": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_17": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_16": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_15": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_58": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_14": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_57": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_13": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_avg_FCR_Over_Time": {
        "parameters": {
          "fillArea": true,
          "showPoints": false,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "step": "avg_FCR_Over_Time",
          "theme": "light",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "showZero": true,
          "axisMode": "multi",
          "measureAxis2": {
            "sqrtScale": false,
            "showAxis": true,
            "showTitle": true,
            "title": "",
            "referenceLine": null
          }
        },
        "type": "chart"
      },
      "number_Compare_Backlog": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "unique_Percent",
          "numberColor": "{{coalesce(cell(Compare_Backlog.result, 0, \"color\"),\"#000000\").asString()}}",
          "numberSize": 12,
          "step": "Compare_Backlog",
          "textAlignment": "right",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "{{coalesce(cell(Compare_Backlog.result, 0, \"color\"),\"#000000\").asString()}}",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_4": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "link_Review_Accounts": {
        "parameters": {
          "destination": "<ServiceAccountProfile>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Accounts",
          "textColor": "rgb(89, 65, 149)",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "container_5": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "link_Review_Channels": {
        "parameters": {
          "destination": "<ServiceChannelReview>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Channels",
          "textColor": "rgb(89, 65, 149)",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "container_6": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_23": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_test1": {
        "parameters": {
          "fontSize": 10,
          "text": "test",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "link_Review_Backlog": {
        "parameters": {
          "destination": "<ServiceBacklog>",
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Review Backlog",
          "textColor": "#5C7A99",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_22": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_8": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_21": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_test3": {
        "parameters": {
          "fontSize": 10,
          "text": "test",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_20": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_test2": {
        "parameters": {
          "fontSize": 16,
          "text": "test",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "number_Duration_PrevPeriod": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "perc_Percent",
          "numberColor": "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "numberSize": 12,
          "step": "Duration_PrevPeriod",
          "textAlignment": "right",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "titleSize": 12
        },
        "type": "number"
      },
      "link_Account_Overview": {
        "parameters": {
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Account Overview",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "container_49": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_47": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "link_Review_Open_Cases": {
        "parameters": {
          "destination": "<ServiceOpenCases>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Open Cases",
          "textColor": "rgb(89, 65, 149)",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "number_FCR_PrevPeriod": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "perc_Percent",
          "numberColor": "{{coalesce(cell(FCR_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "numberSize": 12,
          "step": "FCR_PrevPeriod",
          "textAlignment": "right",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "{{coalesce(cell(FCR_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "titleSize": 12
        },
        "type": "number"
      },
      "link_Review_Telephony_Metrics": {
        "parameters": {
          "destination": "<ServiceTelephony>",
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Review Telephony Metrics",
          "textColor": "#5C7A99",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "chart_avg_CSAT_over_time": {
        "parameters": {
          "fillArea": true,
          "showPoints": false,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "step": "avg_CSAT_over_time",
          "theme": "light",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "showZero": true,
          "axisMode": "multi",
          "measureAxis2": {
            "sqrtScale": false,
            "showAxis": true,
            "showTitle": true,
            "title": "",
            "referenceLine": null
          }
        },
        "type": "chart"
      },
      "link_Review_Agents": {
        "parameters": {
          "destination": "<ServiceAgentPerformance>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Agents",
          "textColor": "rgb(89, 65, 149)",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "container_56": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_12": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_55": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_11": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_54": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_10": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_53": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_52": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_Backlog_Trend_OverTime": {
        "parameters": {
          "fillArea": true,
          "showPoints": false,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "step": "Backlog_Trend_OverTime",
          "theme": "light",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "left",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "showZero": true,
          "axisMode": "multi",
          "measureAxis2": {
            "sqrtScale": false,
            "showAxis": true,
            "showTitle": true,
            "title": "",
            "referenceLine": null
          }
        },
        "type": "chart"
      },
      "container_51": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_Manager_Overview": {
        "parameters": {
          "fontSize": 32,
          "text": "Manager Overview",
          "textAlignment": "center",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "container_50": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_39": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_test": {
        "parameters": {
          "fontSize": 10,
          "text": "test",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "container_38": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_37": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_36": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_35": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "link_Review_CSAT_Drivers": {
        "parameters": {
          "destination": "<ServiceCustomerSatisfaction>",
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Review CSAT Drivers",
          "textColor": "#5C7A99",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "number_count_open_case": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "fontSize": 40,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "count_open_case",
          "textAlignment": "center",
          "textColor": "rgb(32, 44, 88)",
          "title": "Open Cases",
          "titleColor": "#5C7A99",
          "titleSize": 14
        },
        "type": "number"
      },
      "text_Add_text_": {
        "parameters": {
          "fontSize": 20,
          "text": "Add text.",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "link_Activity_Overview": {
        "parameters": {
          "destination": "<ServiceAgentActivity>",
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Activity Overview",
          "textColor": "#5C7A99",
          "visualizationType": "hbar"
        },
        "type": "link"
      },
      "text_Channel_Review": {
        "parameters": {
          "fontSize": 16,
          "text": "Channel Review",
          "textAlignment": "center",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "container_45": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "number_CSAT_PrevPeriod": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "perc_Percent",
          "numberColor": "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "numberSize": 12,
          "step": "CSAT_PrevPeriod",
          "textAlignment": "right",
          "title": "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor": "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#000000\").asString()}}",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_43": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_42": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_41": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_40": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "listselector_Time_Selection": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "",
          "step": "Time_Selection",
          "title": ""
        },
        "type": "listselector"
      },
      "text_Account_Profile": {
        "parameters": {
          "fontSize": 16,
          "text": "Account Profile",
          "textAlignment": "center",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "container_29": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_28": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_27": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_26": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_25": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_24": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "link_3": {
        "parameters": {
          "destination": "<ServiceCustomerSatisfaction>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review CSAT Drivers",
          "textAlignment": "center",
          "textColor": "rgb(89, 65, 149)"
        },
        "type": "link"
      },
      "text_Agent_Performance": {
        "parameters": {
          "fontSize": 16,
          "text": "Agent Performance",
          "textAlignment": "center",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "link_4": {
        "parameters": {
          "destination": "<ServiceTelephony>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Telephony Metric",
          "textAlignment": "center",
          "textColor": "rgb(89, 65, 149)"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destination": "<ServiceBacklog>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Review Backlog",
          "textAlignment": "center",
          "textColor": "rgb(89, 65, 149)"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destination": "<ServiceAgentActivity>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Activity Overview",
          "textAlignment": "center",
          "textColor": "rgb(89, 65, 149)"
        },
        "type": "link"
      },
      "number_avg_FCR_Percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 40,
          "measureField": "avg_Percent",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "avg_FCR_Percent",
          "textAlignment": "center",
          "textColor": "rgb(32, 44, 88)",
          "title": "First Contact Resolution",
          "titleColor": "#5C7A99",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_avg_CSAT": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "fontSize": 40,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "avg_CSAT",
          "textAlignment": "center",
          "textColor": "rgb(32, 44, 88)",
          "title": "Average CSAT",
          "titleColor": "#5C7A99",
          "titleSize": 14
        },
        "type": "number"
      },
      "text_Backlog": {
        "parameters": {
          "fontSize": 16,
          "text": "Backlog",
          "textAlignment": "center",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "container_34": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_33": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_32": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_31": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_30": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_avg_Duration": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "fontSize": 40,
          "measureField": "avg_DurationCalculatedField",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "avg_Duration",
          "textAlignment": "center",
          "textColor": "rgb(32, 44, 88)",
          "title": "Average Time to Close",
          "titleColor": "#5C7A99",
          "titleSize": 14
        },
        "type": "number"
      },
      "chart_avg_duration_over_time": {
        "parameters": {
          "fillArea": true,
          "showPoints": false,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "step": "avg_duration_over_time",
          "theme": "light",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "showZero": true,
          "axisMode": "multi",
          "measureAxis2": {
            "sqrtScale": false,
            "showAxis": true,
            "showTitle": true,
            "title": "",
            "referenceLine": null
          }
        },
        "type": "chart"
      }
    }
  }
}
