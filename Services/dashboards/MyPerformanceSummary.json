{
  "label": "My Performance Summary",
  "folder": {
    "id": "<folderId>"
  },
  "state": {
    "dataSourceLinks": [],
    "gridLayouts": [],
    "layouts": [
      {
        "device": "default",
        "pages": [
          {
            "rows": [
              "text_desktop_only {colspan=2, rowspan=5}"
            ]
          }
        ],
        "version": 1
      }
    ],
    "steps": {
      "Geography": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.BillingState\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]],\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_unique_owner_count": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = group q by all; q = foreach q generate unique('Id')/unique('OwnerId') as 'team_avg';\",\"measures\":[[\"team\",\"avg\"]],\"autoFilter\":true,\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Duration_Rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('{{no_quote(value(selection(Static_Duration)))}}')) as 'rank_position'; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_fcr_prev_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_escalation_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = group q by ('Owner.Name', 'OwnerId', 'IsEscalated'); q = foreach q generate 'IsEscalated' as 'IsEscalated', 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'IsEscalated' == \\\"true\\\"; s = group q by ('Owner.Name','OwnerId') left, r by ('Owner.Name','OwnerId'); s = foreach s generate q.'Owner.Name' as 'Owner.Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner.Name', 'OwnerId'); s = foreach s generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')) as 'rank_position'; s = filter s by 'Owner.Name' in {{selection(filter_agent)}}; s = filter s by 'OwnerId' in {{selection(OwnerId_hidden)}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "owner_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\",\"measures\":[[\"rank\",\"position\"]],\"autoFilter\":true,\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "OwnerId_hidden": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": "[\"!{user.id}\"]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"OwnerId\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Duration__c_41": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = group q by all; q = foreach q generate avg('{{no_quote(value(selection(Static_Duration)))}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_product": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Product_Name__c\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity'; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_avg_prev_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"],[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'CompactPrev'))}}\"]],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "calls_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "number_cases": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'Compact'))}}\"]],[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "average_case_duration_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"Duration\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Origin' in {{selection(filter_origin)}}; q = filter q by 'Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Account.Name' in {{selection(filter_account)}}; q = filter q by 'Reason' in {{selection(filter_reason)}};r = filter q by 'Owner.Name' in {{selection(filter_agent)}}; r = filter r by 'OwnerId' in {{selection(OwnerId_hidden)}}; r = group r by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; r = foreach r generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, avg('{{no_quote(value(selection(Static_Duration)))}}') as 'avg_Duration', (case when (\\\"{{no_quote(value(selection(filter_agent)))}}\\\" == \\\"all\\\" && \\\"{{no_quote(value(selection(OwnerId_hidden)))}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by 'Role.Name' in {{selection(filter_role)}}; s = group s by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; s = foreach s generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, avg('{{no_quote(value(selection(Static_Duration)))}}') as 'avg_Duration', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance'); u = foreach u generate {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}} as {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance' as 'Performance', sum('avg_Duration') as 'avg_Duration';\",\"groups\":[\"{{(value(field(selection(Time_Selection), 'compactGroup')))}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_reason": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\"Number of Cases\"}]],\"groups\":[\"Reason\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"]],\"order\":[[-1,{\"ascending\":\"{{no_quote(value(selection(Order_Select)))}}\"}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "rank_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position';q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "filter_origin": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "start": "[]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Origin\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Duration__c_37": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = group q by all; q = foreach q generate avg('{{no_quote(value(selection(Static_Duration)))}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true,\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_role": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "start": "[]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Role.Name\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_record_type": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RecordType.Name\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_escalation_prev_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "Duration_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = group q by all; q = foreach q generate avg('{{no_quote(value(selection(Static_Duration)))}}') as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Activities_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"team\",\"avg\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}};q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count()/unique('Owner.Id') as 'team_avg';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "avg_call_duration_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}};q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_avg_activities_team": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}};q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity'; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_escalation_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Static_Duration": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": "[[\"Duration__c\"]]",
        "type": "static",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Duration\",\"value\":[\"Duration__c\"]}",
          "{\"display\":\"DB Hours\",\"value\":[\"DB_Hours__c\"]}"
        ]
      },
      "Order_Select": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[[\"false\"]]",
        "type": "static",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Desc\",\"value\":[\"false\"]}",
          "{\"display\":\"Asc\",\"value\":[\"true\"]}"
        ]
      },
      "kpi_fcr_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_calls": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_avg_team_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'Compact'))}}\"]],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"],[\"Role.Name\",\"{{selection(filter_role)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Time_Selection": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": "[[{\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":\"[\\\"current day - 180 days\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CompactPrev\":[[\"day\",-360],[\"day\",-180]],\"Current\":\"[\\\"180 days ago\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Month'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Month'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Month','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Month','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month\",\"LastPeriodCompare\":\"[\\\"180 days ago - 180 days\\\"..\\\"current day - 180 days\\\"]\",\"LastYearCompare\":\"[\\\"180 days ago - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\"}]]",
        "type": "static",
        "useGlobal": false,
        "values": [
          "{\"display\":\"YTD\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":\"[\\\"current day - 1 year\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CompactPrev\":[[\"year\",-1],[\"year\",-1]],\"Current\":\"[\\\"current year\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Month'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Month'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Month','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Month','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month\",\"LastPeriodCompare\":\"[\\\"current year - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"LastYearCompare\":\"[\\\"current year - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\"}]}",
          "{\"display\":\"QTD\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":\"[\\\"current day - 1 quarter\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CompactPrev\":[[\"quarter\",-1],[\"quarter\",-1]],\"Current\":\"[\\\"current quarter\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Week'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Week'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Week'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Week'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Week')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Week','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Week')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Week','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Week\",\"LastPeriodCompare\":\"[\\\"current quarter - 1 quarter\\\"..\\\"current day - 1 quarter\\\"]\",\"LastYearCompare\":\"[\\\"current quarter - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\"}]}",
          "{\"display\":\"MTD\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogLabel\":\"Backlog Last Month\",\"CoGroup\":\"('CreatedDate__c_Month','CreatedDate__c_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CompactPrev\":[[\"month\",-1],[\"month\",-1]],\"Current\":\"[\\\"current month\\\"..\\\"current month\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day\",\"LastPeriodCompare\":\"[\\\"current month - 1 month\\\"..\\\"current day - 1 month\\\"]\",\"LastYearCompare\":\"[\\\"current month - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\"}]}",
          "{\"display\":\"Last 7 Days\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":\"[\\\"current day - 1 week\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Month','CreatedDate__c_Day')\",\"Compact\":[[\"day\",-7],[\"month\",0]],\"CompactPrev\":[[\"day\",-14],[\"day\",-7]],\"Current\":\"[\\\"7 days ago\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day\",\"LastPeriodCompare\":\"[\\\"7 days ago - 1 week\\\"..\\\"current day - 1 week\\\"]\",\"LastYearCompare\":\"[\\\"7 days ago - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\"}]}",
          "{\"display\":\"Last 30 Days\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":\"[\\\"current day - 30 days\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CompactPrev\":[[\"day\",-60],[\"day\",-30]],\"Current\":\"[\\\"30 days ago\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Week'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Week'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Week'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Week'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Week')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Week','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Week')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Week','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Week\",\"LastPeriodCompare\":\"[\\\"30 days ago - 30 days\\\"..\\\"current day - 30 days\\\"]\",\"LastYearCompare\":\"[\\\"30 days ago - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\"}]}",
          "{\"display\":\"Last 180 Days\",\"value\":[{\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":\"[\\\"current day - 180 days\\\"..\\\"current day\\\"]\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CompactPrev\":[[\"day\",-360],[\"day\",-180]],\"Current\":\"[\\\"180 days ago\\\"..\\\"current day\\\"]\",\"GenerateActivityCreatedDate__c\":\"(case when count(s) > 0 then s['CreatedDate__c_Year~~~CreatedDate__c_Month'] else sevent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate__c\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateSelectedActivityCreatedDate__c\":\"(case when count(r) > 0 then r['CreatedDate__c_Year~~~CreatedDate__c_Month'] else revent['CreatedDate__c_Year~~~CreatedDate__c_Month'] end) as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate__c\":\"('CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cAccount\":\"('CreatedDate__c_Year','CreatedDate__c_Month','Case.Account.Name')\",\"GroupbyCreatedDate__cEvent\":\"('EventSubtype','CreatedDate__c_Year','CreatedDate__c_Month')\",\"GroupbyCreatedDate__cTask\":\"('CreatedDate__c_Year~~~CreatedDate__c_Month','Performance')\",\"Grouping\":\"CreatedDate__c_Year~~~CreatedDate__c_Month\",\"LastPeriodCompare\":\"[\\\"180 days ago - 180 days\\\"..\\\"current day - 180 days\\\"]\",\"LastYearCompare\":\"[\\\"180 days ago - 1 year\\\"..\\\"current day - 1 year\\\"]\",\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\"}]}"
        ]
      },
      "activity_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "pie"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by 'ActivityType';q = foreach q generate 'ActivityType' as 'ActivityType' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"ActivityType\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "average_activities_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}}; r = filter q by 'Owner.Name' in {{selection(filter_agent)}}; r = filter r by 'OwnerId' in {{selection(OwnerId_hidden)}}; r = group r by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; r = foreach r generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, count() as 'count', (case when (\\\"{{no_quote(value(selection(filter_agent)))}}\\\" == \\\"all\\\" && \\\"{{no_quote(value(selection(OwnerId_hidden)))}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by 'Case.Role.Name' in {{selection(filter_role)}}; s = group s by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; s = foreach s generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance'); u = foreach u generate {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}} as {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"groups\":[\"{{(value(field(selection(Time_Selection), 'compactGroup')))}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_csat_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CSAT')*(-1)) as 'rank_position'; q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "SLA_breakdown": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"MilestoneStatus\"],\"filters\":[[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'Compact'))}}\"]],[\"Owner.Name\",\"{{selection(filter_agent)}}\"],[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]],\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"],[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'Compact'))}}\"]],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "average_case_count_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Origin' in {{selection(filter_origin)}}; q = filter q by 'Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Account.Name' in {{selection(filter_account)}}; q = filter q by 'Reason' in {{selection(filter_reason)}};r = filter q by 'Owner.Name' in {{selection(filter_agent)}}; r = filter r by 'OwnerId' in {{selection(OwnerId_hidden)}}; r = group r by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; r = foreach r generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, count() as 'count', (case when (\\\"{{no_quote(value(selection(filter_agent)))}}\\\" == \\\"all\\\" && \\\"{{no_quote(value(selection(OwnerId_hidden)))}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by 'Role.Name' in {{selection(filter_role)}}; s = group s by {{no_quote(value(field(selection(Time_Selection), 'GroupbyCreatedDate__c')))}}; s = foreach s generate {{no_quote(value(field(selection(Time_Selection), 'GenerateCreatedDate__c')))}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance'); u = foreach u generate {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}} as {{single_quote(value(field(selection(Time_Selection), 'Grouping')))}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"autoFilter\":true,\"groups\":[\"{{(value(field(selection(Time_Selection), 'compactGroup')))}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_call_duration": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "filter_account": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Activities_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}}; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = filter q  by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = group q by all; q = foreach q generate count() as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_fcr_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by ('Owner.Name', 'OwnerId', 'First_Contact_Close__c'); q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'First_Contact_Close__c' == \\\"true\\\"; s = group q by ('Owner.Name','OwnerId') left, r by ('Owner.Name','OwnerId'); s = foreach s generate q.'Owner.Name' as 'Owner.Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner.Name', 'OwnerId'); s = foreach s generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')*(-1)) as 'rank_position'; s = filter s by 'Owner.Name' in {{selection(filter_agent)}}; s = filter s by 'OwnerId' in {{selection(OwnerId_hidden)}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_activities_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}};q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()) as 'rank_position';q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "IsClosed_42": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[\"Completed\"]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ActivityIsClosed\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "CaseCount_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = filter q  by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = group q by all; q = foreach q generate count() as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_agent": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[]",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Name\"],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_prev_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity'; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_escalation_team_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "activity_priority_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "pie"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'Owner.Name' in {{selection(filter_agent)}}; q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = group q by 'Case.Priority';q = foreach q generate 'Case.Priority' as 'Case.Priority' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"Case.Priority\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "calls_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position';q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "avg_call_duration_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'Case.Role.Name' in {{selection(filter_role)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CallDurationInSeconds')) as 'rank_position'; q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_fcr_team_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'Role.Name' in {{selection(filter_role)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'Current')))}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "calls_prev": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "static_case_open_closed": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[[\"true\"]]",
        "type": "static",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Closed\",\"value\":[\"true\"]}",
          "{\"display\":\"Open\",\"value\":[\"false\"]}"
        ],
        "dimensions": [
          "IsClosed"
        ],
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_call_duration_prev": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by 'Case.RecordType.Name' in {{selection(filter_record_type)}}; q = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in {{no_quote(value(field(selection(Time_Selection), 'LastPeriodCompare')))}}; q = filter q by 'Case.IsClosed' in {{selection(static_case_open_closed)}}; q = filter q by 'Case.Origin' in {{selection(filter_origin)}}; q = filter q by 'Case.Product_Name__c' in {{selection(filter_product)}}; q = filter q by 'Case.Account.Name' in {{selection(filter_account)}}; q = filter q by 'Case.Reason' in {{selection(filter_reason)}}; q = filter q by 'ActivityIsClosed' in  {{selection(IsClosed_42)}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by 'Owner.Name' in {{selection(filter_agent)}};q = filter q by 'OwnerId' in {{selection(OwnerId_hidden)}};q = filter q by 'ActivityType' in {{selection(activity_type)}}; q = filter q by 'Case.Priority' in {{selection(activity_priority_type)}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      }
    },
    "widgets": {
      "text_Calls": {
        "type": "text",
        "position": {
          "x": 900,
          "y": 838,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 16,
          "text": "No. of Calls",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_18": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 137,
          "zIndex": 99943
        },
        "parameters": {
          "fontSize": 16,
          "text": "Agent Performance",
          "textAlignment": "left",
          "textColor": "rgb(255, 255, 255)"
        }
      },
      "text_Escalated_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 250,
          "y": 891,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_19": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 590,
          "zIndex": 99939
        },
        "parameters": {
          "fontSize": 16,
          "text": "Activity Priority",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "number_kpi_unique_owner_count": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 300,
          "zIndex": 99953
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "step": "kpi_unique_owner_count",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": ""
        }
      },
      "text_10": {
        "type": "text",
        "position": {
          "x": 700,
          "y": 190,
          "zIndex": 99946
        },
        "parameters": {
          "fontSize": 16,
          "text": "No. of Activities",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "GeographyFilter": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 860,
          "y": 50,
          "zIndex": 100010
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "step": "Geography",
          "title": "Region",
          "selectModeOverride": "multi"
        }
      },
      "text_FCR": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 840,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 16,
          "text": "FCR",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "chart_9": {
        "type": "chart",
        "position": {
          "h": 190,
          "w": 480,
          "x": 840,
          "y": 190,
          "zIndex": 99966
        },
        "parameters": {
          "legend": true,
          "legendWidth": 130,
          "step": "average_activities_over_time",
          "exploreLink": false,
          "legendHideHeader": true,
          "visualizationType": "time",
          "selectModeOverride": "none"
        }
      },
      "chart_6": {
        "type": "chart",
        "position": {
          "h": 160,
          "w": 460,
          "x": 850,
          "y": 630,
          "zIndex": 99965
        },
        "parameters": {
          "legend": true,
          "step": "activity_priority_type",
          "exploreLink": false,
          "visualizationType": "pie"
        }
      },
      "Widget_Duration": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 60,
          "y": 380,
          "zIndex": 100009
        },
        "parameters": {
          "expanded": false,
          "exploreLink": false,
          "measureField": "",
          "step": "Static_Duration",
          "title": "",
          "selectModeOverride": "singlerequired"
        }
      },
      "chart_5": {
        "type": "chart",
        "position": {
          "h": 160,
          "w": 460,
          "x": 200,
          "y": 630,
          "zIndex": 38
        },
        "parameters": {
          "legend": true,
          "step": "SLA_breakdown",
          "visualizationType": "pie"
        }
      },
      "chart_4": {
        "type": "chart",
        "position": {
          "h": 160,
          "w": 460,
          "x": 850,
          "y": 420,
          "zIndex": 99964
        },
        "parameters": {
          "legend": true,
          "step": "activity_type",
          "exploreLink": false,
          "visualizationType": "pie"
        }
      },
      "text_8": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 270,
          "zIndex": 99952
        },
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "box_4_2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 900,
          "y": 995,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "list_filter_product": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 690,
          "y": 50,
          "zIndex": 100009
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "measureField": "count",
          "step": "filter_product",
          "selectModeOverride": "multi"
        }
      },
      "box_4_1": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 694,
          "y": 995,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_1": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 456,
          "y": 995,
          "zIndex": 99923
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "dimfilter_7": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 360,
          "y": 50,
          "zIndex": 100008
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "step": "filter_origin",
          "selectModeOverride": "multi"
        }
      },
      "dimfilter_8": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 1020,
          "y": 50,
          "zIndex": 100007
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "step": "filter_reason",
          "selectModeOverride": "multi"
        }
      },
      "box_3": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 44,
          "y": 996,
          "zIndex": 99996
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 250,
          "y": 995,
          "zIndex": 99994
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_4_3": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 1105,
          "y": 995,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "kpi_avg_activity_team": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 760,
          "y": 948,
          "zIndex": 99999
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_activity",
          "step": "kpi_avg_activities_team",
          "title": ""
        }
      },
      "list_filter_account": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 520,
          "y": 50,
          "zIndex": 100010
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "measureField": "count",
          "step": "filter_account",
          "selectModeOverride": "multi"
        }
      },
      "dimfilter_6": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 200,
          "y": 50,
          "zIndex": 100007
        },
        "parameters": {
          "expanded": false,
          "instant": false,
          "step": "filter_role",
          "selectModeOverride": "multi"
        }
      },
      "buttongroup_4": {
        "type": "pillbox",
        "position": {
          "w": 160,
          "x": 1140,
          "y": 120,
          "zIndex": 99961
        },
        "parameters": {
          "step": "IsClosed_42",
          "title": "",
          "selectModeOverride": "single"
        }
      },
      "dimfilter_12": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 250,
          "x": 40,
          "y": 0,
          "zIndex": -1
        },
        "parameters": {
          "expanded": false,
          "measureField": "count",
          "step": "OwnerId_hidden",
          "selectModeOverride": "singlerequired"
        }
      },
      "text_Activities_Rank": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 1000,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_Calls_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 900,
          "y": 892,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "box_purple": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 620,
          "x": 40,
          "y": 130,
          "zIndex": 99942
        },
        "parameters": {
          "backgroundColor": "rgb(32, 44, 88)",
          "borderColor": "rgb(32, 44, 88)"
        }
      },
      "number_31": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 530,
          "y": 1000,
          "zIndex": 99993
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "step": "kpi_csat_percent_rank",
          "title": ""
        }
      },
      "number_30": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 320,
          "y": 1000,
          "zIndex": 99995
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "rank_position",
          "step": "kpi_escalation_percent_rank",
          "title": ""
        }
      },
      "chart_average_case_duration_over_time": {
        "type": "chart",
        "position": {
          "h": 190,
          "w": 460,
          "x": 210,
          "y": 400,
          "zIndex": 99926
        },
        "parameters": {
          "legend": true,
          "legendWidth": 130,
          "step": "average_case_duration_over_time",
          "exploreLink": false,
          "legendHideHeader": true,
          "visualizationType": "time",
          "selectModeOverride": "none"
        }
      },
      "number_9": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 468,
          "zIndex": 38
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "step": "Duration_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": ""
        }
      },
      "number_8": {
        "type": "number",
        "position": {
          "w": 160,
          "x": 50,
          "y": 420,
          "zIndex": 99960
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "avg_Duration",
          "step": "Duration__c_37",
          "textAlignment": "left",
          "textColor": "rgb(0, 0, 0)",
          "title": ""
        }
      },
      "number_36": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 763,
          "y": 836,
          "zIndex": 99999
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_activity",
          "step": "kpi_avg_activities",
          "title": ""
        }
      },
      "dimfilter_11": {
        "type": "listselector",
        "position": {
          "h": 50,
          "w": 130,
          "x": 1180,
          "y": 50,
          "zIndex": 100009
        },
        "parameters": {
          "expanded": false,
          "exploreLink": false,
          "measureField": "",
          "step": "Time_Selection",
          "title": "Date Range",
          "selectModeOverride": "singlerequired"
        }
      },
      "headerFlash": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 1270,
          "x": 40,
          "y": 118,
          "zIndex": 2
        },
        "parameters": {
          "backgroundColor": "rgb(167, 123, 202)",
          "borderColor": "rgb(167, 123, 202)"
        }
      },
      "text_CallDuration_Rank": {
        "type": "text",
        "position": {
          "x": 1100,
          "y": 1000,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "box_5": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 44,
          "y": 940,
          "zIndex": 99987
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_4": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 456,
          "y": 940,
          "zIndex": 99991
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_7": {
        "type": "box",
        "position": {
          "h": 1090,
          "w": 1360,
          "x": 0,
          "y": 0,
          "zIndex": 0
        },
        "parameters": {
          "backgroundColor": "rgb(232, 238, 244)",
          "borderColor": "rgba(146, 103, 194, 0)"
        }
      },
      "box_6": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 250,
          "y": 940,
          "zIndex": 99989
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_9": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 44,
          "y": 885,
          "zIndex": 99975
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "text_Escalated": {
        "type": "text",
        "position": {
          "x": 240,
          "y": 840,
          "zIndex": 99986
        },
        "parameters": {
          "fontSize": 16,
          "text": "% Escalated",
          "textAlignment": "left",
          "textColor": "rgb(22, 50, 92)"
        }
      },
      "box_1_3": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 1106,
          "y": 830,
          "zIndex": 99923
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_1_2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 900,
          "y": 830,
          "zIndex": 99932
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "text_CSAT": {
        "type": "text",
        "position": {
          "x": 450,
          "y": 840,
          "zIndex": 99984
        },
        "parameters": {
          "fontSize": 16,
          "text": "CSAT",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "chart_average_case_count_over_time": {
        "type": "chart",
        "position": {
          "h": 200,
          "w": 460,
          "x": 210,
          "y": 190,
          "zIndex": 99924
        },
        "parameters": {
          "legend": true,
          "legendWidth": 130,
          "step": "average_case_count_over_time",
          "exploreLink": false,
          "legendHideHeader": true,
          "visualizationType": "time",
          "selectModeOverride": "none"
        }
      },
      "text_CallDuration_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 1100,
          "y": 892,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_FCR_TeamAvg": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 948,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_CSAT_TeamAvg": {
        "type": "text",
        "position": {
          "x": 450,
          "y": 948,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "kpi_number_cases": {
        "type": "number",
        "position": {
          "w": 160,
          "x": 50,
          "y": 210,
          "zIndex": 38
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "step": "number_cases",
          "textAlignment": "left",
          "title": ""
        }
      },
      "text_Calls_Rank": {
        "type": "text",
        "position": {
          "x": 900,
          "y": 1000,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "box_1_1": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 694,
          "y": 830,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "text_Activities_TeamAvg": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 948,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_12": {
        "type": "number",
        "position": {
          "w": 160,
          "x": 700,
          "y": 210,
          "zIndex": 99962
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "step": "count_activities",
          "textAlignment": "left",
          "title": ""
        }
      },
      "number_11": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 800,
          "y": 268,
          "zIndex": 99967
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "step": "Activities_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": ""
        }
      },
      "number_10": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 500,
          "zIndex": 38
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "avg_Duration",
          "step": "Duration__c_41",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)",
          "title": ""
        }
      },
      "text_CSAT_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 450,
          "y": 890,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_3_1": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 1170,
          "y": 840,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CallDurationInSeconds",
          "step": "avg_call_duration",
          "title": ""
        }
      },
      "text_Activities_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 892,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_16": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 800,
          "y": 330,
          "zIndex": 99972
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "step": "rank_activities",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_15": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 530,
          "zIndex": 45
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "step": "Duration_Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_14": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 330,
          "zIndex": 42
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "step": "owner_rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_13": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 800,
          "y": 300,
          "zIndex": 99968
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "step": "Activities_teamavg",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_FCR_Rank": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 1002,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "box_19": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 456,
          "y": 830,
          "zIndex": 99923
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "number_3_2": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 1170,
          "y": 892,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CallDurationInSeconds",
          "step": "avg_call_duration_prev",
          "title": ""
        }
      },
      "number_3_3": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 1170,
          "y": 950,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CallDurationInSeconds",
          "step": "avg_call_duration_teamavg",
          "title": ""
        }
      },
      "number_3_4": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 1170,
          "y": 1000,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "step": "avg_call_duration_rank",
          "title": ""
        }
      },
      "box_15": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 250,
          "y": 885,
          "zIndex": 99976
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(176, 195, 212)"
        }
      },
      "box_14": {
        "type": "box",
        "position": {
          "h": 620,
          "w": 620,
          "x": 40,
          "y": 180,
          "zIndex": 13
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(176, 195, 212)"
        }
      },
      "text_CallDuration": {
        "type": "text",
        "position": {
          "x": 1100,
          "y": 830,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 16,
          "text": "Average Call \nDuration",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_23": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 110,
          "y": 892,
          "zIndex": 99978
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "step": "kpi_fcr_prev_percent",
          "title": ""
        }
      },
      "box_2_3": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 1105,
          "y": 885,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "number_22": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 110,
          "y": 838,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 18,
          "measureField": "perc_Percent",
          "step": "kpi_fcr_percent",
          "title": ""
        }
      },
      "box_2_2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 900,
          "y": 885,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "number_21": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 320,
          "y": 835,
          "zIndex": 99973
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "perc_Percent",
          "step": "kpi_escalation_percent",
          "title": ""
        }
      },
      "box_2_1": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 694,
          "y": 885,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "number_20": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 525,
          "y": 836,
          "zIndex": 99974
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CSAT",
          "step": "kpi_avg_csat",
          "title": ""
        }
      },
      "text_CSAT_Rank": {
        "type": "text",
        "position": {
          "x": 450,
          "y": 1000,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_29": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 110,
          "y": 1000,
          "zIndex": 99997
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "step": "kpi_fcr_percent_rank",
          "title": ""
        }
      },
      "number_28": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 320,
          "y": 946,
          "zIndex": 99990
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "step": "kpi_escalation_team_percent",
          "title": ""
        }
      },
      "number_27": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 110,
          "y": 948,
          "zIndex": 99988
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "step": "kpi_fcr_team_percent",
          "title": ""
        }
      },
      "number_26": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 530,
          "y": 948,
          "zIndex": 99998
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CSAT",
          "step": "kpi_avg_team_csat",
          "title": ""
        }
      },
      "number_25": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 530,
          "y": 890,
          "zIndex": 99982
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CSAT",
          "step": "kpi_avg_prev_csat",
          "title": ""
        }
      },
      "number_24": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 320,
          "y": 890,
          "zIndex": 99979
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "step": "kpi_escalation_prev_percent",
          "title": ""
        }
      },
      "text_41": {
        "type": "text",
        "position": {
          "x": 700,
          "y": 300,
          "zIndex": 99937
        },
        "parameters": {
          "fontSize": 12,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_40": {
        "type": "text",
        "position": {
          "x": 700,
          "y": 270,
          "zIndex": 99958
        },
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "box_28": {
        "type": "box",
        "position": {
          "h": 620,
          "w": 620,
          "x": 690,
          "y": 180,
          "zIndex": 99918
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(176, 195, 212)"
        }
      },
      "box_27": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 44,
          "y": 830,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_26": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 620,
          "x": 690,
          "y": 130,
          "zIndex": 40
        },
        "parameters": {
          "backgroundColor": "rgb(32, 44, 88)",
          "borderColor": "rgb(32, 44, 88)"
        }
      },
      "box_22": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 456,
          "y": 885,
          "zIndex": 99977
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_20": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 250,
          "y": 830,
          "zIndex": 99932
        },
        "parameters": {
          "backgroundColor": "rgb(242, 246, 250)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "number_kpi_avg_case_agent": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 150,
          "y": 268,
          "zIndex": 99955
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "step": "CaseCount_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": ""
        }
      },
      "number_2_1": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 967,
          "y": 835,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "count",
          "step": "count_calls",
          "title": ""
        }
      },
      "text_38": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 590,
          "zIndex": 99936
        },
        "parameters": {
          "fontSize": 16,
          "text": "SLA",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "headerFlash2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 1300,
          "x": 20,
          "y": 120,
          "zIndex": 4
        },
        "parameters": {
          "backgroundColor": "rgb(232, 238, 244)",
          "borderColor": "rgb(232, 238, 244)"
        }
      },
      "number_2_2": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 970,
          "y": 892,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "step": "calls_prev",
          "title": ""
        }
      },
      "text_32": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 390,
          "zIndex": 99963
        },
        "parameters": {
          "fontSize": 16,
          "text": "Activity Breakdown",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_31": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 330,
          "zIndex": 46
        },
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_34": {
        "type": "text",
        "position": {
          "x": 700,
          "y": 330,
          "zIndex": 99971
        },
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "autocenter.autocenter.bgcolor=#CAD4DE": {
        "type": "box",
        "position": {
          "h": 20,
          "w": 20,
          "x": 0,
          "y": 0,
          "zIndex": -100
        },
        "parameters": {
          "backgroundColor": "rgb(232, 238, 244)",
          "borderColor": "rgb(232, 238, 244)"
        }
      },
      "text_33": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 300,
          "zIndex": 99948
        },
        "parameters": {
          "fontSize": 12,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_30": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 190,
          "zIndex": 99954
        },
        "parameters": {
          "fontSize": 16,
          "text": "No. of Cases",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_2_3": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 970,
          "y": 950,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "step": "calls_teamavg",
          "title": ""
        }
      },
      "text_Escalated_TeamAvg": {
        "type": "text",
        "position": {
          "x": 250,
          "y": 948,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "number_2_4": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 970,
          "y": 1000,
          "zIndex": 99981
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "step": "calls_rank",
          "title": ""
        }
      },
      "text_FCR_PrevPeriod": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 892,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_Escalated_Rank": {
        "type": "text",
        "position": {
          "x": 250,
          "y": 1000,
          "zIndex": 99998
        },
        "parameters": {
          "fontSize": 14,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_desktop_only": {
        "type": "text",
        "position": {
          "x": 0,
          "y": 0,
          "zIndex": -1
        },
        "parameters": {
          "text": "This dashboard is designed \nfor desktop viewing only"
        }
      },
      "box_3_3": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 1105,
          "y": 940,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_3_2": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 900,
          "y": 940,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "box_3_1": {
        "type": "box",
        "position": {
          "h": 50,
          "w": 200,
          "x": 694,
          "y": 940,
          "zIndex": 99980
        },
        "parameters": {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(197, 211, 224)"
        }
      },
      "text_29": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 530,
          "zIndex": 99970
        },
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_28": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 470,
          "zIndex": 39
        },
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_perCase": {
        "type": "text",
        "position": {
          "x": 690,
          "y": 830,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 16,
          "text": "Activities \nper case",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_27": {
        "type": "text",
        "position": {
          "x": 520,
          "y": 0,
          "zIndex": 338
        },
        "parameters": {
          "fontSize": 24,
          "text": "My Performance Summary",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "text_26": {
        "type": "text",
        "position": {
          "x": 700,
          "y": 137,
          "zIndex": 99950
        },
        "parameters": {
          "fontSize": 16,
          "text": "Agent Activity",
          "textAlignment": "left",
          "textColor": "rgb(255, 255, 255)"
        }
      },
      "text_21": {
        "type": "text",
        "position": {
          "x": 40,
          "y": 390,
          "zIndex": 99929
        },
        "parameters": {
          "fontSize": 14,
          "text": "Duration",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_20": {
        "type": "text",
        "position": {
          "x": 50,
          "y": 500,
          "zIndex": 99957
        },
        "parameters": {
          "fontSize": 12,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)"
        }
      },
      "text_CallDuration_TeamAvg": {
        "type": "text",
        "position": {
          "x": 1100,
          "y": 948,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      },
      "toggle_static_case_open_closed": {
        "type": "pillbox",
        "position": {
          "w": 130,
          "x": 40,
          "y": 50,
          "zIndex": 99940
        },
        "parameters": {
          "exploreLink": false,
          "step": "static_case_open_closed",
          "title": "Case Status"
        }
      },
      "kpi_avg_activity_prev": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 760,
          "y": 892,
          "zIndex": 99999
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_activity",
          "step": "kpi_avg_prev_activities",
          "title": ""
        }
      },
      "kpi_avg_activity_rank": {
        "type": "number",
        "position": {
          "w": 130,
          "x": 760,
          "y": 1000,
          "zIndex": 99999
        },
        "parameters": {
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "step": "kpi_avg_activities_rank",
          "title": ""
        }
      },
      "text_Calls_TeamAvg": {
        "type": "text",
        "position": {
          "x": 900,
          "y": 948,
          "zIndex": 99983
        },
        "parameters": {
          "fontSize": 14,
          "text": "Team",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        }
      }
    }
  }
}
