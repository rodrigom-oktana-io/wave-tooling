{
  "label": "My Performance Summary",
  "folder": {
    "id": "<folderId>"
  },
  "state": {
    "dataSourceLinks": [],
    "gridLayouts": [
      {
        "maxWidth": 1360,
        "name": "Default",
        "numColumns": 36,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 25,
                "column": 1,
                "name": "text_My_Performance_Summary",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_1",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#634F95",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 1,
                "name": "listselector_static_case_open_closed",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 5,
                "name": "listselector_filter_role",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_filter_origin",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_filter_account",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 17,
                "name": "listselector_filter_product",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 21,
                "name": "listselector_Geography",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 25,
                "name": "listselector_filter_reason",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 31,
                "name": "listselector_Time_Selection",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 1,
                "name": "text_Agent_Performance",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 8,
                "name": "chart_average_case_count_over_time",
                "row": 8,
                "rowspan": 5,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_number_cases",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_CaseCount_PrevPeriod",
                "row": 10,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_kpi_unique_owner_count",
                "row": 11,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_owner_rank",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 9,
                "column": 8,
                "name": "chart_average_case_duration_over_time",
                "row": 16,
                "rowspan": 5,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_DurationCalculatedField_37",
                "row": 15,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_Duration_PrevPeriod",
                "row": 17,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_DurationCalculatedField_41",
                "row": 18,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "number_Duration_Rank",
                "row": 19,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "text_SLA",
                "row": 23,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 3,
                "name": "chart_SLA_breakdown",
                "row": 24,
                "rowspan": 5,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_2",
                "row": 14,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": [
                    "right",
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 8,
                "column": 19,
                "name": "text_Agent_Activity",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 28,
                "name": "pillbox_IsClosed_42",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 26,
                "name": "chart_average_activities_over_time",
                "row": 8,
                "rowspan": 5,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "number_count_activities",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "number_Activities_PrevPeriod",
                "row": 10,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "number_Activities_teamavg",
                "row": 11,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "number_rank_activities",
                "row": 12,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 8,
                "column": 19,
                "name": "text_Activity_Breakdown",
                "row": 15,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 12,
                "column": 21,
                "name": "chart_activity_type",
                "row": 16,
                "rowspan": 5,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 11,
                "column": 19,
                "name": "text_Activity_Priority",
                "row": 23,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 21,
                "name": "chart_activity_priority_type",
                "row": 24,
                "rowspan": 5,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "text_FCR",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "text_Vs_prior_period1",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "text_Team_Average1",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "text_Rank4",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_4",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": [
                    "right",
                    "top"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "text_Activities_per_case",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "text_Vs_prior_period",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "text_Team_Average2",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "text_Rank",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_9",
                "row": 30,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "number_kpi_fcr_percent",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "number_kpi_fcr_prev_percent",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "number_kpi_fcr_team_percent",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "number_kpi_fcr_percent_rank",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 19,
                "name": "number_kpi_avg_activities",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "number_kpi_avg_prev_activities",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "number_kpi_avg_activities_team",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "number_kpi_avg_activities_rank",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "text__Escalated",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "text_vs_prior_period",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "text_Team_Average",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "text_Rank5",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_5",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": [
                    "right"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "text_No_of_Calls",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "text_vs_prior_period1",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "text_Team_Average5",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "text_Rank2",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_8",
                "row": 33,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "number_kpi_escalation_percent",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "number_kpi_escalation_prev_percent",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "number_kpi_escalation_team_percent",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "number_kpi_escalation_percent_rank",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 19,
                "name": "number_count_calls",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "number_calls_prev",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "number_calls_teamavg",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "number_calls_rank",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "text_Constants_CaseCustomerSatLabel",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "text_vs_prior_period3",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "text_Team_Average3",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "text_Rank3",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_6",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "text_Average_Call_Duration",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "text_vs_prior_period2",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "text_Team_Average4",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "text_Rank1",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_7",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#C5D3E0",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "number_kpi_avg_csat",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 6,
                "name": "number_kpi_avg_prev_csat",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 10,
                "name": "number_kpi_avg_team_csat",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 14,
                "name": "number_kpi_csat_percent_rank",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 19,
                "name": "number_avg_call_duration",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 24,
                "name": "number_avg_call_duration_prev",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "number_avg_call_duration_teamavg",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "number_avg_call_duration_rank",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_15",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_16",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_17",
                "row": 34,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_18",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_19",
                "row": 37,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_20",
                "row": 31,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 18,
                "name": "container_21",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 28,
                "name": "container_22",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 24
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_10",
                "row": 7,
                "rowspan": 7,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_11",
                "row": 14,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 18,
                "column": 18,
                "name": "container_12",
                "row": 22,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_13",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#F2F6FA",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 20
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_3",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "rgba(51, 87, 121, 0.5)",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_23",
                "row": 7,
                "rowspan": 7,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 18,
                "column": 0,
                "name": "container_24",
                "row": 22,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_14",
                "row": 32,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_25",
                "row": 35,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#C5D3E0",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1,
        "rowHeight": "normal"
      }
    ],
    "layouts": [
      {
        "device": "default",
        "pages": [
          {
            "rows": [
              "text_desktop_only {colspan=2, rowspan=5}"
            ]
          }
        ],
        "version": 1
      }
    ],
    "steps": {
      "Geography": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.BillingCountry\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]],\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_unique_owner_count": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by all; q = foreach q generate unique('Id')/unique('OwnerId') as 'team_avg';\",\"measures\":[[\"team\",\"avg\"]],\"autoFilter\":true,\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Duration_Rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('{{column(Static_Duration.selection,[\\\"pigql_value\\\"]).asObject()}}')) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_fcr_prev_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\";\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_escalation_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId', 'IsEscalated'); q = foreach q generate 'IsEscalated' as 'IsEscalated', 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'IsEscalated' == \\\"true\\\"; s = group q by ('Owner.Name','OwnerId') left, r by ('Owner.Name','OwnerId'); s = foreach s generate q.'Owner.Name' as 'Owner.Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner.Name', 'OwnerId'); s = foreach s generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')) as 'rank_position'; s = filter s by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; s = filter s by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "owner_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by ('Owner.Name', 'OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"measures\":[[\"rank\",\"position\"]],\"autoFilter\":true,\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "OwnerId_hidden": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "singlerequired",
        "start": "[\"!{user.id}\"]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"OwnerId\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Reason_1": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\"Number of Cases\"}]],\"groups\":[\"Reason\"],\"filters\":[[\"OwnerId\",\"'OwnerId' in all\"],[\"Owner.Name\",\"'Owner.Name' in all\"]],\"order\":[[-1,{\"ascending\":null}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_product": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Product_Family_KB__c\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Case.Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity'; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_avg_prev_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregate",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"OwnerId\",\"{{selection(OwnerId_hidden)}}\"],[\"Owner.Name\",\"{{selection(filter_agent)}}\"],[\"CreatedDate__c\",[\"{{value(field(selection(Time_Selection), 'CompactPrev'))}}\"]],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "calls_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Case.Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "DurationCalculatedField_41": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "number_cases": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"filters\":[[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "average_case_duration_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"Duration\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Reason\\\")}};r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration', (case when (\\\"{{cell(filter_agent.selection, 0, \\\"Owner.Name\\\").asObject()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection, 0, \\\"OwnerId\\\").asObject()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('avg_Duration') as 'avg_Duration';\",\"groups\":[\"{{cell(Time_Selection.selection, 0, \\\"compactGroup\\\").asObject()}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Case_IsClosed_1": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "singlerequired",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Case.IsClosed\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "filter_reason": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\"Number of Cases\"}]],\"groups\":[\"Reason\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]],\"order\":[[-1,{\"ascending\":\"{{cell(Order_Select.selection,0,\\\"value\\\").asObject()}}\"}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "rank_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Case.Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "filter_origin": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "start": "[]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Origin\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_role": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "start": "[]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Role.Name\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_record_type": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Id\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_escalation_prev_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "Duration_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by 'IsClosed' == \\\"true\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Activities_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"team\",\"avg\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count()/unique('Owner.Id') as 'team_avg';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "avg_call_duration_teamavg": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_avg_activities_team": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity'; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_escalation_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\";\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Static_Duration": {
        "dimensions": [],
        "groups": [],
        "isFacet": true,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Case Duration\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": true,
        "values": [
          "{\"display\":\"Case Duration\",\"value\":[\"avg\",\"DurationCalculatedField\"],\"pigql_value\":\"DurationCalculatedField\",\"measure_field\":\"avg_DurationCalculatedField\"}"
        ],
        "datasets": []
      },
      "Order_Select": {
        "dimensions": [],
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[false]",
        "type": "static",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Desc\",\"value\":[\"false\"]}",
          "{\"display\":\"Asc\",\"value\":[\"true\"]}"
        ],
        "datasets": []
      },
      "kpi_fcr_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\";\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "count_calls": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "DurationCalculatedField_37": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = group q by all; q = foreach q generate avg('{{column(Static_Duration.selection, [\\\"pigql_value\\\"]).asObject()}}') as 'avg_Duration';\",\"measures\":[[\"avg\",\"Duration\"]],\"autoFilter\":true,\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_team_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"],[\"Role.Name\",\"{{column(filter_role.selection, [\\\"Role.Name\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Time_Selection": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Last 180 Days\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"YTD\",\"text_display\":\"vs Prior YTD\",\"Backlog30DayClose\":\"[\\\"current day - 395 days\\\"..\\\"current day - 1 year\\\"]\",\"BacklogCompare\":[\"current day - 1 year\",\"current day\"],\"BacklogLabel\":\"Backlog Last Year\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"year\",0],[\"year\",0]],\"CreatedField\":\"'CreatedDate__c_Month'\",\"CreatedProjection\":\"created['CreatedDate__c_Month']\",\"Current\":[\"current year\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Month'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"LastPeriodCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"LastYearCompare\":[\"current year - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"year\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"QTD\",\"text_display\":\"vs Prior QTD\",\"Backlog30DayClose\":\"[\\\"current day - 120 days\\\"..\\\"current day - 1 quarter\\\"]\",\"BacklogCompare\":[\"current day - 1 quarter\",\"current day\"],\"BacklogLabel\":\"Backlog Last Quarter\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate__c_Week')\",\"Compact\":[[\"quarter\",0],[\"quarter\",0]],\"CreatedField\":\"'CreatedDate__c_Week'\",\"CreatedProjection\":\"created['CreatedDate__c_Week']\",\"Current\":[\"current quarter\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Week'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"LastPeriodCompare\":[\"current quarter - 1 quarter\",\"current day - 1 quarter\"],\"LastYearCompare\":[\"current quarter - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Week\"],\"filter\":\"quarter\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"SAQL\":\"coalesce((avg(ThisYear['DurationCalculatedField'])-avg(LastYear['DurationCalculatedField']))/avg(LastYear['DurationCalculatedField']),0)*100 as sum_Percent\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"MTD\",\"text_display\":\"vs Prior MTD\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 1 month\\\"]\",\"BacklogCompare\":[\"current day - 1 month\",\"current day\"],\"BacklogLabel\":\"Backlog Last Month\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate__c_Month','CreatedDate__c_Day')\",\"Compact\":[[\"month\",0],[\"month\",0]],\"CreatedField\":\"'CreatedDate__c_Month','CreatedDate__c_Day'\",\"CreatedProjection\":\"created['CreatedDate__c_Month'] +\\\"~~~\\\" + created['CreatedDate__c_Day']\",\"Current\":[\"current month\",\"current month\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"LastPeriodCompare\":[\"current month - 1 month\",\"current day - 1 month\"],\"LastYearCompare\":[\"current month - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 7 Days\",\"text_display\":\"vs Prior 7 Days\",\"Backlog30DayClose\":\"[\\\"current day - 37 days\\\"..\\\"current day - 7 days\\\"]\",\"BacklogCompare\":[\"current day - 1 week\",\"current day\"],\"BacklogLabel\":\"Backlog Last 7 Days\",\"ClosedField\":\"'ClosedDate_Month','ClosedDate_Day'\",\"CoGroup\":\"('CreatedDate__c_Month','CreatedDate__c_Day')\",\"Compact\":[[\"day\",-7],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Month','CreatedDate__c_Day'\",\"CreatedProjection\":\"created['CreatedDate__c_Month'] +\\\"~~~\\\" + created['CreatedDate__c_Day']\",\"Current\":[\"7 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month'+\\\"~~~\\\"+'ClosedDate_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month']+\\\"~~~\\\"+created['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month'+\\\"~~~\\\"+'CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day' as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"LastPeriodCompare\":[\"7 days ago - 1 week\",\"current day - 1 week\"],\"LastYearCompare\":[\"7 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Day\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\",\"CreatedDate__c_Day\"],\"filter\":\"week\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month']+\\\"~~~\\\"+ThisYear['CreatedDate__c_Day'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month~~~CreatedDate__c_Day'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 30 Days\",\"text_display\":\"vs Prior 30 Days\",\"Backlog30DayClose\":\"[\\\"current day - 60 days\\\"..\\\"current day - 30 days\\\"]\",\"BacklogCompare\":[\"current day - 30 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 30 Days\",\"ClosedField\":\"'ClosedDate_Week'\",\"CoGroup\":\"('CreatedDate__c_Week')\",\"Compact\":[[\"day\",-30],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Week'\",\"CreatedProjection\":\"created['CreatedDate__c_Week']\",\"Current\":[\"30 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Week')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Week'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Week' as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"LastPeriodCompare\":[\"30 days ago - 30 days\",\"current day - 30 days\"],\"LastYearCompare\":[\"30 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Week\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Week\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Week'] as 'CreatedDate__c_Year~~~CreatedDate__c_Week'\",\"trendProjection\":\"toString(now(), \\\"yyyy~~~MM\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}",
          "{\"display\":\"Last 180 Days\",\"text_display\":\"vs Prior 180 Days\",\"Backlog30DayClose\":\"[\\\"current day - 240 days\\\"..\\\"current day - 180 days\\\"]\",\"BacklogCompare\":[\"current day - 180 days\",\"current day\"],\"BacklogLabel\":\"Backlog Last 180 Days\",\"ClosedField\":\"'ClosedDate_Month'\",\"CoGroup\":\"('CreatedDate__c_Month')\",\"Compact\":[[\"day\",-180],[\"day\",0]],\"CreatedField\":\"'CreatedDate__c_Month'\",\"CreatedProjection\":\"created['CreatedDate__c_Month']\",\"Current\":[\"180 days ago\",\"current day\"],\"FullGroup\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateClosedDate\":\"'ClosedDate_Year'+\\\"~~~\\\"+'ClosedDate_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCoGroupDate\":\"created['CreatedDate__c_Year']+\\\"~~~\\\"+created['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GenerateCreatedDate\":\"'CreatedDate__c_Year'+\\\"~~~\\\"+'CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"GroupbyClosedDate\":\"('ClosedDate_Year','ClosedDate_Month')\",\"GroupbyCreatedDate\":\"'CreatedDate__c_Year','CreatedDate__c_Month'\",\"Grouping\":\"'CreatedDate__c_Year~~~CreatedDate__c_Month' as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"LastPeriodCompare\":[\"180 days ago - 180 days\",\"current day - 180 days\"],\"LastYearCompare\":[\"180 days ago - 1 year\",\"current day - 1 year\"],\"Measure\":[\"Backlog\",\"Count\",null,{\"display\":\"Backlog Count at Start of Month\"}],\"compactGroup\":[\"CreatedDate__c_Year\",\"CreatedDate__c_Month\"],\"filter\":\"month\",\"queryCogroupNew\":\"first(ThisYear['CreatedDate__c_Year'])+\\\"~~~\\\"+ThisYear['CreatedDate__c_Month'] as 'CreatedDate__c_Year~~~CreatedDate__c_Month'\",\"trendProjection\":\"toString(now(), \\\"yyyy\\\")+\\\"~~~\\\"+toString(now(), \\\"99\\\")\"}"
        ],
        "datasets": []
      },
      "activity_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by 'ActivityType';q = foreach q generate 'ActivityType' as 'ActivityType' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"ActivityType\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "average_activities_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}}; r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count() as 'count', (case when (\\\"{{cell(filter_agent.selection,0, \\\"Owner.Name\\\").asString()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection,0, \\\"OwnerId\\\").asString()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection,0,\\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection,0,\\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_csat_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CSAT')*(-1)) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "SLA_breakdown": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"MilestoneStatus\"],\"filters\":[[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"],[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]],\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_csat": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CSAT\"]],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asObject()}}\"],[\"CreatedDate__c\",\"{{column(Time_Selection.selection, [\\\"Compact\\\"]).asObject()}}\"],[\"CSAT\",[[-10]],\">=\"],[\"IsClosed\",[\"true\"],\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "average_case_count_over_time": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\",null,{\"display\":\" \"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Reason\\\")}};r = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; r = filter r by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; r = group r by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); r = foreach r generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count() as 'count', (case when (\\\"{{cell(filter_agent.selection,0, \\\"Owner.Name\\\").asString()}}\\\" == \\\"all\\\" && \\\"{{cell(OwnerId_hidden.selection,0, \\\"OwnerId\\\").asString()}}\\\" == \\\"all\\\") then \\\"ALL\\\" else \\\"My Performance\\\" end) as 'Performance'; s = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; s = group s by ({{cell(Time_Selection.selection, 0, \\\"GroupbyCreatedDate\\\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \\\"GenerateCreatedDate\\\").asObject()}}, count()/unique('OwnerId') as 'count', \\\"All Agents - Team\\\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \\\"ALL\\\"; u = group u by ({{cell(Time_Selection.selection, 0, \\\"FullGroup\\\").asObject()}}, 'Performance'); u = foreach u generate {{cell(Time_Selection.selection, 0, \\\"Grouping\\\").asObject()}}, 'Performance' as 'Performance', sum('count') as 'count';\",\"autoFilter\":true,\"groups\":[\"{{cell(Time_Selection.selection,0,\\\"compactGroup\\\").asObject()}}\",\"Performance\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_call_duration": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "filter_account": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Account.Name\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "Activities_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = filter q  by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_fcr_percent_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by ('Owner.Name', 'OwnerId', 'First_Contact_Close__c'); q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', count() as 'count'; r = filter q by 'First_Contact_Close__c' == \\\"true\\\"; s = group q by ('Owner.Name','OwnerId') left, r by ('Owner.Name','OwnerId'); s = foreach s generate q.'Owner.Name' as 'Owner.Name', q.'OwnerId' as 'OwnerId', coalesce(count(r)/count(q),0) as 'escalated'; s = group s by ('Owner.Name', 'OwnerId'); s = foreach s generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('escalated')*(-1)) as 'rank_position'; s = filter s by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; s = filter s by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_activities_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}};q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()) as 'rank_position';q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "IsClosed_42": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[\"Completed\"]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"ActivityIsClosed\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "CaseCount_PrevPeriod": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = filter q  by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "filter_agent": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Name\"],\"filters\":[[\"OwnerId\",\"{{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "kpi_avg_prev_activities": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activity\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count()/unique('Case.Id') as 'avg_activity';\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_escalation_team_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% Escalated\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = group q by 'IsEscalated'; q = foreach q generate 'IsEscalated' as 'IsEscalated', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'IsEscalated' == \\\"true\\\"; \",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "activity_priority_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "pie",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = group q by 'Case.Priority';q = foreach q generate 'Case.Priority' as 'Case.Priority' , count() as 'count';q = order q by 'count' desc;\",\"autoFilter\":false,\"groups\":[\"Case.Priority\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "calls_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by count()*(-1)) as 'rank_position';q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "avg_call_duration_rank": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"rank\",\"position\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Case.Role.Name\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by ('Owner.Name','OwnerId'); q = foreach q generate 'Owner.Name' as 'Owner.Name', 'OwnerId' as 'OwnerId', rank() over ([..] partition by all order by avg('CallDurationInSeconds')) as 'rank_position'; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "kpi_fcr_team_percent": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"perc\",\"Percent\",null,{\"display\":\"% FCR\"}]],\"pigql\":\"q = load \\\"<ServiceCase>\\\"; q = filter q by {{column(filter_role.selection, [\\\"Role.Name\\\"]).asEquality(\\\"Role.Name\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"Current\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"true\\\"; q = group q by 'First_Contact_Close__c'; q = foreach q generate 'First_Contact_Close__c' as 'First_Contact_Close__c', count() as 'count', (count()) / sum(count()) over([..] partition by all)*100 as 'perc_Percent'; q = filter q by 'First_Contact_Close__c' == \\\"true\\\";\",\"autoFilter\":true}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "calls_prev": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate count() as 'count';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      },
      "static_case_open_closed": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[true]",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"IsClosed\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceCase>"
          }
        ]
      },
      "avg_call_duration_prev": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"CallDurationInSeconds\"]],\"pigql\":\"q = load \\\"<ServiceActivity>\\\"; q = filter q by {{column(filter_record_type.selection, [\\\"Id\\\"]).asEquality(\\\"Case.Id\\\")}}; q = filter q by {{cell(Time_Selection.selection, 0, \\\"LastPeriodCompare\\\").asDateRange(\\\"date('CreatedDate__c_Year','CreatedDate__c_Month','CreatedDate__c_Day')\\\")}}; q = filter q by {{column(static_case_open_closed.selection, [\\\"IsClosed\\\"]).asEquality(\\\"Case.IsClosed\\\")}}; q = filter q by {{column(filter_origin.selection, [\\\"Origin\\\"]).asEquality(\\\"Case.Origin\\\")}}; q = filter q by {{column(filter_product.selection, [\\\"Product_Family_KB__c\\\"]).asEquality(\\\"Case.Product_Family_KB__c\\\")}}; q = filter q by {{column(filter_account.selection, [\\\"Account.Name\\\"]).asEquality(\\\"Case.Account.Name\\\")}}; q = filter q by {{column(filter_reason.selection, [\\\"Reason\\\"]).asEquality(\\\"Case.Reason\\\")}}; q = filter q by {{column(IsClosed_42.selection, [\\\"ActivityIsClosed\\\"]).asEquality(\\\"ActivityIsClosed\\\")}};q = filter q by 'IsCall' == \\\"Yes\\\"; q = filter q by {{column(filter_agent.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}};q = filter q by {{column(OwnerId_hidden.selection, [\\\"OwnerId\\\"]).asEquality(\\\"OwnerId\\\")}};q = filter q by {{column(activity_type.selection, [\\\"ActivityType\\\"]).asEquality(\\\"ActivityType\\\")}}; q = filter q by {{column(activity_priority_type.selection, [\\\"Case.Priority\\\"]).asEquality(\\\"Case.Priority\\\")}}; q = group q by all; q = foreach q generate avg('CallDurationInSeconds') as 'avg_CallDurationInSeconds';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<ServiceActivity>"
          }
        ]
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "text_vs_prior_period3": {
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "container_19": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_vs_prior_period2": {
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "container_18": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_17": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_16": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_15": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_csat_percent_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_csat_percent_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "text_vs_prior_period1": {
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Rank": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "container_14": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_13": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_unique_owner_count": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "kpi_unique_owner_count",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Team Average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_filter_role": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "filter_role",
          "title": "Role"
        },
        "type": "listselector"
      },
      "number_kpi_avg_csat": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_csat",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_DurationCalculatedField_41": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "avg_Duration",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "DurationCalculatedField_41",
          "textAlignment": "left",
          "textColor": "rgb(64, 96, 127)",
          "title": "Team Average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_FCR": {
        "parameters": {
          "fontSize": 14,
          "text": "FCR",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_Team_Average": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Vs_prior_period": {
        "parameters": {
          "fontSize": 12,
          "text": "Vs prior period",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "container_23": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_fcr_team_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_fcr_team_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "text__Escalated": {
        "parameters": {
          "fontSize": 14,
          "text": "% Escalated",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "container_22": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_kpi_fcr_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 18,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_fcr_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "container_21": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_20": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_Rank2": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Rank3": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Rank4": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_Rank5": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Rank1": {
        "parameters": {
          "fontSize": 12,
          "text": "Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "listselector_filter_origin": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "filter_origin",
          "title": "Case Origin"
        },
        "type": "listselector"
      },
      "number_owner_rank": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "owner_rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_Activity_Priority": {
        "parameters": {
          "fontSize": 16,
          "text": "Activity Priority",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_12": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_11": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_Activity_Breakdown": {
        "parameters": {
          "fontSize": 16,
          "text": "Activity Breakdown",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_10": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "pillbox_IsClosed_42": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "measureField": "count",
          "step": "IsClosed_42",
          "title": ""
        },
        "type": "pillbox"
      },
      "number_count_activities": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "count_activities",
          "textAlignment": "left",
          "title": "Activities",
          "titleColor": "#335779",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_count_calls": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "count_calls",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "text_Constants_CaseCustomerSatLabel": {
        "parameters": {
          "fontSize": 14,
          "text": "CSAT",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "listselector_filter_product": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "step": "filter_product",
          "title": "Product"
        },
        "type": "listselector"
      },
      "chart_average_case_duration_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "step": "average_case_duration_over_time",
          "theme": "light"
        },
        "type": "chart"
      },
      "number_kpi_escalation_team_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_escalation_team_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_kpi_escalation_percent_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_escalation_percent_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_kpi_avg_prev_csat": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_prev_csat",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_static_case_open_closed": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "step": "static_case_open_closed",
          "title": "Open/Closed"
        },
        "type": "listselector"
      },
      "chart_average_activities_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": false,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "step": "average_activities_over_time",
          "theme": "light"
        },
        "type": "chart"
      },
      "number_kpi_avg_team_csat": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CSAT",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_team_csat",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_Time_Selection": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "",
          "step": "Time_Selection",
          "title": "Date Range"
        },
        "type": "listselector"
      },
      "text_vs_prior_period": {
        "parameters": {
          "fontSize": 12,
          "text": "vs prior period",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "container_25": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_average_case_count_over_time": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": false,
            "show": true,
            "customSize": "auto",
            "position": "bottom-center",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": false,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": false,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "step": "average_case_count_over_time",
          "theme": "light"
        },
        "type": "chart"
      },
      "container_24": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_calls_teamavg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "calls_teamavg",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_CaseCount_PrevPeriod": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "CaseCount_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_Agent_Performance": {
        "parameters": {
          "fontSize": 16,
          "text": "Agent Performance",
          "textAlignment": "left",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "number_DurationCalculatedField_37": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "avg_Duration",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "DurationCalculatedField_37",
          "textAlignment": "left",
          "textColor": "rgb(0, 0, 0)",
          "title": "Duration",
          "titleColor": "#335779",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_number_cases": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 32,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "number_cases",
          "textAlignment": "left",
          "title": "Cases",
          "titleColor": "#335779",
          "titleSize": 14
        },
        "type": "number"
      },
      "text_Team_Average5": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Team_Average1": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_Average_Call_Duration": {
        "parameters": {
          "fontSize": 14,
          "text": "Average Call Duration",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Team_Average2": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_Team_Average3": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_Team_Average4": {
        "parameters": {
          "fontSize": 12,
          "text": "Team Average",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "text_Agent_Activity": {
        "parameters": {
          "fontSize": 16,
          "text": "Agent Activity",
          "textAlignment": "left",
          "textColor": "rgb(255, 255, 255)"
        },
        "type": "text"
      },
      "number_Duration_Rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "Duration_Rank",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_4": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_5": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_6": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_8": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_Duration_PrevPeriod": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "Duration_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_kpi_fcr_prev_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_fcr_prev_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_kpi_avg_activities_team": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_activity",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_activities_team",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_filter_reason": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "step": "filter_reason",
          "title": "Case Reason"
        },
        "type": "listselector"
      },
      "number_kpi_escalation_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_escalation_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "chart_SLA_breakdown": {
        "parameters": {
          "legend": {
            "showHeader": true,
            "show": true,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "showMeasureTitle": true,
          "showTotal": true,
          "visualizationType": "pie",
          "step": "SLA_breakdown",
          "theme": "light",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "inner": 70
        },
        "type": "chart"
      },
      "text_My_Performance_Summary": {
        "parameters": {
          "fontSize": 24,
          "text": "My Performance Summary",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)"
        },
        "type": "text"
      },
      "number_kpi_avg_activities_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_activities_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "chart_activity_priority_type": {
        "parameters": {
          "legend": {
            "showHeader": true,
            "show": true,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "showMeasureTitle": true,
          "showTotal": true,
          "visualizationType": "pie",
          "step": "activity_priority_type",
          "theme": "light",
          "exploreLink": false,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "inner": 80
        },
        "type": "chart"
      },
      "chart_activity_type": {
        "parameters": {
          "legend": {
            "showHeader": true,
            "show": true,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "showMeasureTitle": true,
          "showTotal": true,
          "visualizationType": "pie",
          "step": "activity_type",
          "theme": "light",
          "exploreLink": false,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "inner": 80
        },
        "type": "chart"
      },
      "text_Vs_prior_period1": {
        "parameters": {
          "fontSize": 12,
          "text": "Vs prior period",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "number_avg_call_duration_teamavg": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CallDurationInSeconds",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "avg_call_duration_teamavg",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "text_SLA": {
        "parameters": {
          "fontSize": 16,
          "text": "SLA",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "number_calls_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "calls_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_kpi_escalation_prev_percent": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "perc_Percent",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_escalation_prev_percent",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_avg_call_duration": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_CallDurationInSeconds",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "avg_call_duration",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_Activities_PrevPeriod": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "Activities_PrevPeriod",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Vs prior period",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_kpi_avg_prev_activities": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_activity",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_prev_activities",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_Geography": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "step": "Geography",
          "title": "Region"
        },
        "type": "listselector"
      },
      "number_avg_call_duration_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "avg_call_duration_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_Activities_teamavg": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "team_avg",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "Activities_teamavg",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Team Average",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_calls_prev": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "count",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "calls_prev",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "listselector_filter_account": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "step": "filter_account",
          "title": "Account"
        },
        "type": "listselector"
      },
      "number_kpi_fcr_percent_rank": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_fcr_percent_rank",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_avg_call_duration_prev": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 16,
          "measureField": "avg_CallDurationInSeconds",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "avg_call_duration_prev",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_kpi_avg_activities": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "fontSize": 20,
          "measureField": "avg_activity",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_avg_activities",
          "textAlignment": "left",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_rank_activities": {
        "parameters": {
          "compact": true,
          "exploreLink": false,
          "fontSize": 14,
          "measureField": "rank_position",
          "numberColor": "#091A3E",
          "numberSize": 12,
          "step": "rank_activities",
          "textAlignment": "left",
          "textColor": "rgb(41, 71, 102)",
          "title": "Rank",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_No_of_Calls": {
        "parameters": {
          "fontSize": 14,
          "text": "No. of Calls",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_Activities_per_case": {
        "parameters": {
          "fontSize": 14,
          "text": "Activities per case",
          "textAlignment": "left",
          "textColor": "#335779"
        },
        "type": "text"
      }
    }
  }
}
