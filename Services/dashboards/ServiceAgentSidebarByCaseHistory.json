{"label":"Service Agent Sidebar By Case History","folder":{"id":"00lB0000000ubwgIAA"},"state":{"dataSourceLinks":[],"gridLayouts":[{"name":"iphone","numColumns":1,"pages":[{"widgets":[{"colspan":1,"column":0,"name":"text_desktop_only","row":7,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"normal","selectors":["maxWidth(599)"],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#F2F6FA","cellSpacingX":8,"cellSpacingY":8,"fit":"original","gutterColor":"#C5D3E0"},"version":1},{"maxWidth":500,"name":"Default","numColumns":12,"pages":[{"widgets":[{"colspan":6,"column":6,"name":"number_OwnerChangeCount","row":0,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(231, 237, 244)","borderColor":"#091A3E","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":6,"column":0,"name":"number_TotalCaseDuration","row":0,"rowspan":2,"widgetStyle":{"backgroundColor":"rgb(231, 237, 244)","borderColor":"#FFFFFF","borderEdges":[],"borderRadius":0,"borderWidth":8}},{"colspan":12,"column":0,"name":"chart_CaseOwnershipChanges","row":2,"rowspan":6,"widgetStyle":{"backgroundColor":"rgb(244, 246, 249)","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"chart_StageDurationVsAverage","row":8,"rowspan":10,"widgetStyle":{"backgroundColor":"rgb(244, 246, 249)","borderColor":"#E6ECF2","borderEdges":["bottom","right","left"],"borderRadius":0,"borderWidth":1}},{"colspan":12,"column":0,"name":"table_lens_1","row":18,"rowspan":7,"widgetStyle":{"borderEdges":[]}}]}],"selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"rgb(244, 246, 249)","cellSpacingX":0,"cellSpacingY":0,"documentId":"","fit":"original"},"version":1,"rowHeight":"normal"}],"layouts":[{"device":"default","pages":[{"rows":["text_desktop_only {colspan=2, rowspan=5}"]}],"version":1}],"steps":{"StageDurationVsAverage":{"isFacet":true,"isGlobal":false,"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"sum\",\"Duration\",null,{\"display\":\"Duration in Status\"}],[\"avg\",\"Duration\",null,{\"display\":\"Average Duration (hrs)\"}]],\"pigql\":\"q = load \\\"ServiceCaseHistory2\\\"; q = filter q by ChangeAfterCloseDate == \\\"false\\\"; q = filter q by 'Field' == \\\"Status\\\"; average = filter q by {{coalesce(column(Product_Select.result, [\\\"Product_Family_KB__c\\\"]), \\\"NA\\\").asEquality(\\\"Case.Product_Family_KB__c\\\")}}; average = filter average by {{coalesce(column(Reason_Select.result, [\\\"Reason\\\"]), \\\"NA\\\").asEquality(\\\"Case.Reason\\\")}}; averageOld = group average by 'OldValue';averageOld = foreach averageOld generate 'OldValue' as 'Status', avg(DateDiffOld) as 'Duration';averageNew = filter average by 'IsLastChange' == \\\"true\\\";  averageNew = group averageNew by 'NewValue';averageNew = foreach averageNew generate 'NewValue' as 'Status', avg(DateDiffNew) as 'Duration';averageTotal = union averageOld,averageNew;averageTotal = group averageTotal by 'Status';averageTotal = foreach averageTotal generate 'Status' as 'Status', avg(Duration) as 'avg_Duration';currentCase = filter q by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}}; currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Status', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \\\"true\\\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Status', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Status';currentCaseTotal = foreach currentCaseTotal generate 'Status' as 'Status', sum(Duration) as 'sum_Duration';CaseRecord = load \\\"ServiceCase2\\\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"Id\\\")}}; CaseRecord = group CaseRecord by 'Status'; CaseRecord = foreach CaseRecord generate 'Status' as 'Status', sum('Duration__c') as 'sum_Duration';FinalChart = group CaseRecord by 'Status' full, currentCaseTotal by 'Status', averageTotal by 'Status';FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['Status'] else currentCaseTotal['Status'] end) as 'Status', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration', avg(averageTotal['avg_Duration']) as 'avg_Duration'; order FinalChart by 'sum_Duration' desc;\",\"groups\":[\"Status\"]}","version":-1},"datasets":[{"name":"ServiceCaseHistory2"},{"name":"ServiceCase2"}]},"CaseIDSelect":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Id\"],\"order\":[[-1,{\"ascending\":false}]]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"Reason_Select":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Reason\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"TotalCaseDuration":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"sum\",\"Duration\"]],\"pigql\":\"q = load \\\"ServiceCaseHistory2\\\"; q = filter q by ChangeAfterCloseDate == \\\"false\\\"; q = filter q by 'Field' == \\\"Owner\\\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}};mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Id') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('OldOwner.Id')as'OldValue', sum('DateDiffOld') as 'DateDiffOld', 'CreatedDate' as 'CreatedDate', last('IsLastChange') as 'IsLastChange';mockTable = order mockTable by 'CreatedDate'; currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}};currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \\\"true\\\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration'; CaseRecord = load \\\"ServiceCase2\\\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"Id\\\")}}; CaseRecord = group CaseRecord by 'Owner.Id'; CaseRecord = foreach CaseRecord generate 'Owner.Id' as 'Owner', sum('Duration__c') as 'sum_Duration';  FinalChart = group CaseRecord by 'Owner' full, currentCaseTotal by 'Owner'; FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['Owner'] else currentCaseTotal['Owner'] end) as 'Owner', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration'; FinalChart = filter FinalChart by  {{coalesce(column(CaseOwnerIdSelect.result, [\\\"OwnerId\\\"]), \\\"NA\\\").asEquality(\\\"Owner\\\")}};\"}","version":-1},"datasets":[{"name":"ServiceCaseHistory2"},{"name":"ServiceCase2"}]},"HistoryRawTable":{"groups":[],"isFacet":true,"numbers":[],"query":"q = load \"ServiceCaseHistory2\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};Owner = filter q by 'Field' == \"Owner\"; Owner = filter Owner by ('NewOwner' matches \"005\" || 'NewOwner' matches \"00G\");Owner = foreach Owner generate avg('Case.Duration__c') as 'avg_Duration__c', toString(toDate(CreatedDate_sec_epoch) , \"yyyy-MM-dd hh:mm:ss a\") as 'CreatedDate', 'CreatedDate' as 'CreatedDateSort', 'NewOwner.Name' as 'NewOwner', 'NewStatus' as 'NewStatus';Status = filter q by 'Field' == \"Status\";Status = foreach Status generate toString(toDate(CreatedDate_sec_epoch) , \"yyyy-MM-dd hh:mm:ss a\") as 'CreatedDate','CreatedDate' as 'CreatedDateSort', avg('Case.Duration__c') as 'avg_Duration__c', 'NewOwner.Name' as 'NewOwner', 'NewStatus' as 'NewStatus';CombinedTable = union Status, Owner;CombinedTable = order CombinedTable by 'CreatedDateSort';","selectMode":"single","strings":[],"type":"saql","useGlobal":false},"Product_Select":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Product_Family_KB__c\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"CaseOwnerIdSelect":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"OwnerId\"]}","version":-1},"datasets":[{"name":"ServiceCase2"}]},"CaseId_1":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":false,"visualizationParameters":{"options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"CaseId\"]}","version":-1},"datasets":[{"name":"ServiceCaseHistory2"}]},"OwnerChangeCount":{"isFacet":true,"isGlobal":false,"selectMode":"single","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"q = load \\\"ServiceCaseHistory2\\\"; q = filter q by ChangeAfterCloseDate == \\\"false\\\";q = filter q by 'Field' == \\\"Owner\\\"; q = filter q by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}};mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Name') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('OldOwner.Name')as'OldValue', sum('DateDiffOld') as 'DateDiffOld';currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}};currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = group currentCase by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration'; CaseRecord = load \\\"ServiceCase2\\\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"Id\\\")}}; CaseRecord = group CaseRecord by 'Owner.Name'; CaseRecord = foreach CaseRecord generate 'Owner.Name' as 'Owner', sum('Duration__c') as 'sum_Duration';  FinalChart = group CaseRecord by all full, currentCaseTotal by all; FinalChart = foreach FinalChart generate  (case when count(currentCaseTotal) == 0 then 1 else count(currentCaseTotal) end) as 'count';\"}","version":-1},"datasets":[{"name":"ServiceCaseHistory2"},{"name":"ServiceCase2"}]},"CaseOwnershipChanges":{"isFacet":true,"isGlobal":false,"selectMode":"none","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"visualizationType":"hbar","options":{}},"query":{"query":"{\"measures\":[[\"sum\",\"Duration\"]],\"pigql\":\"q = load \\\"ServiceCaseHistory2\\\"; q = filter q by ChangeAfterCloseDate == \\\"false\\\";q = filter q by 'Field' == \\\"Owner\\\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}}; mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Name') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('IsLastChange') as 'IsLastChange', last('OldOwner.Name')as'OldValue', sum('DateDiffOld') as 'DateDiffOld';currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"CaseId\\\")}};averageOld = group mockTable by 'OldValue';averageOld = foreach averageOld generate 'OldValue' as 'Owner', avg(DateDiffOld) as 'Duration';averageNew = filter mockTable by 'IsLastChange' == \\\"true\\\"; averageNew = group averageNew by 'NewValue';averageNew = foreach averageNew generate 'NewValue' as 'Owner', avg(DateDiffNew) as 'Duration';averageTotal = union averageOld,averageNew;averageTotal = group averageTotal by 'Owner';averageTotal = foreach averageTotal generate 'Owner' as 'Owner', avg(Duration) as 'avg_Duration';currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \\\"true\\\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration';CaseRecord = load \\\"ServiceCase2\\\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\\\"Id\\\"]), \\\"NA\\\").asEquality(\\\"Id\\\")}}; CaseRecord = group CaseRecord by 'Owner.Name'; CaseRecord = foreach CaseRecord generate 'Owner.Name' as 'Owner', sum('Duration__c') as 'sum_Duration';  FinalChart = group CaseRecord by 'Owner' full, currentCaseTotal by 'Owner' full, averageTotal by 'Owner'; FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['Owner'] else currentCaseTotal['Owner'] end) as 'OldOwner.Name', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration', avg(averageTotal['avg_Duration']) as 'avg_Duration'; FinalChart = order FinalChart by 'sum_Duration' desc\",\"groups\":[\"OldOwner.Name\"]}","version":-1},"datasets":[{"name":"ServiceCaseHistory2"},{"name":"ServiceCase2"}]},"lens_1":{"groups":[],"isFacet":true,"numbers":[],"query":"q = load \"ServiceCaseHistory2\";q = foreach q generate 'Case.Account.Name' as 'Case.Account.Name', 'Case.Origin' as 'Case.Origin', 'Case.Priority' as 'Case.Priority', 'Case.RecordType.Name' as 'Case.RecordType.Name';q = limit q 100;","selectMode":"single","strings":[],"type":"saql","useGlobal":false}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"number_OwnerChangeCount":{"parameters":{"compact":false,"exploreLink":false,"fontSize":32,"measureField":"count","numberColor":"#091A3E","numberSize":24,"step":"OwnerChangeCount","textAlignment":"center","textColor":"rgb(41, 71, 102)","title":"Total Case Owners","titleColor":"#5C7A99","titleSize":14},"type":"number"},"chart_CaseOwnershipChanges":{"parameters":{"legend":{"showHeader":false,"show":true,"position":"right-top","inside":false,"customSize":"auto"},"showMeasureTitle":false,"visualizationType":"pie","step":"CaseOwnershipChanges","theme":"light","exploreLink":false,"title":{"label":"Duration by Case Owner","align":"left","subtitleLabel":"Sum of Duration"},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"inner":70,"centerValueType":"none","valueType":"compactNumber","centerText":""},"type":"chart"},"chart_StageDurationVsAverage":{"parameters":{"autoFitMode":"fit","showValues":true,"legend":{"showHeader":false,"show":true,"position":"top-center","inside":false,"customSize":"auto"},"axisMode":"sync","visualizationType":"vbar","exploreLink":false,"title":{"label":"Duration in Status vs Average","align":"left","subtitleLabel":"Sum of Duration"},"trellis":{"enable":false,"type":"x","parameters":{},"chartsPerLine":4,"showGridLines":true,"flipLabels":false},"measureAxis2":{"showTitle":true,"showAxis":true,"title":"","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"measureAxis1":{"showTitle":true,"showAxis":true,"title":"Duration","sqrtScale":false,"customDomain":{"showDomain":false,"low":null,"high":null},"referenceLine":null},"step":"StageDurationVsAverage","theme":"light","dimensionAxis":{"showTitle":false,"showAxis":true,"title":"","customSize":"auto","icons":{"useIcons":false,"iconProps":{"column":"","fit":"cover","type":"round"}}},"binValues":false,"bins":{"breakpoints":{"low":0,"high":100},"bands":{"low":{"label":"","color":"#B22222"},"medium":{"label":"","color":"#ffa500"},"high":{"label":"","color":"#008000"}}}},"type":"chart"},"table_lens_1":{"parameters":{"customBulkActions":[],"exploreLink":true,"maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","step":"HistoryRawTable"},"type":"table"},"number_TotalCaseDuration":{"parameters":{"compact":false,"exploreLink":false,"fontSize":32,"measureField":"sum_Duration","numberColor":"#091A3E","numberSize":24,"step":"TotalCaseDuration","textAlignment":"center","textColor":"rgb(41, 71, 102)","title":"Current Owner Duration","titleColor":"#5C7A99","titleSize":14},"type":"number"},"text_desktop_only":{"parameters":{"fontSize":20,"text":"This dashboard is designed for \n desktop viewing only","textAlignment":"center","textColor":"#091A3E"},"type":"text"}}}}