{
  "label": "Manager Overview",
  "folder": {
    "id": "<folderId>"
  },
  "state": {
    "dataSourceLinks": [],
    "gridLayouts": [
      {
        "maxWidth": 1360,
        "name": "Desktop",
        "numColumns": 48,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 13,
                "column": 1,
                "name": "text_2",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 4,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 27,
                "name": "text_1",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "rgb(60, 141, 225)",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 5,
                "column": 31,
                "name": "link_1",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 5,
                "column": 42,
                "name": "link_4",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 5,
                "column": 37,
                "name": "link_3",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_2",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "rgb(60, 141, 225)",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 5,
                "column": 1,
                "name": "listselector_1",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 12,
                "column": 1,
                "name": "chart_1",
                "row": 8,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 14,
                "name": "kpi_quota_attainment_widget",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 10,
                "column": 26,
                "name": "kpi_remaining_quota_widget",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 12,
                "column": 36,
                "name": "kpi_pipe_coverage_widget",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 4
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "text_3",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [
                    "top",
                    "left"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 16
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "text_4",
                "row": 6,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [
                    "bottom",
                    "left"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 16
                }
              },
              {
                "colspan": 9,
                "column": 2,
                "name": "chart_2",
                "row": 23,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 35,
                "name": "chart_6",
                "row": 23,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 13,
                "name": "chart_4",
                "row": 23,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 24,
                "name": "chart_5",
                "row": 23,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 10,
                "column": 2,
                "name": "color_chart_1",
                "row": 19,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 35,
                "name": "color_chart_3",
                "row": 19,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 24,
                "name": "color_chart_4",
                "row": 19,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 13,
                "name": "color_chart_2",
                "row": 19,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 4,
                "name": "kpi_closed_won_widget",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_closed_won_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 6,
                "column": 26,
                "name": "kpi_avg_activities_widget",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_avg_activities_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 6,
                "column": 37,
                "name": "kpi_avg_sales_cycle_widget",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_avg_sales_cycle_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 6,
                "column": 15,
                "name": "kpi_pipe_generated_widget",
                "row": 21,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_pipe_generated_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 8,
                "column": 39,
                "name": "listselector_2",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 7,
                "name": "listselector_3",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 13,
                "name": "listselector_4",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 24
                }
              },
              {
                "colspan": 5,
                "column": 19,
                "name": "ui_RecordType_Name",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 32,
                "column": 15,
                "name": "time_chart_forecast_NEW_widget",
                "row": 9,
                "rowspan": 7,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 5,
                "column": 42,
                "name": "listselector_6",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "container_5",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": [
                    "right"
                  ]
                }
              },
              {
                "colspan": 7,
                "column": 1,
                "name": "listselector_7",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "right",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 5,
                "column": 17,
                "name": "number_quota",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 27,
                "name": "kpi_remaining_after_forecast_widget",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 15,
                "column": 17,
                "name": "comparison_text_widget",
                "row": 17,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_4",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 20
                }
              },
              {
                "colspan": 34,
                "column": 14,
                "name": "container_6",
                "row": 7,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 34,
                "column": 14,
                "name": "container_7",
                "row": 9,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_8",
                "row": 17,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "container_1",
                "row": 8,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "right"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_12",
                "row": 19,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 37,
                "name": "text_5",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          }
        ],
        "rowHeight": "normal",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#C5D3E0",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1
      },
      {
        "name": "phone",
        "numColumns": 24,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 24,
                "column": 0,
                "name": "text_6",
                "row": 0,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 20,
                "column": 2,
                "name": "listselector_2",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 12,
                "name": "listselector_3",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 11,
                "column": 1,
                "name": "number_1",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 10,
                "column": 12,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_15",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "chart_7",
                "row": 6,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 11,
                "column": 0,
                "name": "text_9",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 14,
                "name": "text_10",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 4,
                "name": "number_2",
                "row": 14,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 17,
                "name": "number_3",
                "row": 14,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_9",
                "row": 15,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "text_11",
                "row": 17,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 12,
                "name": "color_chart_1_mobile",
                "row": 17,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "kpi_closed_won_widget",
                "row": 17,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_closed_won_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_3",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "text_12",
                "row": 20,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 12,
                "name": "color_chart_2_mobile",
                "row": 20,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "kpi_pipe_generated_widget",
                "row": 20,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_pipe_generated_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_10",
                "row": 19,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 1,
                "name": "text_13",
                "row": 23,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 12,
                "name": "color_chart_3_mobile",
                "row": 23,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "kpi_avg_sales_cycle_widget",
                "row": 23,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_avg_sales_cycle_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_11",
                "row": 22,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 1,
                "name": "text_14",
                "row": 26,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 12,
                "name": "color_chart_4_mobile",
                "row": 26,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "kpi_avg_activities_widget",
                "row": 26,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(kpi_avg_activities_yoy.result, 0, \"color\"),0).asString()}}",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_13",
                "row": 25,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "comparison_text_widget",
                "row": 28,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#5C7A99",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "listselector_7",
                "row": 29,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": [
                    "right",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_1",
                "row": 30,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_14",
                "row": 29,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#C5D3E0",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 2,
                "name": "listselector_5",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 14,
                "name": "listselector_9",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "normal",
        "selectors": [
          "maxWidth(599)"
        ],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#091A3E",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1
      }
    ],
    "layouts": [],
    "steps": {
      "kpi_avg_activities_yoy": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<activity>\\\"; a = filter a by 'IsClosed' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current_benchmark\\\").asString()}}]; u = load \\\"<user>\\\"; u = filter u by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; c = group u by all full, a by all; c = foreach c generate coalesce(count(a) / count(u),0) as 'avg_activities_completed'; a1 = load \\\"<activity>\\\"; a1 = filter a1 by 'IsClosed' == \\\"true\\\"; a1 = filter a1 by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a1 = filter a1 by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a1 = filter a1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a1 = filter a1 by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a1 = filter a1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a1 = filter a1 by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"prior_benchmark\\\").asString()}}]; u1 = load \\\"<user>\\\"; u1 = filter u1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u1 = filter u1 by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u1 = filter u1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; c1 = group u1 by all full, a1 by all; c1 = foreach c1 generate coalesce(count(a1) / count(u1),0) as 'avg_activities_completed'; d = group c by all full, c1 by all; d = foreach d generate coalesce((sum(c['avg_activities_completed']) - sum(c1['avg_activities_completed'])) / sum(c1['avg_activities_completed']),0) as 'sum_YoY'; d = foreach d generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<activity>"
          }
        ]
      },
      "Mobile_Forecast_Chart": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"amount\"]],\"pigql\":\"a = load \\\"<opportunity>\\\";a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}};a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}} ; b = filter a by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; b = group b by all; b = foreach b generate \\\"Forecast\\\" as 'Group', coalesce(sum('Amount'),0) as 'sum_amount'; c = filter a by 'IsWon' == \\\"true\\\"; c = group c by all; c = foreach c generate \\\"Won\\\" as 'Group', coalesce(sum('Amount'),0) as 'sum_amount'; d = group a by all; d = foreach d generate coalesce({{coalesce(cell(kpi_quota.result, 0, \\\"sum_quota\\\"),0).asObject()}},0) as 'sum_amount', \\\"Quota\\\" as 'Group'; e = union c,b,d;\",\"groups\":[\"Group\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_quota": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"quota\"]],\"pigql\":\"b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = group b by all; b = foreach b generate sum('QuotaAmount') as 'sum_quota'; fake = load \\\"<opportunity>\\\"; fake = group fake by all; fake = foreach fake generate 0 as 'sum_quota'; final = union b, fake; final = group final by all; final = foreach final generate sum('sum_quota') as 'sum_quota';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<quota>"
          }
        ]
      },
      "hbar_sales_reps": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":\"{{cell(metric_dropdown.selection, 0, \\\"compact\\\").asObject()}}\",\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = load \\\"<opportunity>\\\"; c = filter c by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; c = filter c by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; c = filter c by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; c = filter c by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; c = filter c by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; d = load \\\"<opportunity>\\\"; d = filter d by 'IsClosed'== \\\"true\\\"; d = filter d by 'IsWon' == \\\"true\\\"; d = filter d by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; d = filter d by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; d = filter d by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; d = filter d by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; d = filter d by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; e = load \\\"<activity>\\\"; e = filter e by 'IsClosed' == \\\"true\\\"; e = filter e by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; e = filter e by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; e = filter e by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; e = filter e by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; e = filter e by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; g = load \\\"<opportunity>\\\"; g = filter g by 'IsClosed' == \\\"false\\\"; g = filter g by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; g = filter g by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; g = filter g by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; g = filter g by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; g = filter g by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; g = filter g by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; g = filter g by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; u = load \\\"<user>\\\"; u = filter u by 'IsActive' == \\\"true\\\"; u = filter u by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; z = group u by 'Id' full, a by 'OwnerId' full, b by 'User.Id' full, c by 'OwnerId' full, d by 'OwnerId' full, e by 'OwnerId' full, g by 'OwnerId'; z = foreach z generate u['Id'] as 'Id', coalesce(first(u['Name']), first(a['Owner.Name']), first(b['User.Name']), first(c['Owner.Name']), first(d['Owner.Name']), first(e['Owner.Name']), first(g['Owner.Name'])) as 'Owner.Name', (case when coalesce(coalesce(sum(a['Amount']),0) / coalesce(sum(b['QuotaAmount']),0),0) > 0 then coalesce(coalesce(sum(a['Amount']),0) / coalesce(sum(b['QuotaAmount']),0),0) else 0 end) as 'sum_quota_attainment',  (case when coalesce(sum(b['QuotaAmount']),0) - coalesce(sum(a['Amount']),0) > 0 then coalesce(sum(b['QuotaAmount']),0) - coalesce(sum(a['Amount']),0) else 0 end) as 'sum_remaining_quota',  coalesce(sum(a['Amount']),0) as 'sum_closed_won',  coalesce(sum(c['Amount']),0) as 'sum_pipe_generated',  coalesce((sum(d['CloseDate_day_epoch']) - sum(d['CreatedDate__c_day_epoch'])) / count(d),0) as 'avg_sales_cycle',  coalesce(count(e),0) as 'sum_activities_completed',  coalesce(sum(g['Amount']) /(case when coalesce(sum(b['QuotaAmount']),0) - coalesce(sum(a['Amount']),0) > 0 then coalesce(sum(b['QuotaAmount']),0) - coalesce(sum(a['Amount']),0) else 0 end),0) as 'sum_pipe_coverage'; z = order z by '{{cell(metric_dropdown.selection, 0, \\\"projection\\\").asString()}}' {{cell(metric_dropdown.selection, 0, \\\"order\\\").asString()}};\",\"groups\":[\"Owner.Name\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "Id_2": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"a = load \\\"<user>\\\";\\na = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}};\\na = group a by 'Name';\\na = foreach a generate 'Name' as 'Name';\\n\",\"measures\":[],\"groups\":[\"Name\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<user>"
          }
        ]
      },
      "kpi_team_count": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"u = load \\\"<user>\\\"; u = filter u by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; u = foreach u generate count() as 'count';\",\"measures\":[[\"count\",\"*\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<user>"
          }
        ]
      },
      "time_chart_closed_won": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Quarter\"]],\"filters\":[[\"IsWon\",[\"true\"],\"in\"],[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"CloseDate\",[[[\"quarter\",-8],[\"quarter\",0]]]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_chart_pipe_generated": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[[\"CreatedDate__c_Year\",\"CreatedDate__c_Quarter\"]],\"filters\":[[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"CreatedDate__c\",[[[\"quarter\",-8],[\"quarter\",0]]]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "Id_1": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[\"!{user.rolename}\"]",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Role.ParentRole.DeveloperName\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "open_forecast_categories": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multirequired",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'ForecastCategory' == \\\"Closed\\\"; a = group a by 'ForecastCategoryName'; a = foreach a generate 'ForecastCategoryName'; b = load \\\"<opportunity>\\\"; b = filter b by 'ForecastCategory' != \\\"Closed\\\"; b = group b by 'ForecastCategoryName'; b = foreach b generate 'ForecastCategoryName'; c = union a,b;\",\"groups\":[\"ForecastCategoryName\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_generated_yoy": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"current_benchmark\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"prior_benchmark\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate coalesce((sum(a['Amount']) - sum(b['Amount'])) / sum(b['Amount']),0) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_chart_avg_sales_cycle": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"OpportunityAge\"]],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Quarter\"]],\"filters\":[[\"IsClosed\",[\"true\"],\"in\"],[\"IsWon\",[\"true\"],\"in\"],[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"CloseDate\",[[[\"quarter\",-8],[\"quarter\",0]]]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_remaining_after_forecast": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"remaining_quota\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; a = filter a by ('IsWon' == \\\"true\\\" || {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}); b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate sum(b['QuotaAmount']) as 'quota', coalesce(sum(a['Amount']),0) as 'amount'; c = foreach c generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'sum_remaining_quota';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          },
          {
            "name": "<quota>"
          }
        ]
      },
      "kpi_remaining_quota": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"remaining_quota\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate sum(b['QuotaAmount']) as 'quota', coalesce(sum(a['Amount']),0) as 'amount'; c = foreach c generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'sum_remaining_quota';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_avg_activities": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"activities_completed\"]],\"pigql\":\"a = load \\\"<activity>\\\"; a = filter a by 'IsClosed' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; a = group a by all; a = foreach a generate count() as 'count'; u = load \\\"<user>\\\"; u = filter u by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; b = group u by all full, a by all; b = foreach b generate coalesce(sum(a['count']) / count(u),0) as 'avg_activities_completed';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<activity>"
          }
        ]
      },
      "dropdown_opportunity_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Type\"],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_chart_forecast_NEW": {
        "isFacet": false,
        "isGlobal": false,
        "label": "time_chart_forecast_NEW",
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "comparisontable",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\",\"B\",{\"display\":\"sum_Amount\",\"format\":\"currencydollars\"}]],\"columns\":[{\"query\":{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Week\"]],\"filters\":[[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"ForecastCategoryName\",\"{{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asObject()}}\"],[\"Close Date\",[\"{{cell(time_dropdown.selection, 0, \\\"current_compact\\\").asObject()}}\"]]]}},{\"query\":{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Week\"]],\"formula\":\"sum(A) over ([..0] partition by all order by ('CloseDate_Year~~~CloseDate_Week'))\",\"filters\":[[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"ForecastCategoryName\",\"{{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asObject()}}\"],[\"Close Date\",[\"{{cell(time_dropdown.selection, 0, \\\"current_compact\\\").asObject()}}\"]]]},\"format\":\"currencydollars\"}],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Week\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_generated_benchmark": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}];a = group a by 'Owner.Name'; a = foreach a generate sum('Amount') as 'Amount'; c = group a by all full, b by all; c = foreach c generate (case when count(a) == 1 then coalesce((sum(a['Amount']) - (sum(b['Amount'])/{{coalesce(column(Hidden_UserCount.result,[\\\"sum_PipeGenUserCount\\\"]),1).asObject()}})) / (sum(b['Amount'])/{{coalesce(column(Hidden_UserCount.result,[\\\"sum_PipeGenUserCount\\\"]),1).asObject()}}),0) else 0 end) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_closed_won": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"filters\":[[\"IsWon\",[\"true\"],\"in\"],[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"Close Date\",[\"{{cell(time_dropdown.selection, 0, \\\"current_compact\\\").asObject()}}\"]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "dropdown_record_type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RecordType.Name\"],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_generated": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"filters\":[[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"Created Date\",[\"{{cell(time_dropdown.selection, 0, \\\"current_compact\\\").asObject()}}\"]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_chart_avg_activities": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"a = load \\\"<activity>\\\"; a = filter a by 'IsClosed' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [\\\"8 quarters ago\\\"..\\\"current quarter\\\"]; a = group a by ('ActivityDate_Year', 'ActivityDate_Quarter'); a = foreach a generate 'ActivityDate_Year' + \\\"~~~\\\" + 'ActivityDate_Quarter' as 'ActivityDate_Year~~~ActivityDate_Quarter', coalesce(count() / {{coalesce(cell(kpi_team_count.result, 0, \\\"count\\\"),0).asObject()}},0) as 'avg_activities_completed';\",\"measures\":[[\"avg\",\"activities_completed\"]],\"groups\":[[\"ActivityDate_Year\",\"ActivityDate_Quarter\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<activity>"
          }
        ]
      },
      "kpi_closed_won_benchmark": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by 'IsWon' == \\\"true\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}];a = group a by 'Owner.Name'; a = foreach a generate sum('Amount') as 'Amount'; c = group a by all full, b by all; c = foreach c generate (case when count(a) == 1 then coalesce((sum(a['Amount']) - (sum(b['Amount']) /{{coalesce(column(Hidden_UserCount.result,[\\\"sum_Usercount\\\"]),1).asObject()}})) / (sum(b['Amount'])/{{coalesce(column(Hidden_UserCount.result,[\\\"sum_Usercount\\\"]),1).asObject()}}),0) else 0 end) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_closed_won_yoy": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current_benchmark\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by 'IsWon' == \\\"true\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"prior_benchmark\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate coalesce((sum(a['Amount']) - sum(b['Amount'])) / sum(b['Amount']),0) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "Mobile_Forecast_Chart_NoQUota": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"amount\"]],\"pigql\":\"a = load \\\"<opportunity>\\\";a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}};a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}} ; b = filter a by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; b = group b by all; b = foreach b generate \\\"Forecast\\\" as 'Group', coalesce(sum('Amount'),0) as 'sum_amount'; c = filter a by 'IsWon' == \\\"true\\\"; c = group c by all; c = foreach c generate \\\"Won\\\" as 'Group', coalesce(sum('Amount'),0) as 'sum_amount';  e = union c,b;\",\"groups\":[\"Group\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_avg_sales_cycle_benchmark": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsClosed'== \\\"true\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by 'IsClosed'== \\\"true\\\"; b = filter b by 'IsWon' == \\\"true\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate coalesce((sum(a['CloseDate_day_epoch']) - sum(a['CreatedDate__c_day_epoch'])) / count(a),0) as 'current', coalesce((sum(b['CloseDate_day_epoch']) - sum(b['CreatedDate__c_day_epoch'])) / count(b),0) as 'previous'; c = group c by all; c = foreach c generate coalesce((sum('current') - sum('previous')) / sum('previous'),0) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' < 0 then \\\"#3CAF6D\\\" when 'sum_YoY' > 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_avg_activities_benchmark": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<activity>\\\"; a = filter a by 'IsClosed' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; u = load \\\"<user>\\\"; u = filter u by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u = filter u by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; c = group u by all full, a by all; c = foreach c generate coalesce(count(a) / count(u),0) as 'avg_activities_completed'; a1 = load \\\"<activity>\\\"; a1 = filter a1 by 'IsClosed' == \\\"true\\\"; a1 = filter a1 by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; a1 = filter a1 by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; a1 = filter a1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a1 = filter a1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a1 = filter a1 by date('ActivityDate_Year','ActivityDate_Month','ActivityDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; u1 = load \\\"<user>\\\"; u1 = filter u1 by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Name\\\")}}; u1 = filter u1 by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Name\\\")}}; u1 = filter u1 by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; c1 = group u1 by all full, a1 by all; c1 = foreach c1 generate coalesce(count(a1) / count(u1),0) as 'avg_activities_completed'; d = group c by all full, c1 by all; d = foreach d generate coalesce((sum(c['avg_activities_completed']) - sum(c1['avg_activities_completed'])) / sum(c1['avg_activities_completed']),0) as 'sum_YoY'; d = foreach d generate 'sum_YoY', (case when 'sum_YoY' > 0 then \\\"#3CAF6D\\\" when 'sum_YoY' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<activity>"
          }
        ]
      },
      "kpi_avg_sales_cycle_yoy": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"YoY\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsClosed'== \\\"true\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current_benchmark\\\").asString()}}]; b = load \\\"<opportunity>\\\"; b = filter b by 'IsClosed'== \\\"true\\\"; b = filter b by 'IsWon' == \\\"true\\\"; b = filter b by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; b = filter b by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"prior_benchmark\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate coalesce((sum(a['CloseDate_day_epoch']) - sum(a['CreatedDate__c_day_epoch'])) / count(a),0) as 'current', coalesce((sum(b['CloseDate_day_epoch']) - sum(b['CreatedDate__c_day_epoch'])) / count(b),0) as 'previous'; c = group c by all; c = foreach c generate coalesce((sum('current') - sum('previous')) / sum('previous'),0) as 'sum_YoY'; c = foreach c generate 'sum_YoY', (case when 'sum_YoY' < 0 then \\\"#3CAF6D\\\" when 'sum_YoY' > 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_avg_sales_cycle": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"avg\",\"OpportunityAge\"]],\"filters\":[[\"IsWon\",[\"true\"],\"in\"],[\"RecordType.Name\",\"{{cell(dropdown_record_type.selection, 0, \\\"RecordType.Name\\\").asObject()}}\"],[\"Type\",\"{{cell(dropdown_opportunity_type.selection, 0, \\\"Type\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(Id_2.selection, 0, \\\"Name\\\").asObject()}}\"],[\"Owner.Name\",\"{{cell(hbar_sales_reps.selection, 0, \\\"Owner.Name\\\").asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{cell(Id_1.selection, 0, \\\"Owner.Role.ParentRole.DeveloperName\\\").asObject()}}\"],[\"Close Date\",[\"{{cell(time_dropdown.selection, 0, \\\"current_compact\\\").asObject()}}\"]]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_dropdown": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"This Quarter\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"This Month\",\"current\":\"\\\"current month\\\"..\\\"current month\\\"\",\"prior\":\"\\\"current month - 1 year\\\"..\\\"current month - 1 year\\\"\",\"current_benchmark\":\"\\\"current month\\\"..\\\"current day\\\"\",\"prior_benchmark\":\"\\\"current month - 1 year\\\"..\\\"current day - 1 year\\\"\",\"current_compact\":[[\"month\",0],[\"month\",0]]}",
          "{\"display\":\"This Quarter\",\"current\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\",\"prior\":\"\\\"current quarter - 1 year\\\"..\\\"current quarter - 1 year\\\"\",\"current_benchmark\":\"\\\"current quarter\\\"..\\\"current day\\\"\",\"prior_benchmark\":\"\\\"current quarter - 1 year\\\"..\\\"current day - 1 year\\\"\",\"current_compact\":[[\"quarter\",0],[\"quarter\",0]]}",
          "{\"display\":\"This Year\",\"current\":\"\\\"current year\\\"..\\\"current year\\\"\",\"prior\":\"\\\"current year - 1 year\\\"..\\\"current year - 1 year\\\"\",\"current_benchmark\":\"\\\"current year\\\"..\\\"current day\\\"\",\"prior_benchmark\":\"\\\"current year - 1 year\\\"..\\\"current day - 1 year\\\"\",\"current_compact\":[[\"year\",0],[\"year\",0]]}",
          "{\"display\":\"Next Month\",\"current\":\"\\\"1 month ahead\\\"..\\\"1 month ahead\\\"\",\"prior\":\"\\\"1 month ahead - 1 year\\\"..\\\"1 month ahead - 1 year\\\"\",\"current_benchmark\":\"\\\"1 month ahead\\\"..\\\"1 month ahead\\\"\",\"prior_benchmark\":\"\\\"1 month ahead - 1 year\\\"..\\\"1 month ahead - 1 year\\\"\",\"current_compact\":[[\"month\",1],[\"month\",1]]}",
          "{\"display\":\"Next Quarter\",\"current\":\"\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"\",\"prior\":\"\\\"1 quarter ahead - 1 year\\\"..\\\"1 quarter ahead - 1 year\\\"\",\"current_benchmark\":\"\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"\",\"prior_benchmark\":\"\\\"1 quarter ahead - 1 year\\\"..\\\"1 quarter ahead - 1 year\\\"\",\"current_compact\":[[\"quarter\",1],[\"quarter\",1]]}",
          "{\"display\":\"Next Year\",\"current\":\"\\\"1 year ahead\\\"..\\\"1 year ahead\\\"\",\"prior\":\"\\\"1 year ahead - 1 year\\\"..\\\"1 year ahead - 1 year\\\"\",\"current_benchmark\":\"\\\"1 year ahead\\\"..\\\"1 year ahead\\\"\",\"prior_benchmark\":\"\\\"1 year ahead - 1 year\\\"..\\\"1 year ahead - 1 year\\\"\",\"current_compact\":[[\"year\",1],[\"year\",1]]}",
          "{\"display\":\"Last Year\",\"current\":\"\\\"current year - 1 year\\\"..\\\"current year - 1 year\\\"\",\"prior\":\"\\\"current year - 2 year\\\"..\\\"current year - 2 year\\\"\",\"current_benchmark\":\"\\\"current year - 1 year\\\"..\\\"current day - 1 year\\\"\",\"prior_benchmark\":\"\\\"current year - 2 year\\\"..\\\"current day - 2 year\\\"\",\"current_compact\":[[\"year\",-1],[\"year\",-1]]}"
        ],
        "datasets": []
      },
      "Hidden_UserCount": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Usercount\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = filter q by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; q = filter q by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}};   won = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asObject()}}];  won = filter won by 'IsWon' == \\\"true\\\"; created = filter q by date('CreatedDate__c_Year', 'CreatedDate__c_Month', 'CreatedDate__c_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asObject()}}]; final = group won by all, created by all; final = foreach final generate unique(won['OwnerId']) as 'sum_Usercount', unique(created['OwnerId']) as 'sum_PipeGenUserCount'; \",\"groups\":[],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_coverage": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"pipe_coverage\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate sum(b['QuotaAmount']) as 'quota', coalesce(sum(a['Amount']),0) as 'amount'; c = foreach c generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'remaining_quota'; d = load \\\"<opportunity>\\\"; d = filter d by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; d = filter d by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; d = filter d by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; d = filter d by 'IsClosed' == \\\"false\\\"; d = filter d by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asObject()}}]; e = group c by all full, d by all; e = foreach e generate coalesce(sum(d['Amount']),0) as 'amount', sum(c['remaining_quota']) as 'remaining_quota'; e = foreach e generate round(coalesce(sum('amount') / sum('remaining_quota'),0),1) as 'sum_pipe_coverage'; f = filter e by 'sum_pipe_coverage' > 0;\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          },
          {
            "name": "<quota>"
          }
        ]
      },
      "kpi_quota_attainment": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"quota_attainment\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(dropdown_record_type.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(dropdown_opportunity_type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; b = load \\\"<quota>\\\"; b = filter b by {{column(Id_2.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(hbar_sales_reps.selection, [\\\"Owner.Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(Id_1.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{cell(time_dropdown.selection, 0, \\\"current\\\").asString()}}]; c = group a by all full, b by all; c = foreach c generate (case when sum(a['Amount']) / sum(b['QuotaAmount']) > 0 then round(sum(a['Amount']) / sum(b['QuotaAmount']),2) else 0 end) as 'sum_quota_attainment';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "metric_dropdown": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Closed Won\",\"compact\":[[\"sum\",\"closed_won\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_closed_won\"}",
          "{\"display\":\"Quota Attainment\",\"compact\":[[\"sum\",\"quota_attainment\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_quota_attainment\"}",
          "{\"display\":\"Remaining Quota\",\"compact\":[[\"sum\",\"remaining_quota\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_remaining_quota\"}",
          "{\"display\":\"Pipe Generated\",\"compact\":[[\"sum\",\"pipe_generated\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_pipe_generated\"}",
          "{\"display\":\"Avg Sales Cycle (days)\",\"compact\":[[\"avg\",\"sales_cycle\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"avg_sales_cycle\"}",
          "{\"display\":\"Activities Completed\",\"compact\":[[\"sum\",\"activities_completed\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_activities_completed\"}",
          "{\"display\":\"Pipe Coverage\",\"compact\":[[\"sum\",\"pipe_coverage\",null,{\"display\":\" \"}]],\"order\":\"desc\",\"projection\":\"sum_pipe_coverage\"}"
        ],
        "datasets": []
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "kpi_pipe_coverage_widget": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "step": "kpi_pipe_coverage",
          "textAlignment": "center",
          "title": "Pipe Coverage",
          "titleColor": "#E6ECF2",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_15": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_14": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_13": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_14": {
        "parameters": {
          "fontSize": 12,
          "text": "Avg Activities per Week",
          "textAlignment": "left",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "text_13": {
        "parameters": {
          "fontSize": 12,
          "text": "Avg. Sales Cycle (days)",
          "textAlignment": "left",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "kpi_quota_attainment_widget": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_quota_attainment",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "step": "kpi_quota_attainment",
          "textAlignment": "center",
          "title": "Quota Attainment",
          "titleColor": "#E6ECF2",
          "titleSize": 12
        },
        "type": "number"
      },
      "text_10": {
        "parameters": {
          "fontSize": 14,
          "text": "Pipe Coverage",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "text_12": {
        "parameters": {
          "fontSize": 12,
          "text": "Pipe Generated",
          "textAlignment": "left",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "text_11": {
        "parameters": {
          "fontSize": 12,
          "text": "Closed Won",
          "textAlignment": "left",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "kpi_avg_activities_widget": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_YoY",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "step": "kpi_avg_activities_yoy",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "kpi_remaining_after_forecast_widget": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#091A3E",
          "numberSize": 18,
          "step": "kpi_remaining_after_forecast",
          "textAlignment": "right",
          "title": "Remaining after forecast",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_4": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_5": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "text": "Team Members",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "chart_6": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": true,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "light",
          "step": "time_chart_avg_sales_cycle"
        },
        "type": "chart"
      },
      "container_6": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 24,
          "text": "Manager Overview",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "chart_5": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": true,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "light",
          "step": "time_chart_avg_activities"
        },
        "type": "chart"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_8": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_8": {
        "parameters": {
          "autoFitMode": "fit",
          "showValues": true,
          "bins": {
            "breakpoints": {
              "high": 100,
              "low": 0
            },
            "bands": {
              "high": {
                "color": "#008000",
                "label": ""
              },
              "low": {
                "color": "#B22222",
                "label": ""
              },
              "medium": {
                "color": "#ffa500",
                "label": ""
              }
            }
          },
          "legend": {
            "showHeader": true,
            "show": true,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "hbar",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "binValues": false,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "wave",
          "step": "Id_1",
          "dimensionAxis": {
            "showTitle": true,
            "customSize": "auto",
            "showAxis": true,
            "title": ""
          }
        },
        "type": "chart"
      },
      "text_5": {
        "parameters": {
          "fontSize": 12,
          "text": "Base forecast on:",
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_4": {
        "parameters": {
          "fontSize": 12,
          "text": "Click on a team member to see their stats",
          "textAlignment": "left",
          "textColor": "rgb(92, 122, 153)"
        },
        "type": "text"
      },
      "chart_7": {
        "parameters": {
          "autoFitMode": "fit",
          "showValues": true,
          "bins": {
            "breakpoints": {
              "high": 100,
              "low": 0
            },
            "bands": {
              "high": {
                "color": "#008000",
                "label": ""
              },
              "low": {
                "color": "#B22222",
                "label": ""
              },
              "medium": {
                "color": "#ffa500",
                "label": ""
              }
            }
          },
          "legend": {
            "showHeader": true,
            "show": true,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "hbar",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "binValues": false,
          "textColor": "#FFFFFF",
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "step": "Mobile_Forecast_Chart",
          "theme": "dark",
          "dimensionAxis": {
            "showTitle": true,
            "customSize": "auto",
            "showAxis": true,
            "title": ""
          }
        },
        "type": "chart"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_2": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": true,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "light",
          "step": "time_chart_closed_won"
        },
        "type": "chart"
      },
      "text_7": {
        "parameters": {
          "fontSize": 14,
          "text": "Remaining Quota",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "chart_1": {
        "parameters": {
          "autoFitMode": "none",
          "showValues": true,
          "bins": {
            "breakpoints": {
              "high": 100,
              "low": 0
            },
            "bands": {
              "high": {
                "color": "#008000",
                "label": ""
              },
              "low": {
                "color": "#B22222",
                "label": ""
              },
              "medium": {
                "color": "#ffa500",
                "label": ""
              }
            }
          },
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "sync",
          "visualizationType": "hbar",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "binValues": false,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "light",
          "step": "hbar_sales_reps",
          "dimensionAxis": {
            "showTitle": false,
            "customSize": "auto",
            "showAxis": true,
            "title": ""
          }
        },
        "type": "chart"
      },
      "text_6": {
        "parameters": {
          "fontSize": 20,
          "text": "Sales Manager Overview",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "chart_4": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "multi",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": true,
          "timeAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "theme": "light",
          "step": "time_chart_pipe_generated"
        },
        "type": "chart"
      },
      "text_9": {
        "parameters": {
          "fontSize": 14,
          "text": "Quota Attainment",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "ui_RecordType_Name": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "dropdown_record_type",
          "title": "Record Type"
        },
        "type": "listselector"
      },
      "text_1": {
        "parameters": {
          "fontSize": 14,
          "text": "Overview",
          "textAlignment": "center",
          "textColor": "rgb(60, 141, 225)"
        },
        "type": "text"
      },
      "color_chart_1": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "step": "kpi_closed_won",
          "textAlignment": "center",
          "title": "Closed Won",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "color_chart_2": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "step": "kpi_pipe_generated",
          "textAlignment": "center",
          "title": "Pipe Generated",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "color_chart_3": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "avg_OpportunityAge",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "step": "kpi_avg_sales_cycle",
          "textAlignment": "center",
          "title": "Avg Sales Cycle (days)",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "color_chart_4": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "avg_activities_completed",
          "numberColor": "#091A3E",
          "numberSize": 24,
          "step": "kpi_avg_activities",
          "textAlignment": "center",
          "title": "Avg Activities Completed per Sales Rep",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "kpi_remaining_quota_widget": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "step": "kpi_remaining_quota",
          "textAlignment": "center",
          "title": "Remaining Quota",
          "titleColor": "#E6ECF2",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_3": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#FFFFFF",
          "numberSize": 20,
          "step": "kpi_pipe_coverage",
          "textAlignment": "right",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 16
        },
        "type": "number"
      },
      "number_2": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_quota_attainment",
          "numberColor": "#FFFFFF",
          "numberSize": 20,
          "step": "kpi_quota_attainment",
          "textAlignment": "right",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 20
        },
        "type": "number"
      },
      "number_1": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#FFFFFF",
          "numberSize": 20,
          "step": "kpi_remaining_quota",
          "textAlignment": "right",
          "title": "Remaining Quota",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "color_chart_3_mobile": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "avg_OpportunityAge",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "step": "kpi_avg_sales_cycle",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_12": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "number_quota": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_quota",
          "numberColor": "#091A3E",
          "numberSize": 18,
          "step": "kpi_quota",
          "textAlignment": "right",
          "title": "Quota",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "container_11": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_10": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "color_chart_1_mobile": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#FFFFFF",
          "numberSize": 16,
          "step": "kpi_closed_won",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "comparison_text_widget": {
        "parameters": {
          "fontSize": 14,
          "text": "Metrics are compared to last year",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "text"
      },
      "time_chart_forecast_NEW_widget": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "customSize": "auto",
            "position": "right-top",
            "inside": false
          },
          "axisMode": "sync",
          "visualizationType": "time",
          "missingValue": "connect",
          "exploreLink": true,
          "timeAxis": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "title": {
            "label": "Cumulative Closed Won",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "fillArea": true,
          "showZero": true,
          "measureAxis2": {
            "sqrtScale": false,
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "referenceLine": null
          },
          "measureAxis1": {
            "sqrtScale": false,
            "showTitle": false,
            "referenceLine": {
              "color": "rgb(224, 79, 0)",
              "label": "Quota",
              "value": "{{coalesce(cell(kpi_quota.result, 0, \"sum_quota\"),0).asObject()}}"
            },
            "showAxis": true,
            "title": ""
          },
          "step": "time_chart_forecast_NEW",
          "theme": "dark"
        },
        "type": "chart"
      },
      "kpi_avg_sales_cycle_widget": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_YoY",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "step": "kpi_avg_sales_cycle_yoy",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "kpi_closed_won_widget": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_YoY",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "step": "kpi_closed_won_yoy",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_7": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "step": "metric_dropdown",
          "title": ""
        },
        "type": "listselector"
      },
      "listselector_6": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "step": "open_forecast_categories",
          "title": ""
        },
        "type": "listselector"
      },
      "listselector_9": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "step": "open_forecast_categories",
          "title": "Base forecast on:"
        },
        "type": "listselector"
      },
      "listselector_3": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Id_2",
          "title": "Direct Reports"
        },
        "type": "listselector"
      },
      "listselector_2": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "step": "time_dropdown",
          "title": "Time Period"
        },
        "type": "listselector"
      },
      "listselector_5": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "step": "Id_1",
          "title": "Manager Role"
        },
        "type": "listselector"
      },
      "listselector_4": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "dropdown_opportunity_type",
          "title": "Opportunity Type"
        },
        "type": "listselector"
      },
      "link_3": {
        "parameters": {
          "destination": "<TeamProductivity>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Team Productivity",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "link_4": {
        "parameters": {
          "destination": "<QuotaProgress>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Quota Progress",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destination": "<PipelineChanges>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Pipeline Changes",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "kpi_pipe_generated_widget": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_YoY",
          "numberColor": "#FFFFFF",
          "numberSize": 12,
          "step": "kpi_pipe_generated_yoy",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "step": "Id_1",
          "title": "Manager's Role"
        },
        "type": "listselector"
      },
      "color_chart_2_mobile": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#FFFFFF",
          "numberSize": 16,
          "step": "kpi_pipe_generated",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      },
      "color_chart_4_mobile": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "avg_activities_completed",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "step": "kpi_avg_activities",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#FFFFFF",
          "titleSize": 12
        },
        "type": "number"
      }
    }
  }
}
