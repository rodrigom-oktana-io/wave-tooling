{
  "label": "Quota Progress",
  "folder": {
    "id": "<folderId>"
  },
  "state": {
    "dataSourceLinks": [],
    "gridLayouts": [
      {
        "maxWidth": 1360,
        "name": "Default",
        "numColumns": 48,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 11,
                "column": 1,
                "name": "text_3",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 27,
                "name": "link_1",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 5,
                "column": 31,
                "name": "link_2",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 37,
                "name": "link_3",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 42,
                "name": "text_4",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "rgb(60, 141, 225)",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_4",
                "row": 1,
                "rowspan": 2,
                "widgetStyle": {
                  "borderColor": "rgb(60, 141, 225)",
                  "borderEdges": [
                    "bottom"
                  ]
                }
              },
              {
                "colspan": 7,
                "column": 40,
                "name": "ui_time_dropdown",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "rgb(255, 255, 255)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 6,
                "column": 1,
                "name": "listselector_1",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 6,
                "column": 8,
                "name": "listselector_2",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 6,
                "column": 15,
                "name": "ui_opp_type",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 6,
                "column": 22,
                "name": "ui_RecordType_Name",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 1,
                "name": "number_1",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 1,
                "name": "ui_closed_won",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "{{coalesce(cell(color_closed_won.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "left"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 10,
                "name": "ui_percent_closed_won",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(color_closed_won.result, 0, \"color\"), 0).asString()}}",
                  "borderColor": "{{coalesce(cell(color_closed_won.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 4
                }
              },
              {
                "colspan": 7,
                "column": 1,
                "name": "ui_kpi_open_pipe",
                "row": 10,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "{{coalesce(cell(color_open_pipe.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "left"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 10,
                "name": "ui_percent_open_pipe",
                "row": 10,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(color_open_pipe.result, 0, \"color\"), 0).asString()}}",
                  "borderColor": "{{coalesce(cell(color_open_pipe.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 4
                }
              },
              {
                "colspan": 7,
                "column": 1,
                "name": "ui_kpi_pipe_generated",
                "row": 12,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "{{coalesce(cell(color_pipe_generated.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "left"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 10,
                "name": "ui_percent_pipe_generated",
                "row": 12,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "{{coalesce(cell(color_pipe_generated.result, 0, \"color\"), 0).asString()}}",
                  "borderColor": "{{coalesce(cell(color_pipe_generated.result, 0, \"color\"), 0).asString()}}",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 4
                }
              },
              {
                "colspan": 12,
                "column": 1,
                "name": "text_5",
                "row": 15,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "rgba(51, 87, 121, 0.5)",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "container_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 13,
                "column": 15,
                "name": "number_6",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 40,
                "name": "ui_open_forecast_categories",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 16,
                "name": "number_7",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 9,
                "column": 23,
                "name": "number_8",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 34,
                "name": "number_9",
                "row": 7,
                "rowspan": 1,
                "widgetStyle": {
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 32,
                "column": 15,
                "name": "ui_time_chart_forecast",
                "row": 9,
                "rowspan": 6,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 34,
                "column": 14,
                "name": "container_closed_won",
                "row": 7,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": [
                    "bottom",
                    "top"
                  ]
                }
              },
              {
                "colspan": 14,
                "column": 1,
                "name": "text_1",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 6,
                "column": 1,
                "name": "ui_kpi_coverage_next_month",
                "row": 18,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": [],
                  "borderWidth": 8
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "ui_kpi_coverage_next_quarter",
                "row": 18,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 13,
                "column": 2,
                "name": "ui_pipeline_coverage",
                "row": 20,
                "rowspan": 6,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 0,
                "name": "container_1",
                "row": 18,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": [],
                  "borderRadius": 0
                }
              },
              {
                "colspan": 14,
                "column": 17,
                "name": "text_2",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 20,
                "name": "ui_static_opportunity_grouping",
                "row": 18,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 18,
                "name": "ui_opportunity_amount_by_stage",
                "row": 19,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 16,
                "name": "container_pipeline_coverage",
                "row": 18,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 14,
                "column": 33,
                "name": "text_7",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 34,
                "name": "chart_1",
                "row": 18,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 32,
                "name": "container_6",
                "row": 18,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 13,
                "column": 1,
                "name": "text_6",
                "row": 27,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 46,
                "column": 1,
                "name": "table_1",
                "row": 29,
                "rowspan": 6,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_7",
                "row": 27,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": [
                    "top"
                  ],
                  "borderWidth": 4
                }
              },
              {
                "colspan": 48,
                "column": 0,
                "name": "container_2",
                "row": 3,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#E6ECF2",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 20
                }
              },
              {
                "colspan": 16,
                "column": 0,
                "name": "container_3",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 16,
                "name": "container_8",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 16,
                "column": 32,
                "name": "container_9",
                "row": 16,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "container_10",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 6
                }
              },
              {
                "colspan": 5,
                "column": 9,
                "name": "container_11",
                "row": 8,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 16
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "container_12",
                "row": 10,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 6
                }
              },
              {
                "colspan": 5,
                "column": 9,
                "name": "container_13",
                "row": 10,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 16
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "container_14",
                "row": 12,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "bottom",
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 6
                }
              },
              {
                "colspan": 5,
                "column": 9,
                "name": "container_15",
                "row": 12,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [
                    "top",
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 16
                }
              },
              {
                "colspan": 14,
                "column": 0,
                "name": "container_16",
                "row": 14,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#091A3E",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 8
                }
              },
              {
                "colspan": 19,
                "column": 14,
                "name": "container_17",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 15,
                "column": 33,
                "name": "container_18",
                "row": 5,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "top"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 20
                }
              }
            ]
          }
        ],
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#C5D3E0",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1,
        "rowHeight": "normal"
      },
      {
        "name": "iPhone",
        "numColumns": 24,
        "pages": [
          {
            "widgets": [
              {
                "colspan": 11,
                "column": 12,
                "name": "listselector_2",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "ui_time_dropdown",
                "row": 2,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "rgb(255, 255, 255)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_5",
                "row": 4,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 11,
                "column": 13,
                "name": "ui_open_forecast_categories",
                "row": 6,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "rgba(230, 236, 242, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "ui_time_chart_forecast",
                "row": 7,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "text_7",
                "row": 26,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "ui_static_opportunity_grouping",
                "row": 16,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_1",
                "row": 27,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "text_6",
                "row": 36,
                "rowspan": 1,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "table_1",
                "row": 37,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "text_9",
                "row": 0,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 1,
                "name": "number_2",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_19",
                "row": 15,
                "rowspan": 10,
                "widgetStyle": {
                  "backgroundColor": "#C5D3E0",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_20",
                "row": 25,
                "rowspan": 10,
                "widgetStyle": {
                  "backgroundColor": "#C5D3E0",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_21",
                "row": 35,
                "rowspan": 10,
                "widgetStyle": {
                  "backgroundColor": "#C5D3E0",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 22,
                "column": 1,
                "name": "chart_3",
                "row": 17,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 12,
                "column": 11,
                "name": "number_3",
                "row": 5,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "number_4",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 12,
                "name": "number_5",
                "row": 13,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 24,
                "column": 0,
                "name": "container_22",
                "row": 13,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 11,
                "column": 1,
                "name": "listselector_4",
                "row": 3,
                "rowspan": 1,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "selectors": [
          "maxWidth(599)"
        ],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#091A3E",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "documentId": "",
          "fit": "original"
        },
        "version": 1,
        "rowHeight": "normal"
      }
    ],
    "layouts": [],
    "steps": {
      "direct_reports": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[],\"pigql\":\"a = load \\\"<user>\\\"; a = filter a by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Role.ParentRole.DeveloperName\\\")}}; a = group a by 'Name'; a = foreach a generate 'Name' as 'Name';\",\"groups\":[\"Name\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<user>"
          }
        ]
      },
      "color_pipe_generated": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"percent\",\"color\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(percent_pipe_generated.result, 0, \\\"sum_percent\\\"), 0).asObject()}} as 'sum_percent'; q = foreach q generate (case when 'sum_percent' > 0 then \\\"#3CAF6D\\\" when 'sum_percent' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color', 'sum_percent' as 'sum_percent';\",\"autoFilter\":false}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "RecordType_Name": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"RecordType.Name\"],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_coverage_next_quarter": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"pipe_coverage\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(quota_left_next_quarter.result, 0, \\\"sum_QuotaAmount\\\"), 0).asObject()}} as 'quota_next_quarter', {{coalesce(cell(pipe_next_quarter.result, 0, \\\"sum_Amount\\\"), 0).asObject()}} as 'pipe_next_quarter'; q = foreach q generate (case when 'quota_next_quarter' == 0 then 1 else 'pipe_next_quarter' / 'quota_next_quarter' end) as 'sum_pipe_coverage';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "raw_opportunities": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[\"Account.Name\",\"Name\",\"Owner.Name\",\"CloseDate\",\"ForecastCategory\",\"StageName\"],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CloseDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\"],[\"Owner.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\"],[\"RecordType.Name\",\"{{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asObject()}}\"],[\"Type\",\"{{column(Opportunity_Type.selection, [\\\"Type\\\"]).asObject()}}\"],[\"{{column(static_opportunity_grouping.selection, [\\\"grouping\\\"]).asObject()}}\",\"{{column(opportunity_amount_by_stage.selection, [\\\"Group\\\"]).asObject()}}\"],[\"Name\",\"{{column(top_opportunities.selection, [\\\"Name\\\"]).asObject()}}\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_quota": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"QuotaAmount\"]],\"filters\":[[\"StartDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\",\"in\"],[\"User.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\",\"in\"],[\"User.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\",\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<quota>"
          }
        ]
      },
      "percent_pipe_generated": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"percent\"]],\"pigql\":\"opp = load \\\"<opportunity>\\\"; opp = filter opp by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; opp = filter opp by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; opp = filter opp by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; opp = filter opp by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; opp = filter opp by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day')\\\")}}; today = foreach opp generate sum('Amount') as 'Amount'; last_week = filter opp by date('CreatedDate_Year', 'CreatedDate_Month', 'CreatedDate_Day') in [..\\\"7 day ago\\\"]; last_week = foreach last_week generate sum('Amount') as 'Amount'; s = group today by all full, last_week by all; s = foreach s generate (case when (coalesce(sum(last_week['Amount']), 0) == 0 && coalesce(sum(today['Amount']), 0) > 0) then 1.0 else (coalesce(sum(today['Amount']), 0) - sum(last_week['Amount'])) / sum(last_week['Amount'])end) as 'sum_percent';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "open_forecast_categories": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multirequired",
        "start": "[\"Closed\"]",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = group a by 'ForecastCategoryName'; a = foreach a generate 'ForecastCategoryName' as 'ForecastCategoryName', (case when 'ForecastCategoryName' == \\\"Closed\\\" then - 1 else avg('Stage.SortOrder')end) as 'SortOrder'; a = order a by 'SortOrder' asc;\",\"measures\":[],\"groups\":[\"ForecastCategoryName\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "percent_closed_won": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": false,
        "selectMode": "single",
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"opp = load \\\"<opportunity>\\\"; opp = filter opp by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; opp = filter opp by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; opp = filter opp by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; opp = filter opp by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; opp = filter opp by 'IsWon' == \\\"true\\\"; opp = filter opp by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; today = foreach opp generate sum('Amount') as 'Amount'; last_week = filter opp by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [..\\\"7 day ago\\\"]; last_week = foreach last_week generate sum('Amount') as 'Amount'; s = group today by all full, last_week by all; s = foreach s generate (case when (coalesce(sum(last_week['Amount']), 0) == 0 && coalesce(sum(today['Amount']), 0) > 0) then 1.0 else (coalesce(sum(today['Amount']), 0) - sum(last_week['Amount'])) / sum(last_week['Amount'])end) as 'sum_percent';\",\"measures\":[[\"count\",\"*\",\"sum_percent\"]],\"measuresMap\":{},\"groups\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_remaining_after_forecast": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"remaining_quota\"]],\"pigql\":\"won_plus_forecast = load \\\"<opportunity>\\\"; won_plus_forecast = filter won_plus_forecast by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; won_plus_forecast = filter won_plus_forecast by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; won_plus_forecast = filter won_plus_forecast by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}} || 'IsWon' == \\\"true\\\"; won_plus_forecast = filter won_plus_forecast by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; won_plus_forecast = filter won_plus_forecast by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; won_plus_forecast = filter won_plus_forecast by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; quota = load \\\"<quota>\\\"; quota = filter quota by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; quota = filter quota by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; quota = filter quota by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')\\\")}}; remaining_quota = group won_plus_forecast by all full, quota by all; remaining_quota = foreach remaining_quota generate sum(quota['QuotaAmount']) as 'quota', coalesce(sum(won_plus_forecast['Amount']), 0) as 'amount'; remaining_quota = foreach remaining_quota generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'sum_remaining_quota';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_chart_forecast": {
        "isFacet": true,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "time",
          "options": {}
        },
        "query": {
          "query": "{\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; a = filter a by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; a = group a by ('CloseDate_Year', 'CloseDate_Week'); a = foreach a generate 'CloseDate_Year' + \\\"~~~\\\" + 'CloseDate_Week' as 'CloseDate_Year~~~CloseDate_Week', sum(sum('Amount')) over([.. 0] partition by all order by ('CloseDate_Year', 'CloseDate_Week')) as 'sum_Amount';\",\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[[\"CloseDate_Year\",\"CloseDate_Week\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_remaining_quota": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"remaining_quota\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; b = load \\\"<quota>\\\"; b = filter b by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')\\\")}}; c = group a by all full, b by all; c = foreach c generate sum(b['QuotaAmount']) as 'quota', coalesce(sum(a['Amount']), 0) as 'amount'; c = foreach c generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'sum_remaining_quota';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<quota>"
          }
        ]
      },
      "pipeline_coverage": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "none",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; quota_next_quarter = group q by all; quota_next_quarter = foreach quota_next_quarter generate {{coalesce(cell(quota_left_next_quarter.result, 0, \\\"sum_QuotaAmount\\\"), 0).asObject()}} as 'sum_Amount', \\\"Next Quarter\\\" as 'Period', \\\"Quota Left\\\" as 'What'; quota_next_month = group q by all; quota_next_month = foreach quota_next_month generate {{coalesce(cell(quota_left_next_month.result, 0, \\\"sum_QuotaAmount\\\"), 0).asObject()}} as 'sum_Amount', \\\"Next Month\\\" as 'Period', \\\"Quota Left\\\" as 'What'; pipe_next_quarter = group q by all; pipe_next_quarter = foreach pipe_next_quarter generate {{coalesce(cell(pipe_next_quarter.result, 0, \\\"sum_Amount\\\"), 0).asObject()}} as 'sum_Amount', \\\"Next Quarter\\\" as 'Period', \\\"Open Pipe\\\" as 'What'; pipe_next_month = group q by all; pipe_next_month = foreach pipe_next_month generate {{coalesce(cell(pipe_next_month.result, 0, \\\"sum_Amount\\\"), 0).asObject()}} as 'sum_Amount', \\\"Next Month\\\" as 'Period', \\\"Open Pipe\\\" as 'What'; u = union quota_next_quarter, quota_next_month, pipe_next_quarter, pipe_next_month; u = order u by 'Period';\",\"groups\":[\"Period\",\"What\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "pipe_next_month": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = filter q by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; q = filter q by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; q = filter q by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by 'IsClosed' == \\\"false\\\"; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [\\\"1 month ahead\\\"..\\\"1 month ahead\\\"]; q = group q by all; q = foreach q generate coalesce(sum('Amount'), 0) as 'sum_Amount';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_open_pipe": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CloseDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\",\"in\"],[\"Owner.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\",\"in\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\",\"in\"],[\"RecordType.Name\",\"{{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asObject()}}\",\"in\"],[\"Type\",\"{{column(Opportunity_Type.selection, [\\\"Type\\\"]).asObject()}}\",\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "static_opportunity_grouping": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Sales Stage\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"Sales Stage\",\"grouping\":\"StageName\",\"grouping_column\":\"Group\"}",
          "{\"display\":\"Forecast Category\",\"grouping\":\"ForecastCategoryName\",\"grouping_column\":\"Group\"}"
        ],
        "datasets": []
      },
      "color_closed_won": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"percent\",\"color\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(percent_closed_won.result, 0, \\\"sum_percent\\\"), 0).asObject()}} as 'sum_percent'; q = foreach q generate (case when 'sum_percent' > 0 then \\\"#3CAF6D\\\" when 'sum_percent' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color', 'sum_percent' as 'sum_percent';\",\"autoFilter\":false}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "percent_open_pipe": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"percent\"]],\"pigql\":\"opp_history = load \\\"<pipeline_trending>\\\"; opp_history = filter opp_history by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"Opportunity.RecordType.Name\\\")}}; opp_history = filter opp_history by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Opportunity.Type\\\")}}; opp_history = filter opp_history by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Opportunity.Owner.Name\\\")}}; opp_history = filter opp_history by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Opportunity.Owner.Role.ParentRole.DeveloperName\\\")}}; opp_history = filter opp_history by 'Stage.IsClosed' == \\\"false\\\"; opp_history = filter opp_history by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; today = filter opp_history by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\\\"current day\\\"]; today = filter today by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\\\"1 day ahead\\\"..]; today = foreach today generate sum('Amount') as 'Amount'; last_week = filter opp_history by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\\\"8 days ago\\\"]; last_week = filter last_week by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\\\"7 days ago\\\"..]; last_week = foreach last_week generate sum('Amount') as 'Amount'; s = group today by all full, last_week by all; s = foreach s generate (case when (coalesce(sum(last_week['Amount']), 0) == 0 && coalesce(sum(today['Amount']), 0) > 0) then 1.0 else (coalesce(sum(today['Amount']), 0) - sum(last_week['Amount'])) / sum(last_week['Amount'])end) as 'sum_percent';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<pipeline_trending>"
          }
        ]
      },
      "kpi_closed_won": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"filters\":[[\"IsWon\",[\"true\"],\"in\"],[\"CloseDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\",\"in\"],[\"Owner.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\",\"in\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\",\"in\"],[\"RecordType.Name\",\"{{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asObject()}}\",\"in\"],[\"Type\",\"{{column(Opportunity_Type.selection, [\\\"Type\\\"]).asObject()}}\",\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_generated": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"filters\":[[\"CreatedDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\",\"in\"],[\"Owner.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\",\"in\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\",\"in\"],[\"RecordType.Name\",\"{{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asObject()}}\",\"in\"],[\"Type\",\"{{column(Opportunity_Type.selection, [\\\"Type\\\"]).asObject()}}\",\"in\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "manager_role": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "start": "[\"!{user.rolename}\"]",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Owner.Role.ParentRole.DeveloperName\"],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "top_opportunities": {
        "isFacet": true,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"groups\":[\"Name\"],\"filters\":[[\"IsClosed\",[\"false\"],\"in\"],[\"CloseDate\",\"{{column(time_dropdown.selection, [\\\"current\\\"]).asObject()}}\",\"in\"],[\"Owner.Name\",\"{{column(direct_reports.selection, [\\\"Name\\\"]).asObject()}}\",\"in\"],[\"Owner.Role.ParentRole.DeveloperName\",\"{{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asObject()}}\",\"in\"],[\"RecordType.Name\",\"{{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asObject()}}\",\"in\"],[\"Type\",\"{{column(Opportunity_Type.selection, [\\\"Type\\\"]).asObject()}}\",\"in\"],[\"{{column(static_opportunity_grouping.selection, [\\\"grouping\\\"]).asObject()}}\",\"{{column(opportunity_amount_by_stage.selection, [\\\"Group\\\"]).asObject()}}\"]],\"order\":[[-1,{\"ascending\":false}]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "quota_left_next_quarter": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"QuotaAmount\"]],\"pigql\":\"q = load \\\"<quota>\\\"; q = filter q by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; q = filter q by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; q = filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"]; opp = load \\\"<opportunity>\\\"; opp = filter opp by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; opp = filter opp by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; opp = filter opp by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; opp = filter opp by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; opp = filter opp by 'IsWon' == \\\"true\\\"; opp = filter opp by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"]; remaining_quota = group q by all full, opp by all; remaining_quota = foreach remaining_quota generate (coalesce(sum(q['QuotaAmount']), 0) - coalesce(sum(opp['Amount']), 0)) as 'remaining'; remaining_quota = foreach remaining_quota generate (case when sum('remaining') < 0 then 0 else sum('remaining') end) as 'sum_QuotaAmount';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<quota>"
          },
          {
            "name": "<opportunity>"
          }
        ]
      },
      "opportunity_amount_by_stage": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "single",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "stackvbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = filter q by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; q = filter q by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; q = filter q by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; q = filter q by 'IsClosed' == \\\"false\\\"; q = foreach q generate {{row(static_opportunity_grouping.selection, [], [\\\"grouping\\\", \\\"grouping_column\\\"]).asProjection()}}, 'Amount' as 'Amount', 'Stage.SortOrder' as 'Stage.SortOrder'; q = group q by 'Group'; q = foreach q generate 'Group' as 'Group', sum('Amount') as 'sum_Amount', max('Stage.SortOrder') as 'SortOrder'; q = order q by 'SortOrder';\",\"groups\":[\"Group\"]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "quota_left_next_month": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"QuotaAmount\"]],\"pigql\":\"q = load \\\"<quota>\\\"; q = filter q by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; q = filter q by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; q = filter q by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [\\\"1 month ahead\\\"..\\\"1 month ahead\\\"]; opp = load \\\"<opportunity>\\\"; opp = filter opp by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; opp = filter opp by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; opp = filter opp by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; opp = filter opp by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; opp = filter opp by 'IsWon' == \\\"true\\\"; opp = filter opp by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [\\\"1 month ahead\\\"..\\\"1 month ahead\\\"]; remaining_quota = group q by all full, opp by all; remaining_quota = foreach remaining_quota generate (coalesce(sum(q['QuotaAmount']), 0) - coalesce(sum(opp['Amount']), 0)) as 'remaining'; remaining_quota = foreach remaining_quota generate (case when sum('remaining') < 0 then 0 else sum('remaining') end) as 'sum_QuotaAmount';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<quota>"
          },
          {
            "name": "<opportunity>"
          }
        ]
      },
      "pipe_next_quarter": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"Amount\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = filter q by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; q = filter q by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; q = filter q by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; q = filter q by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; q = filter q by 'IsClosed' == \\\"false\\\"; q = filter q by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"]; q = group q by all; q = foreach q generate coalesce(sum('Amount'), 0) as 'sum_Amount';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "color_open_pipe": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"percent\",\"color\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(percent_open_pipe.result, 0, \\\"sum_percent\\\"), 0).asObject()}} as 'sum_percent'; q = foreach q generate (case when 'sum_percent' > 0 then \\\"#3CAF6D\\\" when 'sum_percent' < 0 then \\\"#D4504C\\\" else \\\"#7D98B3\\\" end) as 'color', 'sum_percent' as 'sum_percent';\",\"autoFilter\":false}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "time_dropdown": {
        "dimensions": [],
        "groups": [],
        "isFacet": false,
        "isGlobal": false,
        "numbers": [],
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"This Quarter\"]}",
        "strings": [],
        "type": "staticflex",
        "useGlobal": false,
        "values": [
          "{\"display\":\"This Month\",\"current\":[[\"month\",0],[\"month\",0]]}",
          "{\"display\":\"This Quarter\",\"current\":[[\"quarter\",0],[\"quarter\",0]]}",
          "{\"display\":\"This Year\",\"current\":[[\"year\",0],[\"year\",0]]}",
          "{\"display\":\"Next Month\",\"current\":[[\"month\",1],[\"month\",1]]}",
          "{\"display\":\"Next Quarter\",\"current\":[[\"quarter\",1],[\"quarter\",1]]}",
          "{\"display\":\"Next Year\",\"current\":[[\"year\",1],[\"year\",1]]}",
          "{\"display\":\"Last Year\",\"current\":[[\"year\",-1],[\"year\",-1]]}"
        ],
        "datasets": []
      },
      "Opportunity_Type": {
        "isFacet": false,
        "isGlobal": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Type\"],\"filters\":[]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_pipe_coverage": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"pigql\":\"won = load \\\"<opportunity>\\\"; won = filter won by 'IsWon' == \\\"true\\\"; won = filter won by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; won = filter won by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; won = filter won by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; won = filter won by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; won = filter won by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; quota = load \\\"<quota>\\\"; quota = filter quota by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; quota = filter quota by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; quota = filter quota by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')\\\")}}; remaining_quota = group won by all full, quota by all; remaining_quota = foreach remaining_quota generate sum(quota['QuotaAmount']) as 'quota', coalesce(sum(won['Amount']), 0) as 'amount'; remaining_quota = foreach remaining_quota generate (case when sum('quota') - sum('amount') > 0 then sum('quota') - sum('amount') else 0 end) as 'remaining_quota'; open = load \\\"<opportunity>\\\"; open = filter open by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; open = filter open by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; open = filter open by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; open = filter open by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; open = filter open by 'IsClosed' == \\\"false\\\"; open = filter open by {{column(open_forecast_categories.selection, [\\\"ForecastCategoryName\\\"]).asEquality(\\\"ForecastCategoryName\\\")}}; open = filter open by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; coverage = group remaining_quota by all full, open by all; coverage = foreach coverage generate coalesce(sum(open['Amount']), 0) as 'amount', sum(remaining_quota['remaining_quota']) as 'remaining_quota'; coverage = foreach coverage generate round(coalesce(sum('amount') / sum('remaining_quota'), 0), 1) as 'sum_pipe_coverage'; f = filter coverage by 'sum_pipe_coverage' > 0;\",\"measures\":[[\"sum\",\"pipe_coverage\"]]}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_quota_attainment": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"quota_attainment\"]],\"pigql\":\"a = load \\\"<opportunity>\\\"; a = filter a by 'IsWon' == \\\"true\\\"; a = filter a by {{column(RecordType_Name.selection, [\\\"RecordType.Name\\\"]).asEquality(\\\"RecordType.Name\\\")}}; a = filter a by {{column(Opportunity_Type.selection, [\\\"Type\\\"]).asEquality(\\\"Type\\\")}}; a = filter a by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"Owner.Name\\\")}}; a = filter a by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"Owner.Role.ParentRole.DeveloperName\\\")}}; a = filter a by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day')\\\")}}; b = load \\\"<quota>\\\"; b = filter b by {{column(direct_reports.selection, [\\\"Name\\\"]).asEquality(\\\"User.Name\\\")}}; b = filter b by {{column(manager_role.selection, [\\\"Owner.Role.ParentRole.DeveloperName\\\"]).asEquality(\\\"User.Role.ParentRole.DeveloperName\\\")}}; b = filter b by {{cell(time_dropdown.selection, 0, \\\"current\\\").asDateRange(\\\"date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')\\\")}}; c = group a by all full, b by all; c = foreach c generate (case when sum(a['Amount']) / sum(b['QuotaAmount']) > 0 then sum(a['Amount']) / sum(b['QuotaAmount']) else 0 end) as 'sum_quota_attainment';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      },
      "kpi_coverage_next_month": {
        "isFacet": false,
        "isGlobal": false,
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar",
          "options": {}
        },
        "selectMode": "single",
        "query": {
          "query": "{\"measures\":[[\"sum\",\"pipe_coverage\"]],\"pigql\":\"q = load \\\"<opportunity>\\\"; q = group q by all; q = foreach q generate {{coalesce(cell(quota_left_next_month.result, 0, \\\"sum_QuotaAmount\\\"), 0).asObject()}} as 'quota_next_month', {{coalesce(cell(pipe_next_month.result, 0, \\\"sum_Amount\\\"), 0).asObject()}} as 'pipe_next_month'; q = foreach q generate (case when 'quota_next_month' == 0 then 1 else 'pipe_next_month' / 'quota_next_month' end) as 'sum_pipe_coverage';\"}",
          "version": -1
        },
        "datasets": [
          {
            "name": "<opportunity>"
          }
        ]
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "container_19": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_18": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_17": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_16": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "ui_opportunity_amount_by_stage": {
        "parameters": {
          "legend": {
            "showHeader": false,
            "show": true,
            "position": "bottom-center",
            "inside": false,
            "customSize": "auto"
          },
          "showMeasureTitle": false,
          "valueType": "compactNumber",
          "showTotal": false,
          "visualizationType": "funnel",
          "step": "opportunity_amount_by_stage",
          "theme": "light",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "stemSegments": 0
        },
        "type": "chart"
      },
      "container_15": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_14": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_13": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "ui_static_opportunity_grouping": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "step": "static_opportunity_grouping",
          "title": ""
        },
        "type": "listselector"
      },
      "ui_percent_pipe_generated": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_percent",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "step": "percent_pipe_generated",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "ui_pipeline_coverage": {
        "parameters": {
          "autoFitMode": "fit",
          "showValues": true,
          "legend": {
            "showHeader": false,
            "show": true,
            "position": "bottom-center",
            "inside": false,
            "customSize": "auto"
          },
          "axisMode": "multi",
          "visualizationType": "vbar",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "left",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "measureAxis2": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": false,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "step": "pipeline_coverage",
          "theme": "light",
          "dimensionAxis": {
            "showTitle": false,
            "showAxis": false,
            "title": "",
            "customSize": "auto"
          },
          "binValues": false,
          "bins": {
            "breakpoints": {
              "low": 0,
              "high": 100
            },
            "bands": {
              "low": {
                "label": "",
                "color": "#B22222"
              },
              "medium": {
                "label": "",
                "color": "#ffa500"
              },
              "high": {
                "label": "",
                "color": "#008000"
              }
            }
          }
        },
        "type": "chart"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_4": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_5": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "ui_kpi_open_pipe": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#FFFFFF",
          "numberSize": 24,
          "step": "kpi_open_pipe",
          "textAlignment": "left",
          "title": "Open Pipe",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "text": "Quota Progress",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_6": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 16,
          "text": "Opportunity Amount by",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_22": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_5": {
        "parameters": {
          "fontSize": 12,
          "text": "Metrics are compared to last week",
          "textAlignment": "center",
          "textColor": "#A3B8CC"
        },
        "type": "text"
      },
      "container_8": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_21": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_4": {
        "parameters": {
          "fontSize": 14,
          "text": "Quota Progress",
          "textAlignment": "center",
          "textColor": "rgb(60, 141, 225)"
        },
        "type": "text"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_20": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "text_7": {
        "parameters": {
          "fontSize": 16,
          "text": "Top Open Opportunities",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_6": {
        "parameters": {
          "fontSize": 20,
          "text": "Opportunity Details",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "chart_1": {
        "parameters": {
          "autoFitMode": "none",
          "showValues": true,
          "legend": {
            "showHeader": true,
            "show": false,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "axisMode": "multi",
          "visualizationType": "hbar",
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "measureAxis2": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "measureAxis1": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "step": "top_opportunities",
          "theme": "light",
          "dimensionAxis": {
            "showTitle": false,
            "showAxis": true,
            "title": "",
            "customSize": "auto"
          },
          "binValues": false,
          "bins": {
            "breakpoints": {
              "low": 0,
              "high": 100
            },
            "bands": {
              "low": {
                "label": "",
                "color": "#B22222"
              },
              "medium": {
                "label": "",
                "color": "#ffa500"
              },
              "high": {
                "label": "",
                "color": "#008000"
              }
            }
          }
        },
        "type": "chart"
      },
      "text_9": {
        "parameters": {
          "fontSize": 20,
          "text": "Quota Progress",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "container_pipeline_coverage": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "chart_3": {
        "parameters": {
          "autoFitMode": "fit",
          "showValues": true,
          "legend": {
            "showHeader": true,
            "show": true,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "axisMode": "multi",
          "visualizationType": "hbar",
          "exploreLink": false,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "measureAxis2": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "measureAxis1": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "sqrtScale": false,
            "referenceLine": null
          },
          "step": "opportunity_amount_by_stage",
          "theme": "light",
          "dimensionAxis": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "customSize": "auto"
          },
          "binValues": false,
          "bins": {
            "breakpoints": {
              "low": 0,
              "high": 100
            },
            "bands": {
              "low": {
                "label": "",
                "color": "#B22222"
              },
              "medium": {
                "label": "",
                "color": "#ffa500"
              },
              "high": {
                "label": "",
                "color": "#008000"
              }
            }
          }
        },
        "type": "chart"
      },
      "ui_RecordType_Name": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "RecordType_Name",
          "title": "Record Type"
        },
        "type": "listselector"
      },
      "ui_time_chart_forecast": {
        "parameters": {
          "showPoints": true,
          "legend": {
            "showHeader": true,
            "show": true,
            "position": "right-top",
            "inside": false,
            "customSize": "auto"
          },
          "visualizationType": "time",
          "missingValue": "connect",
          "timeAxis": {
            "showTitle": true,
            "showAxis": true,
            "title": "",
            "predictiveLine": null
          },
          "exploreLink": true,
          "title": {
            "label": "",
            "align": "center",
            "subtitleLabel": ""
          },
          "trellis": {
            "enable": false,
            "type": "x",
            "parameters": {},
            "chartsPerLine": 4
          },
          "textColor": "#FFFFFF",
          "fillArea": true,
          "measureAxis1": {
            "showTitle": false,
            "referenceLine": {
              "color": "rgb(224, 79, 0)",
              "label": "Quota",
              "value": "{{coalesce(cell(kpi_quota.result, 0, \"sum_QuotaAmount\"), 0).asObject()}}"
            },
            "showAxis": true,
            "title": "",
            "sqrtScale": false
          },
          "step": "time_chart_forecast",
          "theme": "light",
          "showZero": true,
          "axisMode": "multi",
          "measureAxis2": {
            "sqrtScale": false,
            "showAxis": true,
            "showTitle": true,
            "title": "",
            "referenceLine": null
          }
        },
        "type": "chart"
      },
      "text_1": {
        "parameters": {
          "fontSize": 16,
          "text": "Pipeline Coverage",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "number_5": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#FFFFFF",
          "numberSize": 16,
          "step": "kpi_pipe_coverage",
          "textAlignment": "right",
          "title": "Pipe Coverage",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_4": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_quota",
          "numberColor": "#FFFFFF",
          "numberSize": 16,
          "step": "kpi_quota",
          "textAlignment": "right",
          "title": "Quota",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_3": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#FFFFFF",
          "numberSize": 20,
          "step": "kpi_remaining_quota",
          "textAlignment": "right",
          "title": "Quota Remaining",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_2": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_quota_attainment",
          "numberColor": "#FFFFFF",
          "numberSize": 20,
          "step": "kpi_quota_attainment",
          "textAlignment": "right",
          "title": "Quota Attainment",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "number_1": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_quota_attainment",
          "numberColor": "#FFFFFF",
          "numberSize": 32,
          "step": "kpi_quota_attainment",
          "textAlignment": "left",
          "title": "Quota Attainment",
          "titleColor": "#FFFFFF",
          "titleSize": 14
        },
        "type": "number"
      },
      "ui_closed_won": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#FFFFFF",
          "numberSize": 24,
          "step": "kpi_closed_won",
          "textAlignment": "left",
          "title": "Closed Won",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "ui_percent_closed_won": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_percent",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "step": "percent_closed_won",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      },
      "container_12": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_11": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "container_10": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "ui_kpi_coverage_next_month": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#335779",
          "numberSize": 16,
          "step": "kpi_coverage_next_month",
          "textAlignment": "center",
          "title": "Next Month Coverage",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_9": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_pipe_coverage",
          "textAlignment": "right",
          "title": "Pipe Coverage",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_8": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_remaining_after_forecast",
          "textAlignment": "right",
          "title": "Remaining after forecast",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_7": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_QuotaAmount",
          "numberColor": "#091A3E",
          "numberSize": 14,
          "step": "kpi_quota",
          "textAlignment": "right",
          "title": "Quota",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "number_6": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_remaining_quota",
          "numberColor": "#091A3E",
          "numberSize": 32,
          "step": "kpi_remaining_quota",
          "textAlignment": "left",
          "title": "of quota remaining to close",
          "titleColor": "#335779",
          "titleSize": 14
        },
        "type": "number"
      },
      "ui_opp_type": {
        "parameters": {
          "compact": false,
          "expanded": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Opportunity_Type",
          "title": "Opportunity Type"
        },
        "type": "listselector"
      },
      "listselector_2": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "direct_reports",
          "title": "Direct Reports"
        },
        "type": "listselector"
      },
      "ui_kpi_pipe_generated": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_Amount",
          "numberColor": "#FFFFFF",
          "numberSize": 24,
          "step": "kpi_pipe_generated",
          "textAlignment": "left",
          "title": "Pipe Generated",
          "titleColor": "#C5D3E0",
          "titleSize": 14
        },
        "type": "number"
      },
      "listselector_4": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "step": "manager_role",
          "title": "Manager Role"
        },
        "type": "listselector"
      },
      "link_3": {
        "parameters": {
          "destination": "<TeamProductivity>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Team Productivity",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "ui_time_dropdown": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "step": "time_dropdown",
          "title": "Time Period"
        },
        "type": "listselector"
      },
      "link_1": {
        "parameters": {
          "destination": "<ManagerOverview>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Overview",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destination": "<PipelineChanges>",
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Pipeline Changes",
          "textColor": "#091A3E"
        },
        "type": "link"
      },
      "globalfilters_1": {
        "parameters": {},
        "type": "globalfilters"
      },
      "table_1": {
        "parameters": {
          "customBulkActions": [],
          "exploreLink": true,
          "step": "raw_opportunities"
        },
        "type": "table"
      },
      "ui_kpi_coverage_next_quarter": {
        "parameters": {
          "compact": false,
          "exploreLink": true,
          "measureField": "sum_pipe_coverage",
          "numberColor": "#335779",
          "numberSize": 16,
          "step": "kpi_coverage_next_quarter",
          "textAlignment": "center",
          "title": "Next Quarter Coverage:",
          "titleColor": "#335779",
          "titleSize": 12
        },
        "type": "number"
      },
      "ui_open_forecast_categories": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "step": "open_forecast_categories",
          "title": "Base Forecast on"
        },
        "type": "listselector"
      },
      "container_closed_won": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "documentId": "",
          "fit": "original"
        },
        "type": "container"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "expanded": true,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "step": "manager_role",
          "title": "Manager's Role"
        },
        "type": "listselector"
      },
      "ui_percent_open_pipe": {
        "parameters": {
          "compact": true,
          "exploreLink": true,
          "measureField": "sum_percent",
          "numberColor": "#FFFFFF",
          "numberSize": 14,
          "step": "percent_open_pipe",
          "textAlignment": "center",
          "title": "",
          "titleColor": "#335779",
          "titleSize": 16
        },
        "type": "number"
      }
    }
  }
}